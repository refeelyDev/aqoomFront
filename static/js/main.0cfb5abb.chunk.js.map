{"version":3,"sources":["img/grayline.svg","img/AQOOM_logo.png","img/Hand.svg","img/messagebubbles.svg","img/memberprofile.svg","img/spam.svg","img/interaction_line.svg","img/interaction_bubble.svg","img/moderation_line.svg","img/moderation_bubble.svg","img/analytics_line.svg","img/AQOOM_whitelogo.svg","img/aqoom_beta_logo.svg","img/Icons/opentelegram_normal.svg","img/Icons/ban_normal.svg","img/Icons/kick_normal.svg","img/Icons/reply_normal.svg","img/Icons/delete_normal.svg","components/Pages/Register_chat.js","components/Pages/Signin.js","components/Pages/Features.js","components/Tracking/index.js","components/Modules/LeftNav.js","components/Modules/RightDrawer_m.js","components/Modules/Header_main.js","components/Modules/LandingFooter.js","components/Modules/LandingHeader.js","components/Section_title.js","components/Modules/TabMenu.js","components/Modules/MessageContentItem.js","components/Modules/MessageContentContainer.js","components/Pages/Messages.js","components/Pages/MessageLog.js","components/Modules/SearchBox.js","components/Modules/UserManagerUserList.js","components/Modules/userManagerUserRestriction.js","components/Pages/UserManager.js","components/Modules/MessageLog_Modal.js","components/Pages/User.js","components/Modules/SelectboxDate.js","components/Modules/SelectboxDay.js","components/Modules/SelectboxHour.js","components/Modules/SelectboxMin.js","components/Modules/Announcement.js","components/Modules/StartMenu.js","components/Modules/AutoResponce.js","components/Modules/Polls.js","components/Pages/Interactions.js","components/Pages/AntiSpam.js","timezone.js","components/Pages/Settings.js","components/Modules/PeoridPicker.js","components/Modules/AnalysticMemberActivity.js","components/Modules/AnalysticCommunity.js","components/Modules/AnalysticBots.js","components/Pages/Analystic.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","RegisterChat","props","className","Helmet","name","content","itemProp","to","itemScope","itemType","src","INTRO_IMG_HAND","alt","id","FEATURES_IMG_MESSAGES","FEATURES_IMG_PROFILE","FEATURES_IMG_SPAM","React","Component","Signin","t","Axios","post","withCredentials","then","response","status","data","window","localStorage","setItem","JSON","stringify","expire_time","getUTCExpiredTime","document","cookie","location","href","alert","now","Date","expireTime","getTime","setTime","toUTCString","user","this","checkValidation","sessionStorage","AQ_LOGO","dataOnauth","onTelegramAuth","botName","Features","state","list_interaction","list_moderation","list_analytics","GRAY_LINE","INTERACTION_LINE","map","val","idx","key","INTERACTION_BUBBLE","MODERATION_LINE","MODERATION_BUBBLE","ANALYTICS_LINE","Event","category","action","label","ReactGA","event","LeftNav","default_info","group_list","current_group","current_group_members_cnt","chat_id_list","a","loop","botId","result_arr","chat_id","signin_id","getItem","is_valid","is_deverved","ok","result","member","res","permissions","can_send_messages","photo","get","small_file_id","res_photo","dataset","file_path","title","push","setState","item","index","data-chatid","onClick","ev","change_group","chat_list","parse","current_chat_id","getChatInfos","getChatMemCount","getChatGroupInfos","currentTarget","chatid","reload","num","isExist","querySelector","classList","remove","add","setGAEvent","navNum","style","display","addEventListener","draginGrouplist","dragoutGrouplist","activeNav","xmlns","width","height","viewBox","d","transform","fill","aria-hidden","focusable","data-prefix","data-icon","role","data-name","cx","cy","r","RightDrawer","Header_main","chat_photo","isOpen","state_loading","user_id","catch","err","console","log","timezone","undefined","removeItem","logout","toggleDropbox","username","color","cursor","getHeaderPhoto","LandingFooter","AQ_LOGO_W","target","LandingHeader","AQ_LOGO_BETA","onLogin","setValid","Section_title","changeTab","TabMenu","active_tab","opt1","opt2","opt3","opt4","MessageContentItem","img_path","isExpanded","open_modal","modal_content","origin_msg","user_profile_photo","limit","profile_file_id","photos","file_id","reply_to_message","message_id","isMobileDevice","orientation","navigator","userAgent","indexOf","querySelectorAll","forEach","v","userid","isBan","confirm","setTimeout","can_send_media_messages","can_send_polls","can_send_other_messages","can_pin_messages","can_change_info","until_date","reply_to_message_id","mid","text","close_modal","value","bind","user_name","kickMember","open_reply_modal","msg_id","delete_this_message","entities","type","msg_date","date","movetoMemberProfile","first_name","last_name","getMonth","getDate","getHours","getMinutes","replied_date","image","sticker","validateURL","expand_minipulation","telegram_actions","TELEGRAM_ICON","BEN_ICON","KICK_ICON","REPLY_ICON","DELETE_ICON","onChange","updateContent","placeholder","data-mid","send_reply_message","MessageContentContainer","contents","messages","msg","is_allMessages","message","video","audio","message_json","length","Segment_Tabs","tab","questions","mentions","Messages","current_pg_question","current_pg_mention","current_pg","isbusy","onScroll","append_messages","get_messages","get_questions","get_mentions","removeEventListener","page","concat","scrollY","innerHeight","body","clientHeight","getCurrentScrollPercentage","set_activeTab","MessageLog","history","go","split","member_id","extract_query","back","SearchBox","method","searchMember","UserManagerUserList","members","search_query","query","updateMemberList","getMemberList","is_bot","is_interested","pathname","search","warning_pt","act_txt_cnt","act_photo_cnt","act_url_cnt","updated_at","restrictMember","colSpan","Switch","htmlFor","changePermission","defaultChecked","is_active","UserManagerUserRestriction","restrictions","getRestrictions","forms","restrict_adding_bot","checked","bot","restrict_adding_user","can_invite_users","invite","restrict_mute","new_member","restrict_bot","is_block_bot","restrict_invite_user","is_block_invite","restrict_capcha","is_restrict_new_member","UserManager","MessageLogModal","useState","messageLog","setMessageLog","message_log","message_log_open","closeModal","User","user_profile_data","profile_pic","active_hours","top_active","setValue","avg_msg_perDay","Math","floor","act_media","cal_participate_date","created_at","standard","i","joined_date","join","diff","today","label_arr","toString","slice","is_matched","date_cnt","message_crt","getElementById","Chart","labels","datasets","borderColor","borderWidth","lineTension","options","legend","responsive","scales","xAxes","ticks","fontSize","fontFamily","gridLines","yAxes","stepSize","beginAtZero","time_24hr","time_active_hour","time","cal_active_hours","active_crt","backgroundColor","lineWidth","ctx","act_questions","position","layout","padding","top","bottom","left","right","resize","res_member","res_chatmember","total_count","res_file","makeChartType","makeChartMessage","makeChartActiveHour","total_msg","backtoManage","interestMember","openTelegram","cal_participate_week","toggleMessageLogModal","SelectboxDate","setDate","setIsOpen","getFormattedDate","yy","getFullYear","mm","dd","onDayClick","day","toggleDatePicker","SelectboxDay","setDay","list","multiple","el","findIndex","element","shift","pop","sep_left","sep_right","decide_inout","substr","SelectboxHour","setOpen","selected_hour","setHour","hourlist","hour","background_listner","SelectboxMin","minlist","min","SettingTime","Announcement","current_item","opened_selectbox","message_type","uploadImage","isOpen_btn_modal","message_btns","origin_messages","onEditing","editId","nextSibling","toggle","inline_text","url","inline_url","btns","merge_left","merge_right","deleteInlineBtn","btn","toggleManipulationBtns","editInlineBtn","file","files","size","makePreview","fr","FileReader","onload","e","img_el","createElement","setAttribute","target_el","firstChild","removeChild","appendChild","readAsDataURL","pre_msg","buttons","parseInt","schedule_type","announce_txt","ann_id","schedule_id","getAnnouncement","selected_date","selected_month","selected_monthofday","announce_type","announceType","selectedHour","selected_min","selectedMin","selectedDate","selected_weekofday","selectedDay","month","monthofday","weekofday","content_type","content_img","changeActiveAnnounce","verifyExpire","deleteAnnounce","cur_time","comparison_time","setMonth","schedule_month","schedule_dayofmonth","setHours","schedule_hour","setMinutes","schedule_min","toggleSelectbox","change_item","uploadedImage","toggleAddBtnModal","getInlineBtns","registerAnnounceMsg","autoComplete","setInlineBtns","FAQ_register","imageType","crr_message","removeImagePreview","form_data","FormData","append","welcome_txt","getStartMenu","clearTexts","img","targetid","blob","Blob","reader","response_type","content_txt","editSelectedWelcome","deleteSelectdWelcome","welcome_msg","submit_startmenu","AutoResponce","keyword_type","faq_txt","faq_response","keywords","faq_content","changeActiveFAQ","getFaqList","editSelectedFAQ","deleteSelectedFAQ","registerFAQMsg","Poll_Table_Row_Input","Poll_Table_Row_Select","cur_item","set_cur_item","is_open","set_is_open","Poll_Table_Row_Dates","Poll_Table_Row_Response","option_cnt","set_option_cnt","el_input","append_row_option","Polls","poll_question","poll_type","registerPoll","Interactions","FieldRow","fieldName","getFieldName","field","initOptions","isActive","AntiSpam","anti_options","blacklist","disabledSlashCommand","getWordData","getWhitelistURL","getWhitelistUser","word","whitelisturl","checkIfPattern","pattern","whitelistuser","regx_test","regx","test","word_name","deleteBlacklist","whitelistURL","url_pattern","deleteWhitelistURL","whitelistUser","whiltelist","username_pattern","deleteWhitelistUser","anti_image","anti_url","anti_forward","anti_voice","anti_gif","anti_sticker","anti_join_message","anti_left_message","submit_blacklist","submit_whitelisturl","submit_whitelistUser","Settings","tz_cur","isOpenModal","tz_lists","cur_pos","isSuccess","call","tz","data-tzid","handle_tz","tz_pos","offset","utc","toggleTZPicker","setTimezone","PeoridPicker","date_from","set_datefrom","isOpened_from","open_date_from","date_to","set_dateto","isOpened_to","open_date_to","getFormattedDate_from","getFormattedDate_to","open_date_from_modal","open_date_to_modal","confirm_peorid","AnalysticMemberActivity","analystic_data","chart","barThickness","update","date_len","date_to_format","innerText","temp","replace","dataset_text","dataset_question","dataset_media","dataset_forward","is_matched_text","is_matched_question","is_matched_media","is_matched_forward","total","question","media","forward","pointBackgroundColor","pointBorderWidth","suggestedMin","suggestedMax","a_month_ago","getDay","from","date_past","diff_result","total_cnt","cnt","makeTotalMsgChart","getDateAMonthAgo","makeInactiveUserChart","confirmPeorid","AnalysticCommunity","total_member","makeChart","peorid","dataset_new","dataset_left","is_matched_new","is_matched_left","new","dataset_sent","dataset_deleted","dataset_kick","dataset_restrict","is_matched_sent","is_matched_deleted","is_matched_kick","is_matched_restrict","restrict","sent","deleted","kick","Content_tab","AnalysticBots","Analystic","defaults","baseURL","initialize","debug","createBrowserHistory","listen","set","hash","pageview","App","isValid","setIsValid","statusNav","setStatusNav","setChatInfo","isLiving","getCookie","inConsole","cookies","trim","basename","RightDrawer_m","setStatus","path","exact","render","Boolean","hostname","match","ReactDOM","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0cfb5abb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/grayline.beaba093.svg\";","module.exports = __webpack_public_path__ + \"static/media/AQOOM_logo.2ada93ac.png\";","module.exports = __webpack_public_path__ + \"static/media/Hand.33162f95.svg\";","module.exports = __webpack_public_path__ + \"static/media/messagebubbles.9979cc47.svg\";","module.exports = __webpack_public_path__ + \"static/media/memberprofile.415e9544.svg\";","module.exports = __webpack_public_path__ + \"static/media/spam.4b517870.svg\";","module.exports = __webpack_public_path__ + \"static/media/interaction_line.c66dd7ac.svg\";","module.exports = __webpack_public_path__ + \"static/media/interaction_bubble.ca20be28.svg\";","module.exports = __webpack_public_path__ + \"static/media/moderation_line.a1f4329f.svg\";","module.exports = __webpack_public_path__ + \"static/media/moderation_bubble.adbedcb9.svg\";","module.exports = __webpack_public_path__ + \"static/media/analytics_line.e258e440.svg\";","module.exports = __webpack_public_path__ + \"static/media/AQOOM_whitelogo.311ee2ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/aqoom_beta_logo.69b2b3c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/opentelegram_normal.f92e1346.svg\";","module.exports = __webpack_public_path__ + \"static/media/ban_normal.2beb9e58.svg\";","module.exports = __webpack_public_path__ + \"static/media/kick_normal.8177ec3b.svg\";","module.exports = __webpack_public_path__ + \"static/media/reply_normal.2c1c3f0c.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete_normal.a4773144.svg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Helmet } from 'react-helmet';\nimport INTRO_IMG_HAND from \"../../img/Hand.svg\";\nimport FEATURES_IMG_MESSAGES from \"../../img/messagebubbles.svg\";\nimport FEATURES_IMG_PROFILE from \"../../img/memberprofile.svg\";\nimport FEATURES_IMG_SPAM from \"../../img/spam.svg\";\nimport \"../../style/css/Register_chat.min.css\";\n\nclass RegisterChat extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"app_container\">\n        <Helmet>\n          <title>AQOOM telegram CRM service</title>\n          <meta name=\"description\" content=\"Telegram chat bot related with CRM. make you easy to manage your supergroup community. you can control all the featues in the dashboard.\" />\n          <meta name=\"twitter:card\" content=\"summary\"></meta>\n          <meta name=\"twitter:title\" content=\"AQOOM CRM bot service\" />\n          <meta name=\"twitter:description\" content=\"Telegram CRM bot service. easy to manage your supergroup community and grow it up more effectively.\" />\n          <meta name=\"twitter:image\" content=\"https://aqoom.chat/AQOOM_logo_whiteBG.jpg\" />\n          <meta name=\"twitter:site\" content=\"https://aqoom.chat/\" />\n        </Helmet>\n        <div className=\"main_contents\">\n          <section className=\"main_intro\">\n            <div className=\"intro_desc\">\n              <h2 itemProp=\"\">managing Telegram groups made easier</h2>\n              <p>\n              Creating solutions for Community Managers to have an easy and deep interaction with users while obtaining the right data that can help further grow your community.\n              </p>\n              <Link to=\"/signin\">Try AQOOM</Link>\n            </div>\n            <div className=\"intro_img\" itemScope itemType=\"http://schema.org/Drawing\">\n              <img src={INTRO_IMG_HAND} alt=\"telegram CRM bot service\" itemProp=\"hand drawing\"></img>\n            </div>\n          </section>\n          <section className=\"main_features\" id=\"main_features\">\n            <div className=\"features_item\">\n              <div className=\"feature_img\">\n                <img src={FEATURES_IMG_MESSAGES} alt=\"CRM feature messaging window\"></img>\n              </div>\n              <div className=\"feature_desc\">\n                <h2>\n                  listen <br />& interact\n                </h2>\n                <p>\n                  With an all-in-one interface, you know you can listen and\n                  interact with your users effectively. There’s a dedicated\n                  space for questions and messages directed for admins, so\n                  you’ll never miss an opportunity to reply and interact.\n                </p>\n              </div>\n            </div>\n            <div className=\"features_item\">\n              <div className=\"feature_desc\">\n                <h2>growth and user focused</h2>\n                <p>\n                  All the information you know you need to know about your\n                  community and users are all included. With these data, you can\n                  strategize, plan ahead for your future events and promotions.\n                </p>\n              </div>\n              <div className=\"feature_img\">\n                <img src={FEATURES_IMG_PROFILE} alt=\"CRM feature user profile\"></img>\n              </div>\n            </div>\n            <div className=\"features_item\">\n              <div className=\"feature_img\">\n                <img src={FEATURES_IMG_SPAM} alt=\"CRM feature anti spam, block anonymous user\"></img>\n              </div>\n              <div className=\"feature_desc\">\n                <h2>\n                  protecting <br />\n                  your community\n                </h2>\n                <p>\n                We are sure that your community will be protected in any form of spam. With basic to advanced filters, you have full control over your community. These can protect and improve your brand image.\n                </p>\n              </div>\n            </div>\n          </section>\n          <section className=\"main_footer\">\n            <div className=\"footer_desc\">\n              <p>\n                Start and grow your community with ease! <br /> Manage it like\n                never before.\n              </p>\n            </div>\n            <Link to=\"/signin\">Try AQOOM</Link>\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RegisterChat;\n","import React from \"react\";\nimport Axios from \"axios\";\nimport AQ_LOGO from \"../../img/AQOOM_logo.png\";\nimport TelegramLoginButton from \"react-telegram-login\";\nimport \"../../style/css/Signin.min.css\";\n\nclass Signin extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  checkValidation(t) {\n    Axios.post(\n      \"checkValidation\",\n      {\n        id: t\n      },\n      {\n        withCredentials: true\n      }\n    ).then(response => {\n      if (response.status === 200) {\n        if (response.data !== false) {\n          window.localStorage.setItem(\n            \"chat_id_list\",\n            JSON.stringify(response.data.id)\n          );\n          window.localStorage.setItem(\"chat_id\", response.data.id[0]);\n          const expire_time = this.getUTCExpiredTime();\n          document.cookie = \"living=true; expires=\" + expire_time;\n          window.location.href = '/';\n        } else {\n          alert(\n            \"it's not valid input. check again if chat Room's name or activation code is valid.\"\n          );\n        }\n      }\n    });\n  }\n\n  getUTCExpiredTime() {\n    var now = new Date();\n    var time = now.getTime();\n    var expireTime = time + 2 * 3600000;\n    now.setTime(expireTime);\n\n    return now.toUTCString();\n  }\n\n  onTelegramAuth(user) {\n    this.checkValidation(user.id);\n    window.sessionStorage.setItem('tel_id', user.id);\n  }\n\n  render() {\n    return (\n      <div className=\"signin_container\">\n        <div className=\"aqoom_logo\">\n          <img src={AQ_LOGO} alt=\"aqoom logo\"></img>\n        </div>\n        <div className=\"login_box\">\n          <p className=\"login_info\">\n            Please login with your Telegram <br />\n            to proceed to your dashboard.\n          </p>\n          <TelegramLoginButton\n            dataOnauth={user => this.onTelegramAuth(user)}\n            botName={this.props.botName}\n          />\n          <p className=\"login_help\">\n            AQOOM uses Telegram Secure ID to provide seamless automation of\n            group management services. To learn more about Telegram Login works\n            for websites, click <a href=\"https://telegram.org/blog/login\">here</a>. <br/><br/> Having trouble logging in? Contact us at \n            <a href=\"mailto:info@aqoom.com\"> info@aqoom.com</a>\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Signin;\n","import React from \"react\";\nimport \"../../style/css/Features.min.css\";\nimport { Helmet } from 'react-helmet';\nimport GRAY_LINE from \"../../img/grayline.svg\";\nimport INTERACTION_LINE from \"../../img/interaction_line.svg\";\nimport INTERACTION_BUBBLE from \"../../img/interaction_bubble.svg\";\nimport MODERATION_LINE from \"../../img/moderation_line.svg\";\nimport MODERATION_BUBBLE from \"../../img/moderation_bubble.svg\";\nimport ANALYTICS_LINE from \"../../img/analytics_line.svg\";\n\nclass Features extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list_interaction: [\n        \"Collected Questions\",\n        \"Messages Directed to Admins\",\n        \"Scheduled Announcemnets\",\n        \"Welcome Messages\"\n      ],\n      list_moderation: [\n        \"Anti-Spam\",\n        \"Filters\",\n        \"Warning Points System\",\n        \"Activity Notification\"\n      ],\n      list_analytics: [\n        \"Scheduled Reports\",\n        \"User data insights\",\n        \"Community Reports\",\n        \"Bot performance\"\n      ]\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"features_container\">\n        <Helmet>\n          <title>AQOOM telegram CRM service features</title>\n          <meta name=\"description\" content=\"introduce for Telegram customer relationship management service. let you see all wonderful features as a free!\" />\n          <meta name=\"twitter:card\" content=\"summary\"></meta>\n          <meta name=\"twitter:title\" content=\"AQOOM CRM bot service\" />\n          <meta name=\"twitter:description\" content=\"Telegram CRM bot service. easy to manage your supergroup community and grow it up more effectively.\" />\n          <meta name=\"twitter:image\" content=\"https://aqoom.chat/AQOOM_logo_whiteBG.jpg\" />\n          <meta name=\"twitter:site\" content=\"https://aqoom.chat/\" />\n        </Helmet>\n        <section className=\"features_intro\">\n          <h2 className=\"session_title\">just the right features.</h2>\n          <p className=\"session_desc\">\n            We collected all the features that you need for your growing\n            Telegram community. These features can help you have the right tools\n            managing and moderating your groups.\n          </p>\n          <a href=\"#/signin\">Try AQOOM</a>\n        </section>\n\n        <section className=\"features_interaction\">\n          <img src={GRAY_LINE} alt=\"aqoom can insteract with all user of your communities\"></img>\n          <img src={INTERACTION_LINE} alt=\"user interaction is a key to improve your communities.\"></img>\n          <h2 className=\"session_title\">interaction</h2>\n          <ul>\n            {this.state.list_interaction.map((val, idx) => {\n              return (\n                <li key={idx}>\n                  <div className=\"check_icon\"></div>\n                  <p>{val}</p>\n                </li>\n              );\n            })}\n          </ul>\n          <p className=\"session_desc\">\n            Interacting with your users has never been this easy. With an\n            all-in-one interface where you can directly reply to questions,\n            answer queries, or just reply to different kind of messages, you’ll\n            never miss an opportunity to indulge in to a conversation. You can\n            also directly ban, kick, or delete a message in the same message\n            log. You can also set different announcements for different times.\n          </p>\n          <img src={INTERACTION_BUBBLE} alt=\"telegram CRM feature, available kick, ban, delete message and so on\"></img>\n        </section>\n        <section className=\"features_moderation\">\n          <img src={GRAY_LINE} alt=\"AQOOM gray line\"></img>\n          <img src={MODERATION_LINE} alt=\"moderate chat group. available anti spam, message fileter\"></img>\n          <h2 className=\"session_title\">moderation</h2>\n          <ul>\n            {this.state.list_moderation.map((val, idx) => {\n              return (\n                <li key={idx}>\n                  <div className=\"check_icon\"></div>\n                  <p>{val}</p>\n                </li>\n              );\n            })}\n          </ul>\n          <p className=\"session_desc\">\n            From basic to advanced filters, you know that there’s no message\n            that is going to be out of control. You have full control over on\n            what are allowed and restricted in your chat group. And with the\n            Warning Points System, you have an option to send warnings, ban, or\n            kick a member who accumulated a certain amount of points. And even\n            if you have not turned on a filter, you’ll be notified on what is on\n            and what you could be changed.\n          </p>\n          <img src={MODERATION_BUBBLE} alt=\"Telegram chat group moderation feature\"></img>\n        </section>\n        <section className=\"features_analytics\">\n          <img src={GRAY_LINE} alt=\"aqoom gray line\"></img>\n          <img src={ANALYTICS_LINE} alt=\"you are able to see an analytics chart of your group. it will make you be inspired.\"></img>\n          <h2 className=\"session_title\">data & analytics</h2>\n          <ul>\n            {this.state.list_analytics.map((val, idx) => {\n              return (\n                <li key={idx}>\n                  <div className=\"check_icon\"></div>\n                  <p>{val}</p>\n                </li>\n              );\n            })}\n          </ul>\n          <p className=\"session_desc\">\n            We provide the right data for your Community Managers to gain\n            insights about your users to strategize and formulate your new next\n            event or promotion! You can also receive reports whenever you want\n            it, no reminders needed! In addition to that you’ll know how much is\n            your bot performing in your Telegram groups. So you’ll know if you\n            need to be more lenient or if you just have just the right\n            restrictions.\n          </p>\n        </section>\n        <img src={GRAY_LINE} alt=\"aqoom gray line\"></img>\n        <h4 className=\"foot_desc\">\n        Just the right amount of features that fits your needs.\n        </h4>\n        <a href=\"#/signin\">Try AQOOM</a>\n      </div>\n    );\n  }\n}\n\nexport default Features;\n","import ReactGA from \"react-ga\";\n\nexport const initGa = (trackingID) => {           \n    ReactGA.initialize(trackingID);\n }\n\nexport const PageView = () => {  \n    ReactGA.pageview(window.location.pathname +  \n                     window.location.search); \n}\n\n/**\n * Event - Add custom tracking event.\n * @param {string} category \n * @param {string} action \n * @param {string} label \n */\nexport const Event = (category, action, label) => {\n    ReactGA.event({\n      category: category,\n      action: action,\n      label: label\n    });\n  };","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport \"../../style/css/LeftNav.min.css\";\nimport { Event } from '../Tracking';\n\nclass LeftNav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      default_info: [],\n      group_list: [],\n      current_group: [],\n      current_group_members_cnt: 0\n    };\n  }\n  async getChatGroupInfos(chat_id_list) {\n    const loop = async function(botId) {\n      let result_arr = [];\n\n      for (var chat_id of chat_id_list) {\n        try {\n          const signin_id = window.sessionStorage.getItem('tel_id');\n          const is_valid = await Axios.post(`https://api.telegram.org/bot${botId}/getChatAdministrators`, {chat_id: chat_id});\n          let is_deverved = false;\n\n          if (is_valid.data.ok) {\n            for (var member of is_valid.data.result) {\n              if (member.user['id'] == signin_id && !member.user['is_bot']) {\n                is_deverved = true;\n              }\n            }\n          }\n\n          if (!is_deverved) {\n            continue;\n          } else {\n            const res = await Axios.post(`https://api.telegram.org/bot${botId}/getChat`, {\n              chat_id: chat_id\n            })\n            if (res.data.result.permissions.can_send_messages) {\n              if (res.data.result.photo) {\n                const res_photo = await Axios.get(`https://api.telegram.org/bot${botId}/getFile?file_id=` + res.data.result.photo.small_file_id)\n                  const dataset = {\n                    id: res.data.result.id,\n                    photo: res_photo.data.result.file_path,\n                    title: res.data.result.title\n                  };\n                  \n                  result_arr.push(dataset)\n                \n              } else {\n                const dataset = {\n                  id: res.data.result.id,\n                  photo: '',\n                  title: res.data.result.title\n                };\n  \n                result_arr.push(dataset)\n              }\n            }\n          }\n        } catch (err) {\n          continue;\n        }\n        \n      }\n      return result_arr;\n    }\n  \n    \n    const result = await loop(this.props.botId)\n  \n    this.setState({\n      group_list: result.map((item, index) => {\n        return (\n          <div\n            className=\"group_list\"\n            key={index}\n            data-chatid={item.id}\n            onClick={ev => this.change_group(ev)}\n          >\n            <div className=\"group_img\">\n              {item.photo ?\n            <img src={`https://api.telegram.org/file/bot${this.props.botId}/${item.photo}`} alt=\"group profile image\"></img>\n            :\n            null  \n            }\n              \n            </div>\n            <div className=\"group_title\">\n              <p>{item.title}</p>\n            </div>\n          </div>\n        );\n      })\n    });\n  }\n\n  getChatInfos(chat_id) {\n    if (chat_id) {\n      return Axios.post(`https://api.telegram.org/bot${this.props.botId}/getChat`, {\n        chat_id: chat_id\n      }).then(res => {\n        if (res.data.result.photo) {\n          Axios.get(\n            `https://api.telegram.org/bot${this.props.botId}/getFile?file_id=` +\n              res.data.result.photo.small_file_id\n          ).then(res_photo => {\n            const dataset = {\n              id: res.data.result.id,\n              photo: res_photo.data.result.file_path,\n              title: res.data.result.title\n            };\n           \n            this.setState({current_group: dataset});\n           \n          });\n        } else {\n          const dataset = {\n            id: res.data.result.id,\n            photo: \"\",\n            title: res.data.result.title\n          };\n\n          this.setState({current_group: dataset});          \n        }\n      });\n    }\n  }\n  getChatMemCount(chat_id) {\n    return Axios.post(`https://api.telegram.org/bot${this.props.botId}/getChatMembersCount`, {\n      chat_id: chat_id\n    }).then((res) => {\n      this.setState({current_group_members_cnt: res.data.result})\n    })\n  }\n  componentWillMount() {\n    const chat_list = JSON.parse(window.localStorage.getItem(\"chat_id_list\"));\n    const current_chat_id = window.localStorage.getItem(\"chat_id\");\n\n    if (current_chat_id) {\n      this.getChatInfos(current_chat_id);\n      this.getChatMemCount(current_chat_id);\n    }\n\n    this.getChatGroupInfos(chat_list);\n  \n  }\n\n  change_group(event) {\n    window.localStorage.setItem(\"chat_id\", event.currentTarget.dataset.chatid);\n    window.location.reload();\n    Event('navigation', 'Change group', 'change group');\n  }\n\n  activeNav(num) {\n    const isExist = document.querySelector(\".nav_contents > a.active\");\n    if (isExist) {\n      isExist.classList.remove(\"active\");\n    }\n    document\n      .querySelector(`.nav_contents > a:nth-child(${num})`)\n      .classList.add(\"active\");\n    \n    this.setGAEvent(num);\n\n    return false;\n  }\n\n  setGAEvent(navNum) {\n    switch (navNum) {\n      case 1 : {\n        Event('navigation', 'change category', 'Analystic');\n        break;\n      }\n      case 2 : {\n        Event('navigation', 'change category', 'Members');\n        break;\n      }\n      case 3 : {\n        Event('navigation', 'change category', 'Messages');\n        break;\n      }\n      case 4 : {\n        Event('navigation', 'change category', 'Interactions');\n        break;\n      }\n      case 5 : {\n        Event('navigation', 'change category', 'Anti-spam');\n        break;\n      }\n      case 6 : {\n        Event('navigation', 'change category', 'Setting');\n        break;\n      }\n    }\n  }\n\n  dragoutGrouplist () {\n    document.querySelector('.nav_groups').classList.add('active');\n    document.querySelector('.dim').style.display = 'block';\n    document.querySelector('.dim').addEventListener('click', this.draginGrouplist)\n  }\n\n  draginGrouplist () {\n    document.querySelector('.nav_groups').classList.remove('active');\n    document.querySelector('.dim').style.display = 'none';\n  }\n\n  render() {\n    return (\n      <section className=\"left_nav\">\n        <div className=\"current_group\" onClick={() => this.dragoutGrouplist()}>\n          <div className=\"group_img\">\n            {\n              this.state.current_group.photo\n              ?\n              <img src={`https://api.telegram.org/file/bot${this.props.botId}/${this.state.current_group.photo}`} alt=\"group profile image\"></img>\n              :\n              null\n            }\n            \n          </div>\n          <div className=\"group_title\">\n            <p>{this.state.current_group.title}</p>\n            <p>\n              {this.state.current_group_members_cnt} members\n            </p>\n          </div>\n          <div className=\"arrow_down_icon\"></div>\n        </div>\n        <div className=\"nav_groups\">{this.state.group_list}</div>\n        <div className=\"nav_contents\">\n          <Link to=\"/analytics\" onClick={ev => this.activeNav(1)}>\n            <i className=\"icon icon-analytics\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"8.727\" viewBox=\"0 0 16 8.727\">\n                <path id=\"ic_timeline_24px\" d=\"M17,7.455a1.459,1.459,0,0,1-1.455,1.455,1.236,1.236,0,0,1-.371-.051L12.585,11.44a1.285,1.285,0,0,1,.051.378,1.455,1.455,0,1,1-2.909,0,1.285,1.285,0,0,1,.051-.378L7.924,9.585a1.43,1.43,0,0,1-.756,0L3.858,12.9a1.236,1.236,0,0,1,.051.371,1.455,1.455,0,1,1-1.455-1.455,1.236,1.236,0,0,1,.371.051L6.142,8.56a1.285,1.285,0,0,1-.051-.378A1.455,1.455,0,0,1,9,8.182a1.285,1.285,0,0,1-.051.378L10.8,10.415a1.43,1.43,0,0,1,.756,0l2.582-2.589a1.236,1.236,0,0,1-.051-.371,1.455,1.455,0,1,1,2.909,0Z\" transform=\"translate(-1 -6)\" fill=\"currentColor\"/>\n              </svg>\n            </i> Analytics\n          </Link>\n          <Link to=\"/members\" onClick={ev => this.activeNav(2)}>\n            <i className=\"icon icon-members\">\n            <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"user-friends\" className=\"svg-inline--fa fa-user-friends fa-w-20\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\"><path fill=\"currentColor\" d=\"M192 256c61.9 0 112-50.1 112-112S253.9 32 192 32 80 82.1 80 144s50.1 112 112 112zm76.8 32h-8.3c-20.8 10-43.9 16-68.5 16s-47.6-6-68.5-16h-8.3C51.6 288 0 339.6 0 403.2V432c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48v-28.8c0-63.6-51.6-115.2-115.2-115.2zM480 256c53 0 96-43 96-96s-43-96-96-96-96 43-96 96 43 96 96 96zm48 32h-3.8c-13.9 4.8-28.6 8-44.2 8s-30.3-3.2-44.2-8H432c-20.4 0-39.2 5.9-55.7 15.4 24.4 26.3 39.7 61.2 39.7 99.8v38.4c0 2.2-.5 4.3-.6 6.4H592c26.5 0 48-21.5 48-48 0-61.9-50.1-112-112-112z\"></path></svg>  \n            </i> Members\n          </Link>\n          <Link to=\"/messages\" onClick={ev => this.activeNav(3)}>\n            <i className=\"icon icon-messages\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n              <path id=\"ic_question_answer_24px\" d=\"M17.2,5.2H15.6v7.2H5.2V14a.8.8,0,0,0,.8.8h8.8L18,18V6A.8.8,0,0,0,17.2,5.2ZM14,10V2.8a.8.8,0,0,0-.8-.8H2.8a.8.8,0,0,0-.8.8V14l3.2-3.2h8A.8.8,0,0,0,14,10Z\" transform=\"translate(-2 -2)\" fill=\"currentColor\"/>\n            </svg>\n            </i> Messages\n          </Link>\n          <Link to=\"/interactions\" onClick={ev => this.activeNav(4)}>\n            <i className=\"icon icon-messages\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"13.819\" viewBox=\"0 0 16 13.819\">\n              <g id=\"ic_record_voice_over_24px\" transform=\"translate(-1 -2)\">\n                <circle id=\"Ellipse_3\" data-name=\"Ellipse 3\" cx=\"3\" cy=\"3\" r=\"3\" transform=\"translate(3.996 4)\" fill=\"currentColor\"/>\n                <path id=\"Path_3\" data-name=\"Path 3\" d=\"M6.819,11.455C4.877,11.455,1,12.43,1,14.364v1.455H12.637V14.364C12.637,12.43,8.76,11.455,6.819,11.455Zm5.644-7.011L11.241,5.673a2.413,2.413,0,0,1,0,2.829l1.222,1.229a3.722,3.722,0,0,0,0-5.288ZM14.87,2,13.684,3.186a5.8,5.8,0,0,1,0,7.811l1.186,1.186A7.149,7.149,0,0,0,14.87,2Z\" fill=\"currentColor\"/>\n              </g>\n            </svg>\n            </i> Interactions\n          </Link>\n          <Link to=\"/antispam\" onClick={ev => this.activeNav(5)}>\n            <i className=\"icon icon-messages\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n              <path id=\"ic_feedback_24px\" d=\"M16.4,2H3.6A1.6,1.6,0,0,0,2.008,3.6L2,18l3.2-3.2H16.4A1.6,1.6,0,0,0,18,13.2V3.6A1.6,1.6,0,0,0,16.4,2Zm-5.6,9.6H9.2V10h1.6Zm0-3.2H9.2V5.2h1.6Z\" transform=\"translate(-2 -2)\" fill=\"currentColor\"/>\n            </svg>\n            </i> Anti-Spam\n          </Link>\n          <Link to=\"/settings\" onClick={ev => this.activeNav(6)}>\n            <i className=\"icon icon-messages\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16.449\" viewBox=\"0 0 16 16.449\">\n              <path id=\"ic_settings_24px\" d=\"M16.383,11.03a6.409,6.409,0,0,0,.058-.806,6.41,6.41,0,0,0-.058-.806l1.735-1.357a.415.415,0,0,0,.1-.526L16.572,4.689a.413.413,0,0,0-.5-.181l-2.048.822a6.009,6.009,0,0,0-1.39-.806L12.32,2.345a.4.4,0,0,0-.4-.345H8.628a.4.4,0,0,0-.4.345L7.912,4.525a6.319,6.319,0,0,0-1.39.806L4.474,4.508a.4.4,0,0,0-.5.181L2.328,7.535a.405.405,0,0,0,.1.526L4.162,9.418a6.522,6.522,0,0,0-.058.806,6.522,6.522,0,0,0,.058.806L2.426,12.387a.415.415,0,0,0-.1.526l1.645,2.846a.413.413,0,0,0,.5.181l2.048-.822a6.009,6.009,0,0,0,1.39.806L8.225,18.1a.4.4,0,0,0,.4.345h3.29a.4.4,0,0,0,.4-.345l.313-2.179a6.319,6.319,0,0,0,1.39-.806l2.048.822a.4.4,0,0,0,.5-.181l1.645-2.846a.415.415,0,0,0-.1-.526ZM10.272,13.1a2.879,2.879,0,1,1,2.879-2.879A2.882,2.882,0,0,1,10.272,13.1Z\" transform=\"translate(-2.271 -2)\" fill=\"currentColor\"/>\n            </svg>\n            </i> Settings\n          </Link>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default LeftNav;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../../style/css/RightDrawer_m.min.css\";\n\nclass RightDrawer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  activeNav(num) {\n    const isExist = document.querySelector(\".nav_contents > a.active\");\n    if (isExist) {\n      isExist.classList.remove(\"active\");\n    }\n    document\n      .querySelector(`.nav_contents > a:nth-child(${num})`)\n      .classList.add(\"active\");\n    return false;\n  }\n\n  render() {\n    return (\n      <div className=\"right_drawer_m\">\n        <div className=\"nav_contents\">\n          <Link to=\"/analytics\" onClick={(ev) => this.activeNav(1)}>\n            <i className=\"icon icon-analytics\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"16\"\n                height=\"8.727\"\n                viewBox=\"0 0 16 8.727\"\n              >\n                <path\n                  id=\"ic_timeline_24px\"\n                  d=\"M17,7.455a1.459,1.459,0,0,1-1.455,1.455,1.236,1.236,0,0,1-.371-.051L12.585,11.44a1.285,1.285,0,0,1,.051.378,1.455,1.455,0,1,1-2.909,0,1.285,1.285,0,0,1,.051-.378L7.924,9.585a1.43,1.43,0,0,1-.756,0L3.858,12.9a1.236,1.236,0,0,1,.051.371,1.455,1.455,0,1,1-1.455-1.455,1.236,1.236,0,0,1,.371.051L6.142,8.56a1.285,1.285,0,0,1-.051-.378A1.455,1.455,0,0,1,9,8.182a1.285,1.285,0,0,1-.051.378L10.8,10.415a1.43,1.43,0,0,1,.756,0l2.582-2.589a1.236,1.236,0,0,1-.051-.371,1.455,1.455,0,1,1,2.909,0Z\"\n                  transform=\"translate(-1 -6)\"\n                  fill=\"currentColor\"\n                />\n              </svg>\n            </i>\n            \n          </Link>\n          <Link to=\"/members\" onClick={(ev) => this.activeNav(2)}>\n            <i className=\"icon icon-members\">\n              <svg\n                aria-hidden=\"true\"\n                focusable=\"false\"\n                data-prefix=\"fas\"\n                data-icon=\"user-friends\"\n                className=\"svg-inline--fa fa-user-friends fa-w-20\"\n                role=\"img\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 640 512\"\n                width=\"16\"\n                height=\"16\"\n              >\n                <path\n                  fill=\"currentColor\"\n                  d=\"M192 256c61.9 0 112-50.1 112-112S253.9 32 192 32 80 82.1 80 144s50.1 112 112 112zm76.8 32h-8.3c-20.8 10-43.9 16-68.5 16s-47.6-6-68.5-16h-8.3C51.6 288 0 339.6 0 403.2V432c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48v-28.8c0-63.6-51.6-115.2-115.2-115.2zM480 256c53 0 96-43 96-96s-43-96-96-96-96 43-96 96 43 96 96 96zm48 32h-3.8c-13.9 4.8-28.6 8-44.2 8s-30.3-3.2-44.2-8H432c-20.4 0-39.2 5.9-55.7 15.4 24.4 26.3 39.7 61.2 39.7 99.8v38.4c0 2.2-.5 4.3-.6 6.4H592c26.5 0 48-21.5 48-48 0-61.9-50.1-112-112-112z\"\n                ></path>\n              </svg>\n            </i>\n          </Link>\n          <Link to=\"/messages\" onClick={(ev) => this.activeNav(3)}>\n            <i className=\"icon icon-messages\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"16\"\n                height=\"16\"\n                viewBox=\"0 0 16 16\"\n              >\n                <path\n                  id=\"ic_question_answer_24px\"\n                  d=\"M17.2,5.2H15.6v7.2H5.2V14a.8.8,0,0,0,.8.8h8.8L18,18V6A.8.8,0,0,0,17.2,5.2ZM14,10V2.8a.8.8,0,0,0-.8-.8H2.8a.8.8,0,0,0-.8.8V14l3.2-3.2h8A.8.8,0,0,0,14,10Z\"\n                  transform=\"translate(-2 -2)\"\n                  fill=\"currentColor\"\n                />\n              </svg>\n            </i>\n            \n          </Link>\n          <Link to=\"/interactions\" onClick={(ev) => this.activeNav(4)}>\n            <i className=\"icon icon-messages\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"16\"\n                height=\"13.819\"\n                viewBox=\"0 0 16 13.819\"\n              >\n                <g id=\"ic_record_voice_over_24px\" transform=\"translate(-1 -2)\">\n                  <circle\n                    id=\"Ellipse_3\"\n                    data-name=\"Ellipse 3\"\n                    cx=\"3\"\n                    cy=\"3\"\n                    r=\"3\"\n                    transform=\"translate(3.996 4)\"\n                    fill=\"currentColor\"\n                  />\n                  <path\n                    id=\"Path_3\"\n                    data-name=\"Path 3\"\n                    d=\"M6.819,11.455C4.877,11.455,1,12.43,1,14.364v1.455H12.637V14.364C12.637,12.43,8.76,11.455,6.819,11.455Zm5.644-7.011L11.241,5.673a2.413,2.413,0,0,1,0,2.829l1.222,1.229a3.722,3.722,0,0,0,0-5.288ZM14.87,2,13.684,3.186a5.8,5.8,0,0,1,0,7.811l1.186,1.186A7.149,7.149,0,0,0,14.87,2Z\"\n                    fill=\"currentColor\"\n                  />\n                </g>\n              </svg>\n            </i>\n          </Link>\n          <Link to=\"/antispam\" onClick={(ev) => this.activeNav(5)}>\n            <i className=\"icon icon-messages\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"16\"\n                height=\"16\"\n                viewBox=\"0 0 16 16\"\n              >\n                <path\n                  id=\"ic_feedback_24px\"\n                  d=\"M16.4,2H3.6A1.6,1.6,0,0,0,2.008,3.6L2,18l3.2-3.2H16.4A1.6,1.6,0,0,0,18,13.2V3.6A1.6,1.6,0,0,0,16.4,2Zm-5.6,9.6H9.2V10h1.6Zm0-3.2H9.2V5.2h1.6Z\"\n                  transform=\"translate(-2 -2)\"\n                  fill=\"currentColor\"\n                />\n              </svg>\n            </i>\n          </Link>\n          <Link to=\"/settings\" onClick={(ev) => this.activeNav(6)}>\n            <i className=\"icon icon-messages\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"16\"\n                height=\"16.449\"\n                viewBox=\"0 0 16 16.449\"\n              >\n                <path\n                  id=\"ic_settings_24px\"\n                  d=\"M16.383,11.03a6.409,6.409,0,0,0,.058-.806,6.41,6.41,0,0,0-.058-.806l1.735-1.357a.415.415,0,0,0,.1-.526L16.572,4.689a.413.413,0,0,0-.5-.181l-2.048.822a6.009,6.009,0,0,0-1.39-.806L12.32,2.345a.4.4,0,0,0-.4-.345H8.628a.4.4,0,0,0-.4.345L7.912,4.525a6.319,6.319,0,0,0-1.39.806L4.474,4.508a.4.4,0,0,0-.5.181L2.328,7.535a.405.405,0,0,0,.1.526L4.162,9.418a6.522,6.522,0,0,0-.058.806,6.522,6.522,0,0,0,.058.806L2.426,12.387a.415.415,0,0,0-.1.526l1.645,2.846a.413.413,0,0,0,.5.181l2.048-.822a6.009,6.009,0,0,0,1.39.806L8.225,18.1a.4.4,0,0,0,.4.345h3.29a.4.4,0,0,0,.4-.345l.313-2.179a6.319,6.319,0,0,0,1.39-.806l2.048.822a.4.4,0,0,0,.5-.181l1.645-2.846a.415.415,0,0,0-.1-.526ZM10.272,13.1a2.879,2.879,0,1,1,2.879-2.879A2.882,2.882,0,0,1,10.272,13.1Z\"\n                  transform=\"translate(-2.271 -2)\"\n                  fill=\"currentColor\"\n                />\n              </svg>\n            </i>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RightDrawer;\n","import React from \"react\";\nimport Axios from \"axios\";\nimport '../../style/css/Header_main.min.css';\n\nclass Header_main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      default_info: [],\n      chat_photo: [],\n      isOpen: false,\n      state_loading: false\n    };\n  }\n\n  componentDidMount() {\n    const chat_id = window.localStorage.getItem(\"chat_id\");\n    const user_id = window.sessionStorage.getItem(\"tel_id\");\n  \n    Axios.post(\n        `https://api.telegram.org/bot${this.props.botId}/getChatMember`,\n        { chat_id: chat_id, user_id: user_id }\n      )\n        .then(res => {\n          this.setState({ default_info: res.data.result.user });\n          if (res.data.result.photo) {\n            Axios.get(\n              `https://api.telegram.org/bot${this.props.botId}/getFile?file_id=` +\n                res.data.result.photo.small_file_id\n            ).then(res_photo => {\n              this.setState({ chat_photo: res_photo.data.result });\n            });\n          }\n        })\n        .catch(err => {\n          console.log(err);\n          return false;\n        });\n\n      Axios.post(\"/getTimezone\", {\n        chat_id: chat_id\n      }).then(res => {\n        if (res.data) {\n          window.localStorage.setItem(\"tz_set\", res.data.timezone);\n        }\n      });\n  }\n\n  getHeaderPhoto() {\n    if (this.state.chat_photo.file_path !== undefined) {\n      return (\n        <img\n          src={\n            `https://api.telegram.org/file/bot${this.props.botId}/` +\n            this.state.chat_photo.file_path\n          }\n          alt=\"user profile image\"\n        ></img>\n      );\n    } else {\n      return \"\";\n    }\n  }\n\n  toggleDropbox() {\n    if (this.state.isOpen) {\n      this.setState({ isOpen: false });\n    } else {\n      this.setState({ isOpen: true });\n    }\n  }\n\n  logout() {\n    // 스토리지 chat_id, cookie living delete\n    window.localStorage.removeItem(\"chat_id\");\n    document.cookie = \"living=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n    document.cookie = \"STAY_C=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n    window.location.href = \"/\";\n  }\n\n  render() {\n    return (\n      <div className=\"section_header\">\n        <a href=\"/#/chatmanager/members\" className=\"header_logo\"></a>\n        <a className=\"mobile_logout\" onClick={() => this.logout()}>LOG OUT</a>\n        <div className=\"header_infos\">\n          <div className=\"header_name\" onClick={() => this.toggleDropbox()}>\n            <span>{this.state.default_info.username}</span>\n            <span className=\"icon icon-down\"></span>\n          </div>\n          <ul\n            className={this.state.isOpen ? \"header_drop open\" : \"header_drop\"}\n          >\n            <li>{this.state.default_info.username}</li>\n            <li\n              style={{ color: \"#2F2F2F\", cursor: \"pointer\" }}\n              onClick={() => this.logout()}\n            >\n              LOG OUT\n            </li>\n          </ul>\n          <div className=\"header_photo\">{this.getHeaderPhoto()}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Header_main;\n","import React from 'react';\nimport AQ_LOGO_W from '../../img/AQOOM_whitelogo.svg';\n\nfunction LandingFooter (props) {\n    return (\n        <div className=\"footer\">\n            <div className=\"footer_container\">\n              <div className=\"footer_left\">\n                <div className=\"aqoom_logo\">\n                  <img src={AQ_LOGO_W} alt=\"aqoom logo\"></img>\n                </div>\n                <div className=\"aqoom_right\">\n                  All rights reserved 2020 © AQOOM\n                </div>\n              </div>\n              <div className=\"footer_right\">\n                <a href=\"https://www.termsofusegenerator.net/live.php?token=bfjrGrvymG981xJEZe0FNhD9m93wfkm6\" target=\"_blank\">\n                  Terms Of Use\n                </a>\n                <a href=\"http://aqoom.info/\" target=\"_blank\">\n                  ABOUT US\n                </a>\n                <a href=\"mailto:contact@aqoom.com\">\n                  CONTACT US\n                </a>\n              </div>\n            </div>\n          </div>\n    )\n}\n\nexport default LandingFooter;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport AQ_LOGO from '../../img/AQOOM_logo.png';\nimport AQ_LOGO_BETA from '../../img/aqoom_beta_logo.svg';\n\nfunction LandingHeader (props) {\n    return (\n        <header className=\"App-header\">\n            <a className=\"aqoom_logo\" href=\"/\">\n              <img src={AQ_LOGO_BETA} alt=\"aqoom logo\"></img>\n            </a>\n            <div className=\"nav_menus\">\n              <a href=\"/#/features\">\n                Features\n              </a>\n              {\n                props.onLogin \n                ? \n                <Link to=\"/members\" className=\"signin_btn\" onClick={() => {\n                    var now = new Date();\n                    var time = now.getTime();\n                    var expireTime = time + 2 * 3600000;\n                    now.setTime(expireTime);\n\n                    document.cookie = \"STAY_C=true; expires=\" + now.toUTCString();\n                    props.setValid(true)\n                }}>\n                  To Console\n                </Link> \n                :\n                <Link to=\"/signin\" className=\"signin_btn\">\n                Sign in\n                </Link>\n              }\n              \n            </div>\n          </header>\n    )\n}\n\nexport default LandingHeader;","import React from 'react';\n\nfunction Section_title (props) {\n    \n    return (\n        <div className=\"section_title\">\n            <h2 className=\"title\">\n                {props.title}\n            </h2>\n        </div>\n    )\n}\n\nexport default Section_title;","import React from 'react';\nimport '../../style/css/TabMenu.min.css';\n\nfunction changeTab(event) {\n    document.querySelector('div[class^=opt].active').classList.remove('active');\n    event.currentTarget.classList.add('active');\n    return false;\n}\n\nfunction TabMenu (props) {\nreturn (\n        <div className=\"tab_wrap\">\n            <div className=\"opt_1 active\" onClick={(ev) => {changeTab(ev); props.active_tab(1)}}>\n                <p>\n                    {props.opt1}\n                </p>\n            </div>\n            <div className=\"opt_2\" onClick={(ev) => {changeTab(ev); props.active_tab(2)}}>\n                <p>\n                    {props.opt2}\n                </p>\n            </div>\n            <div className=\"opt_3\" onClick={(ev) => {changeTab(ev); props.active_tab(3)}}>\n                <p>\n                    {props.opt3}\n                </p>\n            </div>\n            <div className=\"opt_4\" onClick={(ev) => {changeTab(ev); props.active_tab(4)}}>\n                <p>\n                    {props.opt4}\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default TabMenu;","import React from 'react';\nimport Axios from 'axios';\nimport {Event} from '../Tracking';\n\nimport TELEGRAM_ICON from '../../img/Icons/opentelegram_normal.svg';\nimport BEN_ICON from '../../img/Icons/ban_normal.svg';\nimport KICK_ICON from '../../img/Icons/kick_normal.svg';\nimport REPLY_ICON from '../../img/Icons/reply_normal.svg';\nimport DELETE_ICON from '../../img/Icons/delete_normal.svg';\n\nimport '../../style/css/MessageContentItem.min.css';\n\nclass MessageContentItem extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            img_path: '',\n            isExpanded: false,\n            open_modal: false,\n            modal_content: '',\n            origin_msg: null,\n            user_profile_photo: []\n        }\n    }\n    componentDidMount() {\n        const user_id = this.props.data.user_id;\n        \n        Axios.post(`https://api.telegram.org/bot${this.props.botId}/getUserProfilePhotos`, {\n            user_id: user_id,\n            limit: 1\n        })\n        .then((res) => {\n            const profile_file_id = res.data.result.photos[0][0].file_id;\n            Axios.get(`https://api.telegram.org/bot${this.props.botId}/getFile?file_id=${profile_file_id}`)\n            .then((res) => {\n                const img_path = res.data.result.file_path\n                this.setState({user_profile_photo: img_path})\n            })\n            \n        })\n\n        if (this.props.content === 'file') {\n            Axios.get(`https://api.telegram.org/bot${this.props.botId}/getFile?file_id=${this.props.file_id}`)\n            .then((res) => {\n                const img_path = res.data.result.file_path\n                this.setState({img_path: img_path})\n            })\n        }\n\n        if (this.props.data.reply_to_message) {\n            Axios.post('/getMessageById', {\n                chat_id: window.localStorage.getItem('chat_id'),\n                message_id: this.props.data.reply_to_message\n            })\n            .then((res) => {\n                this.setState({origin_msg: res.data[0]})\n            })\n        }\n\n        if (this.isMobileDevice()) {\n            \n        }\n    }\n    \n    isMobileDevice() {\n        return (typeof window.orientation !== \"undefined\") || (navigator.userAgent.indexOf('IEMobile') !== -1);\n    };\n\n    expand_minipulation(event) {\n        document.querySelectorAll('.message_manipulation.active').forEach((v) => v.classList.remove('active'));\n        this.setState({\n            isExpanded: !this.state.isExpanded\n        })\n    }\n\n    kickMember(userid, isBan) {\n        const result = window.confirm('Are you sure to kick this user?')\n        if (result) {\n            const dataset = {\n                chat_id: window.localStorage.getItem('chat_id'),\n                user_id: userid\n            }\n    \n            if (isBan) {\n                dataset['until_date'] = Date.now() + 1000;\n                Event('Message', 'adjust member status', 'ban member');\n            } else {\n                Event('Message', 'adjust member status', 'kick member');\n            }\n\n            Axios.post(`https://api.telegram.org/bot${this.props.botId}/kickChatMember`, dataset)\n                .then((res) => {\n                    setTimeout(() => {\n                        Axios.post('deleteUser', dataset);\n                        Axios.post('/pushEventBotActivity', {\n                            chat_id: dataset.chat_id,\n                            event: 'kick'\n                        })\n                        window.location.reload();\n                    }, 2000);\n                })\n        }\n    }\n    \n    restrictMember(userid) {\n        const result = window.confirm('Are you sure to ban this user?')\n        if (result) {\n            const dataset = {\n                chat_id: window.localStorage.getItem('chat_id'),\n                user_id: userid,\n                permissions: {\n                    can_send_messages: false,\n                    can_send_media_messages : false,\n                    can_send_polls: false,\n                    can_send_other_messages: false,\n                    can_pin_messages: false,\n                    can_change_info: false\n                },\n                until_date: 300000\n            }\n\n            Axios.post(`https://api.telegram.org/bot${this.props.botId}/restrictChatMember`, dataset)\n                .then((res) => {\n                    Event('Message', 'adjust member status', 'restrict member');\n                }).catch((err) => {\n                    alert(err);\n                    return false;\n                })\n        }\n    }\n\n    send_reply_message(event) {\n        const dataset = {\n            chat_id: window.localStorage.getItem('chat_id'),\n            reply_to_message_id: event.currentTarget.dataset.mid,\n            text: this.state.modal_content\n        }\n\n        Axios.post(`https://api.telegram.org/bot${this.props.botId}/sendMessage`, dataset).then(() => {\n            alert('the reply sent to chat successfully')\n            this.close_modal();\n            Axios.post('/setStateReplied', dataset);\n            Axios.post('/pushEventBotActivity', {\n                chat_id: dataset.chat_id,\n                event: 'reply'\n            })\n            Event('Message', 'adjust message', 'reply message');\n        })\n    }\n\n    delete_this_message(message_id) {\n        const result = window.confirm('Are you sure to delete this message?')\n        if (result) {\n            const dataset = {\n                chat_id: window.localStorage.getItem('chat_id'),\n                message_id: message_id\n            }\n            Axios.post(`https://api.telegram.org/bot${this.props.botId}/deleteMessage`, dataset).then((res) => {\n                if (res.data.ok === true) {\n                    Axios.post('/removeMessage', dataset);\n                    Event('Message', 'adjust message', 'delete');\n                    window.location.reload();\n                }\n            })\n            .catch((err) => {\n                if (!err.response.data.ok) {\n                    alert('You can only delete messages that were sent within 48 hours.');\n                    return false;\n                }\n            })\n        }\n    }\n\n    updateContent(event) {\n        this.setState({\n            modal_content: event.target.value\n        })\n    }\n\n    open_reply_modal() {\n        this.setState({\n            open_modal: true\n        })\n        document.querySelector('.dim').style.display = 'block';\n        document.querySelector('.dim').addEventListener('click', this.close_modal.bind(this))\n    }\n\n    close_modal() {\n        this.setState({\n            open_modal: false\n        })\n        document.querySelector('.dim').style.display = 'none';\n    }\n\n    telegram_actions(action) {\n        switch (action) {\n            case 'open' : {\n                const user_name = this.props.data.username;\n                window.location.href = `https://t.me/${user_name}`\n                break;\n            }\n            case 'ban' : {\n                const user_id = this.props.data.user_id;\n                this.kickMember(user_id, true)\n                break;\n            }\n            case 'kick' : {\n                const user_id = this.props.data.user_id;\n                this.kickMember(user_id, false)\n                break;\n            }\n            case 'reply' : {\n                this.open_reply_modal();\n                break;\n            }\n            case 'delete': {\n                const msg_id = this.props.data.id;\n                this.delete_this_message(msg_id);\n                break;\n            }\n        }\n    }\n\n    validateURL() {\n        if (this.props.data.entities) {\n            const entities = JSON.parse(this.props.data.entities);\n            if (entities[0].type === 'url') {\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    movetoMemberProfile(user_id) {\n        if (user_id) {\n            window.location.href = `/#/user?user_id=${user_id}`\n        }\n    }\n\n    render() {\n        const msg_date = new Date(this.props.data.date);\n\n        return (\n            <div className=\"content_message_wrap\">\n                <div className=\"message_owner\">\n                    <img src={`https://api.telegram.org/file/bot${this.props.botId}/${this.state.user_profile_photo}`} alt=\"profile\"></img>\n                </div>\n                <div className=\"message_contents\">\n                    <div className=\"message_header\">\n                        <p className=\"message_user\" onClick={() => this.movetoMemberProfile(this.props.data.user_id)}>\n                            {this.props.data.first_name} {this.props.data.last_name}\n                        </p>\n                        <p className=\"message_time\">\n                            {msg_date.getMonth() + 1} / {msg_date.getDate()} , {msg_date.getHours()}:{msg_date.getMinutes()}\n                        </p>\n                        {\n                            this.props.data.replied_date\n                            ?\n                            <p>\n                                <span className=\"replied_icon\"></span>\n                                <span className=\"replied_mark\">Replied</span>\n                            </p>\n                            :\n                            null\n                        }\n                    </div>\n                    <div className=\"message_body\">\n                        {this.state.origin_msg !== null ?\n                        <div className=\"reply_target_message\">\n                            <p className=\"origin_message_user\">\n                                {this.state.origin_msg.first_name} {this.state.origin_msg.last_name}\n                            </p>\n                            \n                            {\n                                this.state.origin_msg.text ? \n                                <p className=\"origin_message_content\">\n                                    {this.state.origin_msg.text}\n                                </p>\n                                :\n                                this.state.origin_msg.image ?\n                                <p>\n                                    IMAGE\n                                </p> :\n                                this.state.origin_msg.sticker ?\n                                <p>\n                                    STICKER\n                                </p> :\n                                <p>\n                                    MEDIA\n                                </p>\n                            }\n                        </div>\n                        :\n                        null} \n                        {this.props.content === 'file' ? \n                        <img src={`https://api.telegram.org/file/bot${this.props.botId}/${this.state.img_path}`} alt=\"file\"></img>\n                        :\n                        this.props.content === 'sticker' ? \n                        <p>\n                            Sticker preview unavailable\n                        </p>\n                        :\n                        this.validateURL() ?\n                        <div>\n                            <p>\n                                {this.props.content}\n                            </p>\n                            <div className=\"alert_icon\">\n                                <p className=\"tooltip\">This message could be a spam. harmful link, or sent by a fake user.</p>\n                                <p>!</p>\n                            </div>\n                            \n                        </div>\n                        :\n                        <p>\n                            {this.props.content}\n                        </p>\n                        }\n                    </div>\n                </div>\n                <div className={this.state.isExpanded ? 'message_manipulation active' : 'message_manipulation'} onClick={(ev) => this.expand_minipulation(ev)}>\n                    <div className=\"expand_icon\"></div>\n                </div>\n                \n                <div className=\"message_manipulation_expand\">\n                    <div className=\"manipulation_item\" onClick={() => this.telegram_actions('open')}>\n                        <img src={TELEGRAM_ICON} title=\"Open in Telegram\" alt=\"open telegram\"></img>\n                    </div>\n                    <div className=\"manipulation_item\">\n                        <img src={BEN_ICON} title=\"Ban\" onClick={() => this.telegram_actions('ban')} alt=\"ben user\"></img>\n                    </div>\n                    <div className=\"manipulation_item\">\n                        <img src={KICK_ICON} title=\"Kick\" onClick={() => this.telegram_actions('kick')} alt=\"kick user\"></img>\n                    </div>\n                    <div className=\"manipulation_item\">\n                        <img src={REPLY_ICON} title=\"Reply\" onClick={() => this.telegram_actions('reply')} alt=\"reply\"></img>\n                    </div>\n                    <div className=\"manipulation_item\">\n                        <img src={DELETE_ICON} title=\"Delete\" onClick={() => this.telegram_actions('delete')} alt=\"delete\"></img>\n                    </div>\n                </div>\n                    \n                <div className={this.state.open_modal ? 'modal reply_modal open' : 'modal reply_modal'}>\n                    <div className=\"modal_title\">\n                        <p>Write a reply</p>\n                    </div>\n                    <textarea className=\"reply_content\" onChange={(ev) => this.updateContent(ev)} placeholder=\"reply to..\"></textarea>\n                    <div className=\"modal_btn_wrap\">\n                        <a className=\"submit_btn\" data-mid={this.props.data.id} onClick={(ev) => this.send_reply_message(ev)}>\n                            SUBMIT\n                        </a>\n                        <a className=\"cancle_btn\" onClick={() => this.close_modal()}>\n                            CANCEL\n                        </a>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MessageContentItem","import React from 'react';\nimport Content_Item from './MessageContentItem';\n\nclass MessageContentContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            img_path: '',\n            contents: []\n        }\n    }\n    render() {\n        const contents = this.props.messages.map((data) => {\n            let msg = data.text ? data.text : data.sticker ? 'sticker' : 'file';\n\n            if (msg === 'file') {\n                const message = data.photo ? data.photo : data.video ? data.video : data.audio ? data.audio : undefined;\n                if (message) {\n                    let message_json = JSON.parse(message);\n                    if (message_json.length > 1) {\n                        message_json = message_json[0];\n                    }\n                    const file_id = message_json.file_id;\n                    return (\n                        <Content_Item content={msg} data={data} key={data.id} botId={this.props.botId} file_id={file_id} is_allMessages={this.props.is_allMessages}></Content_Item>\n                    )\n                }\n            } else if (msg === 'sticker') {\n                return (\n                    <Content_Item content={msg} data={data} key={data.id} botId={this.props.botId} is_allMessages={this.props.is_allMessages}></Content_Item>\n                )\n            } else {\n                return (\n                    <Content_Item content={msg} data={data} key={data.id} botId={this.props.botId} is_allMessages={this.props.is_allMessages}></Content_Item>\n                )\n            }\n        })\n\n        return (\n            <div className=\"content_tab\">\n                {contents.length !== 0 ?\n                contents\n                :\n                <div className=\"emtpy_section\">\n                    <p>No messages yet</p>    \n                </div>}\n            </div>\n        )\n    }\n}\n\nexport default MessageContentContainer;","import React from \"react\";\nimport Axios from \"axios\";\nimport Title from \"../Section_title\";\nimport TabMenu from \"../Modules/TabMenu\";\nimport Content_Tabs from '../Modules/MessageContentContainer';\n\nimport \"../../style/css/Messages.min.css\";\n\n\nfunction Segment_Tabs(props) {\n  switch (props.tab) {\n    case 1: {\n      return <Content_Tabs messages={props.messages} botId={props.botId} is_allMessages={true}></Content_Tabs>;\n    }\n    case 2: {\n      return <Content_Tabs messages={props.questions} botId={props.botId} is_allMessages={false}></Content_Tabs>;\n    }\n    case 3: {\n      return <Content_Tabs messages={props.mentions} botId={props.botId} is_allMessages={false}></Content_Tabs>;\n    }\n  }\n}\n\nclass Messages extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active_tab: 1,\n      messages: [],\n      questions: [],\n      mentions: [],\n      current_pg_question: 0,\n      current_pg_mention: 0,\n      current_pg: 0,\n      isbusy: false\n    };\n    this.onScroll = this.append_messages.bind(this);\n  }\n\n  componentDidMount() {\n    this.get_messages(this.state.current_pg);\n    this.get_questions(this.state.current_pg_question);\n    this.get_mentions(this.state.current_pg_mention);\n\n    window.addEventListener('scroll', this.onScroll)\n  }\n  \n  componentWillUnmount() {\n      window.removeEventListener('scroll', this.onScroll)\n  }\n\n  get_mentions(page) {\n    Axios.post('getAdminMentions', {\n        chat_id: window.localStorage.getItem('chat_id'),\n        page: page\n    })\n    .then((res) => {\n        if (res.data) {\n            const result = this.state.mentions.concat(res.data)\n\n            this.setState({\n                mentions: result,\n                current_pg_question: this.state.current_pg_mention + 1,\n                isbusy: false\n            })\n        }\n    })\n  }\n\n  get_questions(page) {\n    Axios.post('getQuestions', {\n        chat_id: window.localStorage.getItem('chat_id'),\n        page: page\n    })\n    .then((res) => {\n        if (res.data) {\n            const result = this.state.questions.concat(res.data);\n\n            this.setState({\n                questions: result,\n                current_pg_question: this.state.current_pg_question + 1,\n                isbusy: false\n            })\n        }\n    })\n  }\n\n  get_messages(page) {\n    Axios.post('/getMessages', {\n        page: page,\n        chat_id: window.localStorage.getItem('chat_id')\n    })\n    .then((res) => {\n        if (res.data) {\n            const result = this.state.messages.concat(res.data);\n            this.setState({\n                messages: result,\n                current_pg: this.state.current_pg + 1,\n                isbusy: false\n            })\n        }\n    })\n  }\n\n  set_activeTab(num) {\n    return this.setState({ active_tab: num });\n  }\n\n  getCurrentScrollPercentage(){\n    return (window.scrollY + window.innerHeight) / document.body.clientHeight * 100\n    }\n\n  append_messages(event) {\n    if (this.state.messages.length >= 20) {\n        const scroll_position = this.getCurrentScrollPercentage()\n        if (scroll_position > 90 && !this.state.isbusy) {\n            this.setState({isbusy: true})\n            this.get_messages(this.state.current_pg)\n        }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"section_messages\">\n        <Title title={\"Messages\"}></Title>\n        <TabMenu\n          opt1={\"Message Log\"}\n          opt2={\"Collected Questions\"}\n          opt3={\"Messages to Admin\"}\n          active_tab={this.set_activeTab.bind(this)}\n        ></TabMenu>\n        <Segment_Tabs tab={this.state.active_tab} messages={this.state.messages} questions={this.state.questions} mentions={this.state.mentions} botId={this.props.botId}></Segment_Tabs>\n      </div>\n    );\n  }\n}\n\nexport default Messages;\n","import React from 'react';\nimport Axios from 'axios';\nimport {Event} from '../Tracking';\n\nimport Content_Tabs from '../Modules/MessageContentContainer';\n\nclass MessageLog extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            messages: []\n        }\n    }\n    \n    back() {\n        window.history.go(-1);\n    }\n\n    extract_query(key) {\n        const query_str = window.location.href.split('?')[1];\n        return query_str.split('=')[1];\n    }\n\n    componentDidMount() {\n        Axios.post('/getMessageByUser', {\n            chat_id: window.localStorage.getItem('chat_id'),\n            member_id: this.extract_query('id'),\n            date: 30\n        }).then((res) => {\n            if (res.data) {\n                this.setState({messages: res.data})   \n                Event('UserManager', 'show message log', 'message log');\n            }\n        })\n    }\n\n    render() {\n        return (\n          <div className=\"section_messages\">\n            <div className=\"section_title\" onClick={() => this.back()}>\n                <h2 className=\"title\">\n                    Message Logs\n                </h2>\n            </div>\n            <Content_Tabs messages={this.state.messages} botId={this.props.botId} is_allMessages={true}></Content_Tabs>\n          </div>\n        );\n      }\n}\n\nexport default MessageLog;","import React from 'react';\n\nfunction SearchBox (props) {\n    return (\n        <div className=\"search_box_wrap\">\n            <div method=\"post\">\n                <div className=\"icon icon_magnify\"></div>\n                <input type=\"text\" name=\"member_search\" onChange={(ev) => props.searchMember(ev)} placeholder=\"Search for a member\"></input>\n            </div>\n        </div>\n    )\n}\n\nexport default SearchBox;","import React from 'react';\nimport Axios from 'axios';\nimport SearchBox from './SearchBox';\nimport { Link } from 'react-router-dom';\nimport { Event } from '../Tracking';\n\nclass UserManagerUserList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            members: []\n        }\n    }\n\n    searchMember(event) {\n        const search_query = event.currentTarget.value;\n        \n        Axios.post('/searchMember', {\n            chat_id: window.localStorage.getItem('chat_id'),\n            query: search_query\n        })\n        .then((res) => {\n            if (res.data) {\n                this.updateMemberList(res.data);\n                Event('UserManager', 'Search Member', 'member searching');\n            }\n        })\n    }\n\n    kickMember(userid, isBan) {\n        const result = window.confirm('Are you sure to kick this user?')\n        if (result) {\n            const dataset = {\n                chat_id: window.localStorage.getItem('chat_id'),\n                user_id: userid\n            }\n    \n            if (isBan) {\n                dataset['until_date'] = Date.now() + 1000;\n                Event('UserManager', 'adjust member status', 'ban member');\n            } else {\n                Event('UserManager', 'adjust member status', 'kick member');\n            }\n    \n            Axios.post(`https://api.telegram.org/bot${this.props.botId}/kickChatMember`, dataset)\n                .then((res) => {\n                    Axios.post('/deleteUser', dataset)\n                        .then(() => {\n                            this.getMemberList()\n                        })\n                    Axios.post('/pushEventBotActivity', {\n                        chat_id: dataset.chat_id,\n                        event: 'kick'\n                    })\n                })\n        }\n    }\n    \n    restrictMember(userid) {\n        const result = window.confirm('Are you sure to restrict this user?')\n        if (result) {\n            const dataset = {\n                chat_id: window.localStorage.getItem('chat_id'),\n                user_id: userid,\n                permissions: {\n                    can_send_messages: false,\n                    can_send_media_messages : false,\n                    can_send_polls: false,\n                    can_send_other_messages: false,\n                    can_pin_messages: false,\n                    can_change_info: false\n                },\n                until_date: 300000\n            }\n\n            Axios.post(`https://api.telegram.org/bot${this.props.botId}/restrictChatMember`, dataset)\n                .then((res) => {\n                    Axios.post('/pushEventBotActivity', {\n                        chat_id: dataset.chat_id,\n                        event: 'restrict'\n                    })\n                    Event('UserManager', 'adjust member status', 'restrict member');\n                }).catch((err) => {\n                    if (err.data.ok) {\n                        alert('this feature should be available into Supergroup only.')\n                    }\n                })\n        }\n    }\n\n    getMemberList() {\n        Axios.post('/getMemberStatus', {chat_id: window.localStorage.getItem('chat_id')})\n        .then((res) => {\n            let dataset = [];\n\n            for (var data of res.data) {\n                if (!data.is_bot) {\n                    dataset.push(data);\n                }\n            }\n\n            this.updateMemberList(dataset);\n\n        }).catch(function(err) {\n            console.log(err);\n        })\n    }\n\n    updateMemberList(dataset) {\n        this.setState({members: dataset.map((data, index) => \n            <tr key={index}>\n                <td>\n                    <div className=\"member_name\">\n                        {data.is_interested ?\n                        <div className=\"interesting_icon\"></div> : null}\n                        <Link to={{\n                            pathname: \"/user\",\n                            search: \"?user_id=\" + data.id\n                        }}>\n                            {data.first_name} {data.last_name ? data.last_name : ''}\n                        </Link>\n                    </div>\n                </td>\n                <td>\n                    {'Active'}\n                </td>\n                <td>\n                    @{data.username}\n                </td>\n                <td>\n                    {data.warning_pt}\n                </td>\n                <td>\n                    {data.act_txt_cnt + data.act_photo_cnt + data.act_url_cnt}\n                </td>\n                <td>\n                    {data.updated_at}\n                </td>\n                <td>\n                    <Link to={{\n                        pathname: \"/logs\",\n                        search: \"?user_id=\" + data.id\n                    }}>\n                        <div className=\"icon message_log_icon\">\n                            <span className=\"tooltip\">Message Logs</span>\n                        </div>\n                    </Link>\n                </td>\n                <td>\n                    <div className=\"icon restrict_icon\" onClick={() => this.restrictMember(data.id)}>\n                        <span className=\"tooltip\">Restrict</span>\n                    </div>\n                </td>\n                <td>\n                    <div className=\"icon ban_icon\" onClick={() => this.kickMember(data.id, true)}>\n                        <span className=\"tooltip\">Ban</span>   \n                    </div>\n                </td>\n                <td>\n                    <div className=\"icon kick_icon\" onClick={() => this.kickMember(data.id, false)}>\n                        <span className=\"tooltip\">Kick</span>\n                    </div>\n                </td>\n            </tr> \n        )})\n    }\n\n    componentDidMount() {\n        this.getMemberList()\n    }\n\n    render() {\n        return (\n            <div className=\"memberlist_wrap\">\n                    <h4>List of Members</h4>\n                    <SearchBox target={'member'} searchMember={this.searchMember.bind(this)}></SearchBox>\n                    <table className=\"usermanager_tb\">\n                        <thead>\n                            <tr>\n                                <th width=\"15%\">Name</th>\n                                <th width=\"10%\">Status</th>\n                                <th width=\"13%\">Username</th>\n                                <th width=\"10%\">Warn. Points</th>\n                                <th width=\"11%\">Messages</th>\n                                <th>Last Active</th>\n                                <th width=\"5%\"></th>\n                                <th width=\"5%\"></th>\n                                <th width=\"5%\"></th>\n                                <th width=\"5%\"></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.state.members.length === 0 ? \n                                <tr><td colSpan=\"10\" className=\"empty_item\">No Items</td></tr>\n                                : this.state.members}\n                        </tbody>\n                    </table>\n                </div>\n        )\n    }\n}\n\nexport default UserManagerUserList;","import React from 'react';\nimport Axios from 'axios';\n\nfunction Switch (props) {\n    return (\n        <div className=\"filter_switch\">\n            <label htmlFor={props.name}>\n                <input type=\"checkbox\" className=\"filter_sw\" name={props.name} id={props.name} onChange={() => props.changePermission()} defaultChecked={props.is_active}></input>\n                <div className=\"custom_chbox\"></div>\n                <div className=\"custom_chbox_circle\"></div>\n            </label>\n        </div>\n    )\n}\n\nclass UserManagerUserRestriction extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            restrictions: []\n        }\n    }\n\n    componentDidMount() {\n        this.getRestrictions();\n    }\n\n    getRestrictions() {\n        Axios.post('/getRestriction', {\n            chat_id: window.localStorage.getItem('chat_id')\n        }).then((res) => {\n            if (res.data) {\n                this.setState({\n                    restrictions: res.data[0]\n                })\n            }\n        })\n    }\n\n    restrict_bot () {\n        const status = document.forms[0].restrict_adding_bot.checked;\n\n        Axios.post('/setRestriction', {\n            chat_id: window.localStorage.getItem('chat_id'),\n            restrictions: {\n                bot: status ? 1 : 0\n            }\n        })\n    }\n\n    restrict_invite_user() {\n        const status = document.forms[0].restrict_adding_user.checked;\n\n        Axios.post(`https://api.telegram.org/bot${this.props.botId}/setChatPermissions`, {\n            chat_id: window.localStorage.getItem('chat_id'),\n            permissions: {\n                can_invite_users: status\n            }\n        }).then(res => {\n            if (res.data.ok) {\n                Axios.post('/setRestriction', {\n                    chat_id: window.localStorage.getItem('chat_id'),\n                    restrictions: {\n                        invite: status ? 1 : 0\n                    }\n                })\n            }\n        })\n    }\n\n    restrict_capcha() {\n\n    }\n\n    restrict_mute() {\n        const status = document.forms[0].restrict_mute.checked;\n\n        Axios.post('/setRestriction', {\n            chat_id: window.localStorage.getItem('chat_id'),\n            restrictions: {\n                new_member: status ? 1 : 0\n            }\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"user_restriction_section\">\n                <h4>New Members</h4>\n                <p>Set restrictions to new members that joined the chat group. Usually, spams are coming from new members who joins the room and then leave right away.</p>\n                <form>\n                    <div className=\"restriction_common\">\n                        <div className=\"restriction_module\">\n                            <p>Restrict non-admins adding bots to the group</p>\n                            <Switch name=\"restrict_adding_bot\" changePermission={this.restrict_bot.bind(this)} is_active={this.state.restrictions.is_block_bot}></Switch>\n                        </div>\n                        <div className=\"restriction_module\">\n                            <p>Restrict members to invite new members in to the group</p>\n                            <Switch name=\"restrict_adding_user\" changePermission={this.restrict_invite_user.bind(this)} is_active={this.state.restrictions.is_block_invite}></Switch>\n                        </div>\n                        <div className=\"restriction_module\">\n                            <p>Require Captcha for New Members (preparing)</p>\n                            <Switch name=\"restrict_capcha\" changePermission={this.restrict_capcha} is_active={false}></Switch>\n                        </div>\n                    </div>\n                    <div className=\"restriction_new_member\">\n                        <div className=\"restriction_module\">\n                            <p>Restrict New Members’ activity after joining the room</p>\n                            <Switch name=\"restrict_mute\" changePermission={this.restrict_mute} is_active={this.state.restrictions.is_restrict_new_member}></Switch>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default UserManagerUserRestriction;","import React from 'react';\nimport Axios from 'axios';\nimport Title from '../Section_title';\nimport TabMenu from '../Modules/TabMenu';\nimport UserLists from '../Modules/UserManagerUserList';\nimport UserRestrictions from '../Modules/userManagerUserRestriction';\n\nimport '../../style/css/UserManager.min.css';\n\nfunction Segment_Tabs(props) {\n    switch (props.tab) {\n      case 1: {\n        return <UserLists botId={props.botId}></UserLists>\n      }\n      case 2: {\n        return <UserRestrictions botId={props.botId}></UserRestrictions>\n      }\n    }\n  }\n\nclass UserManager extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            active_tab: 1\n        }\n    }\n\n    set_activeTab(num) {\n        return this.setState({ active_tab: num });\n    }\n\n    render() {\n        return (\n            <div className=\"section_usermanager\">\n                <Title title={\"Members\"}></Title>\n                <TabMenu opt1={'Members List'} opt2={'Restrictions'} active_tab={this.set_activeTab.bind(this)}></TabMenu>\n                <div className=\"content_wrap\">\n                    <Segment_Tabs tab={this.state.active_tab} botId={this.props.botId}></Segment_Tabs>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UserManager;","import React, {useState} from 'react';\nimport Axios from 'axios';\n\nimport ContentContainer from '../Modules/MessageContentContainer';\nimport '../../style/css/MessageLogModal.min.css';\n\nfunction MessageLogModal(props) {\n    const [messageLog, setMessageLog] = useState([]);\n\n    if (!props.message_log) {\n        if (props.chat_id) {\n            Axios.post('/getMessageByUser', {\n                chat_id: window.localStorage.getItem('chat_id'),\n                member_id: props.user_id,\n                date: 30\n            })\n            .then((res) => {\n                setMessageLog(res.data);\n            })\n        } else {\n            return (\n                <div className={props.message_log_open ? \"modal message_log_modal open\" : \"modal message_log_modal\"}>\n                    <h2 className=\"message_modal_title\">Message Logs</h2>\n                    <span className=\"message_modal_close\" onClick={() => props.closeModal()}>&times;</span>\n                    <div className=\"empty_section\">\n                        <p>No messages</p>\n                    </div>\n                </div>\n            );\n        }\n    }\n    return (\n        <div className={props.message_log_open ? \"modal message_log_modal open\" : \"modal message_log_modal\"}>\n            <h2 className=\"message_modal_title\">Message Logs</h2>\n            <span className=\"message_modal_close\" onClick={() => props.closeModal()}>&times;</span>\n            <ContentContainer messages={props.message_log ? props.message_log : messageLog} botId={props.botId} is_allMessages={true}></ContentContainer>\n        </div>\n    )\n}\n\nexport default MessageLogModal;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport Axios from 'axios';\nimport {Event} from '../Tracking';\nimport Chart from 'chart.js';\n\nimport MessageLogModal from '../Modules/MessageLog_Modal';\n\n\nimport '../../style/css/User.min.css';\n\nclass User extends React.Component {\n    constructor (props) {\n        super(props);\n\n        this.state = {\n            user_profile_data: [],\n            message_log: [],\n            profile_pic: '',\n            active_hours: 0,\n            top_active: null,\n            message_log_open: false\n        }\n    }\n\n    backtoManage() {\n        window.location.href = '/#/members';\n    }\n\n    openTelegram(username) {\n        window.location.href = `https://t.me/${username}`\n        return false;\n    }\n\n    toggleMessageLogModal() {\n        this.setState({\n            message_log_open: !this.state.message_log_open\n        })\n    }\n\n    interestMember(event, user_id) {\n        const cur_state = event.currentTarget.classList\n        let setValue = 0\n        if (cur_state.length === 2) {\n            setValue = 0\n        } else {\n            setValue = 1\n        }\n        const dataset = {\n            user_id: user_id,\n            chat_id: window.localStorage.getItem('chat_id'),\n            val: setValue\n        }\n        \n        Axios.post('/setInterest', dataset)\n        .then(() => {\n            window.location.reload();\n        })\n    }\n\n    kickMember(userid, isBan) {\n        const result = window.confirm('Are you sure to kick this user?')\n        if (result) {\n            const dataset = {\n                chat_id: window.localStorage.getItem('chat_id'),\n                user_id: userid\n            }\n\n            if (isBan) {\n                dataset['until_date'] = Date.now() + 1000;\n            }\n    \n            Axios.post(`https://api.telegram.org/bot${this.props.botId}/kickChatMember`, dataset)\n                .then((res) => {\n                    setTimeout(() => {\n                        Axios.post('/deleteUser', dataset);\n                        Axios.post('/pushEventBotActivity', {\n                            chat_id: dataset.chat_id,\n                            event: 'kick'\n                        })\n                        window.location.reload();\n                    }, 2000);\n                })\n        }\n    }\n    \n    restrictMember(userid) {\n        const result = window.confirm('Are you sure to ban this user?')\n        if (result) {\n            const dataset = {\n                chat_id: window.localStorage.getItem('chat_id'),\n                user_id: userid,\n                permissions: {\n                    can_send_messages: false,\n                    can_send_media_messages : false,\n                    can_send_polls: false,\n                    can_send_other_messages: false,\n                    can_pin_messages: false,\n                    can_change_info: false\n                },\n                until_date: 300000\n            }\n\n            Axios.post(`https://api.telegram.org/bot${this.props.botId}/restrictChatMember`, dataset)\n                .then((res) => {\n                    Axios.post('/pushEventBotActivity', {\n                        chat_id: dataset.chat_id,\n                        event: 'restrict'\n                    })\n                }).catch((err) => {\n                    if (!err.data.ok) {\n                        alert('this feature is available only in [supergroup]')\n                        return false;\n                    }\n                })\n        }\n    }\n\n    extract_query(key) {\n        const query_str = window.location.href.split('?')[1];\n        return query_str.split('=')[1];\n    }\n\n    cal_active_hours (data) {\n        const avg_msg_perDay = Math.floor((this.state.user_profile_data.act_txt_cnt + this.state.user_profile_data.act_media + this.state.user_profile_data.act_photo_cnt) / this.cal_participate_date(this.state.user_profile_data.created_at))\n        const standard = Math.floor( avg_msg_perDay / 5 );\n        let active_hours = 0;\n        let top_active = 0;\n        \n        for (var i = 0; i < 24; i++) {\n            if (data[i] > standard) {\n                if (data[top_active] < data[i]) {\n                    top_active = i;\n                }\n                active_hours += 1;\n            }\n        }\n\n        if (top_active) {\n            this.setState({\n                active_hours : active_hours,\n                top_active : top_active\n            })\n        }\n    }\n\n    cal_participate_date(joined_date) {\n        const join = new Date(joined_date);\n        const now = new Date(Date.now());\n        const diff = now - join;\n\n        return Math.floor(diff / 86400000) > 30 ? 30 : Math.floor(diff / 86400000)\n    }\n\n    cal_participate_week(joined_date) {\n        const join = new Date(joined_date);\n        const now = new Date(Date.now());\n        const diff = now - join;\n\n        return Math.floor(diff / 604800000) > 30 ? 30 : Math.floor(diff / 604800000)\n    }\n    \n    makeChartMessage(data) {\n        const today = new Date(Date.now());\n        let label_arr = [];\n        let dataset = [];\n        for (var i=11; i >= 0; i--) {\n            const target_date = today - (86400000 * i);\n            const d = new Date(target_date);\n            const result = d.toString(\"MMMM dd\").slice(4, 10)\n            let is_matched = false;\n\n            label_arr.push(result);\n            if (data) {\n                for (var date_cnt of data) {\n                    if (result == date_cnt['ym']) {\n                        dataset.push(date_cnt['cnt']);\n                        is_matched = true;\n                    } \n                }\n            }\n\n            if (!is_matched) {\n                dataset.push(0);\n            }\n        }\n\n        const message_crt = document.getElementById('total_message_crt');\n        new Chart(message_crt, {\n            type: 'line',\n            data: {\n                labels: label_arr,\n                datasets: [{\n                    data: dataset,\n                    borderColor: '#324DF9',\n                    borderWidth: 2,\n                    lineTension: 0,\n                    fill: false\n                }]\n            },\n            options: {\n                legend: {\n                    display: false\n                },\n                responsive: false,\n                scales: {\n                    xAxes: [{\n                        ticks: {\n                            fontSize: 10,\n                            fontFamily: 'muli-ragular'\n                        },\n                        gridLines: {\n                            display: false\n                        }\n                    }],\n                    yAxes: [{\n                        ticks: {\n                            stepSize: 5,\n                            beginAtZero: true,\n                            fontSize: 10,\n                            fontFamily: 'muli-ragular'\n                        }\n                    }]\n                },\n            }\n        })\n    }\n    \n    makeChartActiveHour(data) {\n        let time_24hr = [];\n        let time_active_hour = [];\n\n        for(var i=0; i<24; i++) {\n            time_24hr.push(i);\n            let is_matched = false;\n            if (data) {\n                for (var time of data) {\n                    if (i == time['hour']) {\n                        time_active_hour.push(time['cnt'])\n                        is_matched = true\n                    }\n                }\n            }\n            \n            if (!is_matched) {\n                time_active_hour.push(0);\n            }\n        }\n\n        this.cal_active_hours(time_active_hour);\n\n        const active_crt = document.getElementById('active_hour_crt');\n        new Chart(active_crt, {\n            type: 'bar',\n            data: {\n                labels: time_24hr,\n                datasets: [{\n                    data: time_active_hour,\n                    backgroundColor: '#3CB650'\n                }]\n            },\n            options: {\n                legend: {\n                    display: false\n                },\n                responsive: false,\n                scales: {\n                    xAxes: [{\n                        ticks: {\n                            fontSize: 10,\n                            fontFamily: 'muli-ragular'\n                        },\n                        gridLines: {\n                            display: false\n                        }\n                    }],\n                    yAxes: [{\n                        ticks: {\n                            stepSize: 5,\n                            beginAtZero: true,\n                            fontSize: 10,\n                            fontFamily: 'muli-ragular'\n                        }\n                    }],\n                    gridLines: {\n                        lineWidth: 0\n                    }\n                },\n            }\n        })\n    }\n\n    makeChartType() {\n        const ctx = document.getElementById('message_type');\n        const chart = new Chart(ctx, {\n            type: 'pie',\n            data: {\n                labels: ['Text Messages', 'Questions', 'Media (Stickers, Gif, etc)', 'Pictures'],\n                datasets: [{\n                    data: [this.state.user_profile_data.act_txt_cnt, this.state.user_profile_data.act_questions, this.state.user_profile_data.act_media, this.state.user_profile_data.act_photo_cnt],\n                    backgroundColor: [\n                        '#255CF9',\n                        '#3CB550',\n                        '#2199EE',\n                        '#644AC4'\n                    ]\n                }]\n            },\n            options: {\n                legend : {\n                    position: \"right\"\n                },\n                layout: {\n                    padding: {\n                        top: 20,\n                        bottom:20,\n                        left:20,\n                        right:20\n                    }\n                }\n            }\n        }).resize()\n    }\n\n    componentDidMount() {\n\n        Axios.post('/getMember', {\n            member_id: this.extract_query(),\n            chat_id: window.localStorage.getItem('chat_id')\n        })\n        .then((res_member) => {\n            this.setState({user_profile_data : res_member.data[0]});\n            Axios.post(`https://api.telegram.org/bot${this.props.botId}/getUserProfilePhotos`, {\n                user_id: this.extract_query()\n            })\n            .then((res_chatmember) => {\n                if (res_chatmember.data.result.total_count !== 0) {\n                    Axios.post(`https://api.telegram.org/bot${this.props.botId}/getFile?file_id=`+res_chatmember.data.result.photos[0][0].file_id)\n                        .then((res_file) => {\n                            this.setState({profile_pic: res_file.data.result})\n                            this.makeChartType();\n                        })\n                }      \n            })\n        })\n\n        Axios.post('/getMessageByUser', {\n            member_id: this.extract_query(),\n            chat_id: window.localStorage.getItem('chat_id'),\n            date: 30\n        })\n        .then((res) => {\n            this.setState({\n                message_log: res.data\n            })\n        })\n\n        Axios.post('/getMessageCntPerDay', {\n            member_id: this.extract_query(),\n            chat_id: window.localStorage.getItem('chat_id')\n        })\n        .then((res) => {\n            this.makeChartMessage(res.data)\n        })\n\n        Axios.post('/getMessageCntPerHour', {\n            member_id: this.extract_query(),\n            chat_id: window.localStorage.getItem('chat_id')\n        })\n        .then((res) => {\n            this.makeChartActiveHour(res.data)\n        })\n\n        Event('UserManager', 'enter user detail', 'detail page');\n    }\n\n    render() {\n        const total_msg = this.state.user_profile_data.act_txt_cnt + this.state.user_profile_data.act_photo_cnt + this.state.user_profile_data.act_url_cnt;\n\n        return (\n            <div className=\"user_wrap\">\n                <div className=\"section_title\" onClick={() => this.backtoManage()}>\n                    <h2 className=\"title\">\n                        User Profile\n                    </h2>\n                </div>\n                <div className=\"profile_state\">\n                    <div className=\"user_profile\">\n                        <div className={this.state.user_profile_data.is_interested ? 'interest_icon interested' : 'interest_icon'} \n                            onClick={(ev) => this.interestMember(ev, this.state.user_profile_data.user_id)}>\n\n                        </div>\n                        <div className=\"profile_pic\">\n                            <img src={`https://api.telegram.org/file/bot${this.props.botId}/` + this.state.profile_pic.file_path} alt=\"user profile picture\"></img>\n                        </div>\n                        <div className=\"profile_contents\">\n                            <p>\n                                {this.state.user_profile_data.first_name} {this.state.user_profile_data.last_name}\n                            </p>\n                            <p>\n                                @{this.state.user_profile_data.username}\n                            </p>\n                            <p>\n                                Active\n                            </p>\n                            <p>\n                                Last Active : {this.state.user_profile_data.updated_at}\n                            </p>\n                            <p>\n                                Messages: {total_msg}\n                            </p>\n                            <p>\n                                Warning Points: {this.state.user_profile_data.warning_pt}\n                            </p>\n                        </div>\n                        <div className=\"profile_manipulation\">\n                            <div className=\"manipulation_item\" onClick={() => this.openTelegram(this.state.user_profile_data.username)}>\n                                <div className=\"icon open_telegram_icon\">\n                                    <span className=\"tooltip\">Open in Telegram</span>\n                                </div>\n                            </div>\n                            <div className=\"manipulation_item\">\n                                <Link to={{\n                                    pathname: \"/logs\",\n                                    search: \"?user_id=\" + this.state.user_profile_data.user_id\n                                }}>\n                                    <div className=\"icon message_log_icon\">\n                                        <span className=\"tooltip\">Message Logs</span>\n                                    </div>\n                                </Link>\n                            </div>\n                            <div className=\"manipulation_item\" onClick={() => this.restrictMember(this.state.user_profile_data.user_id)}>\n                                <div className=\"icon restrict_icon\">\n                                    <span className=\"tooltip\">Restrict</span>\n                                </div>\n                            </div>\n                            <div className=\"manipulation_item\" onClick={() => this.kickMember(this.state.user_profile_data.user_id, true)}>\n                                <div className=\"icon ban_icon\">\n                                    <span className=\"tooltip\">Ban</span>\n                                </div>\n                            </div>\n                            <div className=\"manipulation_item\" onClick={() => this.kickMember(this.state.user_profile_data.user_id, false)}>\n                                <div className=\"icon kick_icon\">\n                                    <span className=\"tooltip\">Kick</span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"chart_message_type\">\n                        <p>Type of Messages</p>\n                        <canvas id=\"message_type\" width=\"200\" height=\"200\"></canvas>\n                    </div>\n                    <div className=\"active_sum\">\n                        <p>Summary</p>\n                        <div className=\"sum_el\">\n                            <p>Average messages per day</p>\n                            <p>\n                                {Math.floor(total_msg / this.cal_participate_date(this.state.user_profile_data.created_at))} messages\n                            </p>\n                        </div>\n                        <div className=\"sum_el\">\n                            <p>Average messages per week</p>\n                            <p>\n                                {Math.floor(total_msg / this.cal_participate_week(this.state.user_profile_data.created_at))} messages\n                            </p>\n                        </div>\n                        <div className=\"sum_el\">\n                            <p>Active hours per day</p>\n                            <p>\n                                {this.state.active_hours} hours\n                            </p>\n                        </div>\n                        <div className=\"sum_el\">\n                            <p>Top Active hours</p>\n                            {this.state.top_active === null ?\n                            <p>\n                                No data\n                            </p>\n                                :\n                            <p>\n                                Between {this.state.top_active > 10 ? this.state.top_active + ' : 00' : '0' + this.state.top_active + ' : 00'}\n                                ~\n                                {this.state.top_active + 1 > 10 ? (this.state.top_active + 1) + ' : 00' : '0' + (this.state.top_active + 1) + ' : 00'}\n                            </p>\n                                }\n                        </div>\n                        <div className=\"sum_el\">\n                            <p>Total Messages</p>\n                            <p>\n                                {total_msg}\n                            </p>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"chart_message\">\n                    <p>Messages</p>\n                    <canvas id=\"total_message_crt\" width=\"1186\" height=\"200\"></canvas>\n                </div>\n                <div className=\"chart_activehour\">\n                    <p>Active Hours</p>\n                    <canvas id=\"active_hour_crt\"  width=\"1186\" height=\"200\"></canvas>\n                </div>\n                <MessageLogModal message_log_open={this.state.message_log_open} botId={this.props.botId} message_log={this.state.message_log} closeModal={this.toggleMessageLogModal.bind(this)}></MessageLogModal>\n            </div>\n        )\n    }\n}\n\nexport default User;","import React, { useState } from \"react\";\nimport \"react-daypicker/lib/DayPicker.css\";\nimport DayPicker from \"react-daypicker\";\n\nfunction SelectboxDate(props) {\n    const [date, setDate] = useState(\"\");\n    const [isOpen, setIsOpen] = useState(false);\n  \n    function getFormattedDate() {\n      if (date) {\n        const yy = date.getFullYear();\n        const mm = date.getMonth() + 1;\n        const dd = date.getDate();\n  \n        return `${yy}-${mm}-${dd}`;\n      } else {\n        const today = new Date(Date.now());\n        const yy = today.getFullYear();\n        const mm = today.getMonth() + 1;\n        const dd = today.getDate();\n  \n        return `${yy}-${mm}-${dd}`;\n      }\n    }\n  \n    function toggleDatePicker(day) {\n      setDate(day);\n      setIsOpen(false);\n    }\n  \n    return (\n      <div className=\"selectbox_date\">\n        <input\n          type=\"hidden\"\n          name=\"selectedDate\"\n          value={getFormattedDate()}\n        ></input>\n        <a className=\"selected_date\" onClick={() => setIsOpen(!isOpen)}>\n          {getFormattedDate()}\n        </a>\n        <div className={isOpen ? \"datepicker_pop open\" : \"datepicker_pop\"}>\n          <DayPicker onDayClick={day => toggleDatePicker(day)} />\n        </div>\n      </div>\n    );\n  }\n\n  export default SelectboxDate;","import React, { useState } from \"react\";\n\nfunction SelectboxDay(props) {\n    const [day, setDay] = useState([]);\n    const [isOpen, setIsOpen] = useState(false);\n    const days = [\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n      \"Sunday\"\n    ];\n  \n    function decide_inout(el) {\n      if (el) {\n        if (day.findIndex(element => element === el) !== -1) {\n          const idx = day.findIndex(element => element === el);\n          if (idx === 0 || idx === day.length - 1) {\n            if (idx === 0) {\n              day.shift();\n              setDay(day);\n            } else if (idx === day.length - 1) {\n              day.pop();\n              setDay(day);\n            }\n          } else {\n            const sep_left = day.slice(0, idx);\n            const sep_right = day.slice(idx + 1);\n            const result = sep_left.concat(sep_right);\n            setDay(result);\n          }\n        } else {\n          setDay([...day, el]);\n        }\n      }\n    }\n  \n    const list = days.map(item => {\n      return (\n        <div className=\"day_item\">\n          <label className=\"day_name\">{item}</label>\n          <input\n            type=\"checkbox\"\n            className=\"day_check\"\n            multiple\n            onChange={() => decide_inout(item.substr(0, 3))}\n          ></input>\n        </div>\n      );\n    });\n    return (\n      <div className=\"selectbox_day\">\n        <input\n          type=\"hidden\"\n          name=\"selectedDay\"\n          value={JSON.stringify(day)}\n        ></input>\n        <a className=\"selected_date\" onClick={() => setIsOpen(!isOpen)}>\n          {day.toString()}\n        </a>\n        <div className={isOpen ? \"daypicker_pop open\" : \"daypicker_pop\"}>\n          {list}\n        </div>\n      </div>\n    );\n  }\n\n  export default SelectboxDay;","import React, { useState } from \"react\";\n\nfunction SelectboxHour(props) {\n    const [isOpen, setOpen] = useState(false);\n    const [selected_hour, setHour] = useState(new Date(Date.now()).getHours());\n    const hourlist = [];\n    for (var i = 0; i < 24; i++) {\n      hourlist.push(i);\n    }\n  \n    function select_hour(h) {\n      setHour(h);\n      setOpen(false);\n    }\n  \n    function open_selector() {\n      setOpen(!isOpen);\n      document.querySelector(\".dim\").style.display = \"block\";\n      document\n        .querySelector(\".dim\")\n        .addEventListener(\"click\", background_listner);\n  \n      function background_listner() {\n        setOpen(false);\n        document.querySelector(\".dim\").style.display = \"none\";\n        document\n          .querySelector(\".dim\")\n          .removeEventListener(\"click\", background_listner);\n      }\n    }\n  \n    const list = hourlist.map((hour, index) => {\n      return (\n        <div className=\"hour_items\" key={index} onClick={() => select_hour(hour)}>\n          <p>{hour}</p>\n        </div>\n      );\n    });\n    return (\n      <div className=\"selectbox_hour\">\n        <input type=\"hidden\" name=\"selectedHour\" value={selected_hour}></input>\n        <a className=\"selected_hour\" onClick={() => open_selector()}>\n          {selected_hour} hr\n        </a>\n        <div className={isOpen ? \"hourpicker_pop open\" : \"hourpicker_pop\"}>\n          {list}\n        </div>\n      </div>\n    );\n  }\n\n  export default SelectboxHour;","import React, { useState } from \"react\";\n\nfunction SelectboxMin(props) {\n    const [isOpen, setOpen] = useState(false);\n    const [selected_hour, setHour] = useState(new Date(Date.now()).getMinutes());\n    const minlist = [];\n    for (var i = 0; i < 60; i++) {\n      minlist.push(i);\n    }\n  \n    function select_min(m) {\n      setHour(m);\n      setOpen(false);\n    }\n  \n    function open_selector() {\n      setOpen(!isOpen);\n      document.querySelector(\".dim\").style.display = \"block\";\n      document\n        .querySelector(\".dim\")\n        .addEventListener(\"click\", background_listner);\n  \n      function background_listner() {\n        setOpen(false);\n        document.querySelector(\".dim\").style.display = \"none\";\n        document\n          .querySelector(\".dim\")\n          .removeEventListener(\"click\", background_listner);\n      }\n    }\n  \n    const list = minlist.map((min, index) => {\n      return (\n        <div className=\"min_items\" onClick={() => select_min(min)} key={index}>\n          <p>{min}</p>\n        </div>\n      );\n    });\n    return (\n      <div className=\"selectbox_min\">\n        <input type=\"hidden\" name=\"selectedMin\" value={selected_hour}></input>\n        <a className=\"selected_min\" onClick={() => open_selector()}>\n          {selected_hour} min\n        </a>\n        <div className={isOpen ? \"minpicker_pop open\" : \"minpicker_pop\"}>\n          {list}\n        </div>\n      </div>\n    );\n  }\n\n  export default SelectboxMin;","import React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport {Event} from '../Tracking';\n\nimport SelectboxDate from './SelectboxDate';\nimport SelectboxDay from './SelectboxDay';\nimport SelectboxHour from './SelectboxHour';\nimport SelectboxMin from './SelectboxMin';\n\nfunction SettingTime(props) {\n  const type = props.type;\n\n  if (type === 0) {\n    return (\n      <div className=\"set_of_timeset\">\n        <SelectboxDate></SelectboxDate>\n        <SelectboxHour></SelectboxHour>\n        <SelectboxMin></SelectboxMin>\n      </div>\n    );\n  } else if (type === 1) {\n    return (\n      <div className=\"set_of_timeset\">\n        <SelectboxHour></SelectboxHour>\n        <SelectboxMin></SelectboxMin>\n      </div>\n    );\n  } else if (type === 2) {\n    return (\n      <div className=\"set_of_timeset\">\n        <SelectboxDay></SelectboxDay>\n        <SelectboxHour></SelectboxHour>\n        <SelectboxMin></SelectboxMin>\n      </div>\n    );\n  } else if (type === 3) {\n    return (\n      <div className=\"set_of_timeset\">\n        <SelectboxHour></SelectboxHour>\n        <SelectboxMin></SelectboxMin>\n      </div>\n    );\n  }\n}\n\nclass Announcement extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current_item: 0,\n      opened_selectbox: false,\n      message_type: 1,\n      uploadImage: \"\",\n      isOpen_btn_modal: false,\n      message_btns: [],\n      messages: [],\n      origin_messages: [],\n      onEditing: 0,\n      editId: 0\n    };\n  }\n\n  toggleSelectbox() {\n    this.setState({\n      opened_selectbox: !this.state.opened_selectbox\n    });\n    document.querySelector(\".dim\").style.display = \"block\";\n    document\n      .querySelector(\".dim\")\n      .addEventListener(\"click\", background_listner.bind(this));\n\n    function background_listner() {\n      this.setState({\n        opened_selectbox: false\n      });\n      document.querySelector(\".dim\").style.display = \"none\";\n      document\n        .querySelector(\".dim\")\n        .removeEventListener(\"click\", background_listner.bind(this));\n    }\n  }\n\n  toggleAddBtnModal() {\n    this.setState({ isOpen_btn_modal: !this.state.isOpen_btn_modal });\n  }\n\n  toggleManipulationBtns(event) {\n    event.currentTarget.nextSibling.classList.toggle(\"active\");\n    return false;\n  }\n\n  setInlineBtns() {\n    const dataset = {\n      text: document.forms[1].inline_text.value,\n      url: document.forms[1].inline_url.value\n    };\n\n    this.setState({\n      message_btns: [...this.state.message_btns, dataset],\n      isOpen_btn_modal: false\n    });\n    document.forms[1].inline_text.value = \"\";\n    document.forms[1].inline_url.value = \"\";\n  }\n\n  deleteInlineBtn(index) {\n    const btns = this.state.message_btns;\n    if (index === 0) {\n      btns.shift();\n      this.setState({ message_btns: btns });\n    } else if (index === btns.length - 1) {\n      btns.pop();\n      this.setState({ message_btns: btns });\n    } else {\n      const merge_left = btns.slice(0, index);\n      const merge_right = btns.slice(index + 1);\n\n      this.setState({ message_btns: merge_left.concat(merge_right) });\n    }\n  }\n\n  editInlineBtn(index) {\n    this.deleteInlineBtn(index);\n    this.setState({ isOpen_btn_modal: true });\n  }\n\n  getInlineBtns() {\n    const btns = this.state.message_btns;\n    if (btns) {\n      return btns.map((btn, index) => {\n        return (\n          <div className=\"inline_btn\" key={index}>\n            <p>{btn.text}</p>\n            <p className=\"whole_url\">{btn.url}</p>\n            <div\n              className=\"icon elipse_icon\"\n              onClick={ev => this.toggleManipulationBtns(ev)}\n            ></div>\n            <div className=\"inline_btn_manipulate\">\n              <i\n                className=\"icon edit_icon\"\n                onClick={() => this.editInlineBtn(index)}\n              ></i>\n              <i\n                className=\"icon delete_icon\"\n                onClick={() => this.deleteInlineBtn(index)}\n              ></i>\n            </div>\n          </div>\n        );\n      });\n    }\n  }\n\n  change_item(num) {\n    if (typeof num === \"number\") {\n      this.setState({\n        current_item: num,\n        opened_selectbox: false\n      });\n    }\n  }\n\n  uploadedImage(event) {\n    const file = event.target.files[0];\n    if (file.size > 5 * 1024 * 1024) {\n      alert(\"File size should be less than 5MB\");\n      return false;\n    }\n    this.makePreview(file);\n    this.setState({ uploadImage: file });\n  }\n\n  makePreview(file) {\n    const fr = new FileReader();\n\n    fr.onload = function(e) {\n      const img_el = document.createElement(\"img\");\n      img_el.setAttribute(\"src\", e.target.result);\n\n      const target_el = document.querySelector(\".img_preview\");\n      while (target_el.firstChild) {\n        target_el.removeChild(target_el.firstChild);\n      }\n\n      document.querySelector(\".img_preview\").appendChild(img_el);\n    };\n\n    fr.readAsDataURL(file);\n  }\n\n  sendTestMsg() {}\n\n  changeActiveAnnounce(index) {\n    const pre_msg = this.state.origin_messages[index];\n\n    const buttons = JSON.parse(pre_msg.buttons);\n    if (buttons) {\n      this.setState({\n        current_item: parseInt(pre_msg.schedule_type),\n        message_btns: [...this.state.message_btns, ...buttons]\n      });\n    }\n\n    document.forms[0].announce_txt.value = pre_msg.content;\n  }\n\n  deleteAnnounce(index) {\n    Axios.post(\"/delAnnounce\", {\n      chat_id: window.localStorage.getItem(\"chat_id\"),\n      ann_id: this.state.origin_messages[index].schedule_id\n    }).then(res => {\n      if (res.data) {\n        this.getAnnouncement();\n        Event('Interactions', 'delete interaction', 'Announcement');\n      }\n    });\n  }\n\n  registerAnnounceMsg() {\n    const announce_type = document.forms[0].announceType.value;\n\n    const selected_hour = document.forms[0].selectedHour.value;\n    const selected_min = document.forms[0].selectedMin.value;\n    let selected_date, selected_month, selected_monthofday;\n\n    if (document.forms[0].selectedDate) {\n      selected_date = document.forms[0].selectedDate.value.split(\"-\");\n      selected_month = selected_date[1];\n      selected_monthofday = selected_date[2];\n    }\n\n    let selected_weekofday = \"\";\n    if (document.forms[0].selected_weekofday) {\n      selected_weekofday = JSON.parse(document.forms[0].selectedDay.value);\n    }\n\n    let content = \"\";\n    if (this.state.message_type) {\n      content = document.forms[0].announce_txt.value;\n    }\n\n    Axios.post(\"/setAnnounce\", {\n      chat_id: window.localStorage.getItem(\"chat_id\"),\n      type: announce_type,\n      month: selected_month,\n      monthofday: selected_monthofday,\n      hour: selected_hour,\n      min: selected_min,\n      weekofday: selected_weekofday,\n      content: content,\n      content_type: this.state.message_type,\n      content_img: this.state.uploadImage,\n      buttons: JSON.stringify(this.state.message_btns),\n      onEditing: this.state.onEditing,\n      id: this.state.editId\n    }).then(() => {\n      this.getAnnouncement();\n      document.forms[0].announce_txt.value = \"\";\n      Event('Interactions', 'set interaction', 'Announcement');\n    });\n  }\n\n  getAnnouncement() {\n    Axios.post(\"/getAnnounce\", {\n      chat_id: window.localStorage.getItem(\"chat_id\")\n    }).then(res => {\n      if (res.data) {\n        this.setState({\n          messages: res.data.map((msg, index) => {\n            return (\n              <div\n                className=\"message_list\"\n                key={index}\n                onClick={() => this.changeActiveAnnounce(index)}\n              >\n                <p className=\"savedMsg_content\">{msg.content}</p>\n                <p className=\"savedMsg_type\">\n                  {msg.schedule_type === \"0\"\n                    ? \"once\"\n                    : msg.schedule_type === \"1\"\n                    ? \"daily\"\n                    : msg.schedule_type === \"2\"\n                    ? \"weekly\"\n                    : msg.schedule_type === \"3\"\n                    ? \"montly\"\n                    : null}\n                </p>\n                {this.verifyExpire(msg)}\n                <div className=\"savedMsg_manipulation_btns_wrap\">\n                  <a\n                    className=\"savedMsg_del_btn\"\n                    onClick={() => this.deleteAnnounce(index)}\n                  >\n                    Delete\n                  </a>\n                </div>\n              </div>\n            );\n          }),\n          origin_messages: res.data\n        });\n      } else {\n        this.setState({\n          messages: [],\n          origin_messages: []\n        });\n      }\n    });\n  }\n\n  verifyExpire(msg) {\n    const cur_time = new Date(Date.now());\n    let comparison_time = new Date();\n    comparison_time.setMonth(msg.schedule_month);\n    comparison_time.setDate(msg.schedule_dayofmonth);\n    comparison_time.setHours(msg.schedule_hour);\n    comparison_time.setMinutes(msg.schedule_min);\n\n    if (cur_time > comparison_time) {\n      return <span className=\"expired_msg\">expried</span>;\n    } else {\n      return null;\n    }\n  }\n\n  componentDidMount() {\n    this.getAnnouncement();\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 className=\"seg_title\">Create an announcement</h2>\n        <form className=\"announcement_seg\" method=\"post\">\n          <div className=\"announce_type announcement_row\">\n            <p className=\"announce_label\">Repeat:</p>\n            <div className=\"selectbox_wrap\">\n              <input\n                type=\"hidden\"\n                name=\"announceType\"\n                value={this.state.current_item}\n              ></input>\n              <a\n                className=\"announce_selectbox\"\n                onClick={() => this.toggleSelectbox()}\n              >\n                {this.state.current_item === 0\n                  ? \"once\"\n                  : this.state.current_item === 1\n                  ? \"everyday\"\n                  : this.state.current_item === 2\n                  ? \"everyweek\"\n                  : this.state.current_item === 3\n                  ? \"everymonth\"\n                  : \"\"}\n              </a>\n              <div\n                className={\n                  this.state.opened_selectbox ? \"selectbox open\" : \"selectbox\"\n                }\n              >\n                <p onClick={() => this.change_item(0)}>once</p>\n                <p onClick={() => this.change_item(1)}>everyday</p>\n                <p onClick={() => this.change_item(2)}>everyweek</p>\n                <p onClick={() => this.change_item(3)}>everymonth</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"announce_type announcement_row\">\n            <p className=\"announce_label\">Date & Time:</p>\n            <div className=\"selectbox_wrap\">\n              <SettingTime type={this.state.current_item}></SettingTime>\n            </div>\n          </div>\n          <div className=\"announce_type announcement_row\">\n            <p className=\"announce_label\">Message:</p>\n            <div className=\"editable_message\">\n              {this.state.message_type ? (\n                <textarea name=\"announce_txt\"></textarea>\n              ) : (\n                <div className=\"img_preview\"></div>\n              )}\n\n              <div className=\"changeable_types\">\n                <i\n                  className={\n                    this.state.message_type\n                      ? \"icon text_icon active\"\n                      : \"icon text_icon\"\n                  }\n                  onClick={() => this.setState({ message_type: 1 })}\n                ></i>\n                <span> | </span>\n                <label>\n                  <input\n                    type=\"file\"\n                    name=\"announce_img\"\n                    onChange={ev => this.uploadedImage(ev)}\n                  ></input>\n                  <i\n                    className={\n                      this.state.message_type\n                        ? \"icon picture_icon\"\n                        : \"icon picture_icon active\"\n                    }\n                    onClick={() => this.setState({ message_type: 0 })}\n                  ></i>\n                </label>\n              </div>\n            </div>\n          </div>\n          <div className=\"announce_type announcement_row\">\n            <p></p>\n            <p className=\"announce_desc_add\">\n              {/* You can style your announcements using markdown or HTML. You can view detailed styling options here. */}\n            </p>\n          </div>\n          <div className=\"announce_type announcement_row\">\n            <p className=\"announce_label\">Buttons:</p>\n            {this.state.message_btns && this.state.message_btns.length === 0 ? (\n              <div\n                className=\"icon add_btn\"\n                onClick={() => this.toggleAddBtnModal()}\n              ></div>\n            ) : (\n              <div className=\"inline_btns_wrap\">\n                {this.getInlineBtns()}\n                <div\n                  className=\"icon add_btn\"\n                  onClick={() => this.toggleAddBtnModal()}\n                ></div>\n              </div>\n            )}\n          </div>\n          <div className=\"announce_btn_wrap announcement_row\">\n            <div></div>\n            <div>\n              {/* <a className=\"testsend_btn\" onClick={() => this.sendTestMsg()}>\n                Test Send\n              </a> */}\n              <a\n                className=\"send_btn\"\n                onClick={() => this.registerAnnounceMsg()}\n              >\n                Send\n              </a>\n            </div>\n          </div>\n        </form>\n\n        {this.state.messages.length !== 0 ? (\n          <div className=\"history_messages\">\n            <h2>Saved Announcements</h2>\n            <div className=\"savedMsg_container\">{this.state.messages}</div>\n          </div>\n        ) : null}\n\n        <div\n          className={\n            this.state.isOpen_btn_modal\n              ? \"modal add_inlineBtn_modal open\"\n              : \"modal add_inlineBtn_modal\"\n          }\n        >\n          <h2>Create a Button</h2>\n          <form>\n            <div className=\"inline_content_wrap\">\n              <span>Title:</span>\n              <div className=\"inline_content\">\n                <input\n                  type=\"text\"\n                  name=\"inline_text\"\n                  autoComplete=\"off\"\n                ></input>\n              </div>\n            </div>\n            <div className=\"inline_content_wrap\">\n              <span>URL:</span>\n              <div className=\"inline_content\">\n                <input type=\"text\" name=\"inline_url\" autoComplete=\"off\"></input>\n              </div>\n            </div>\n\n            <a className=\"add_confirm_btn\" onClick={() => this.setInlineBtns()}>\n              ADD\n            </a>\n            <a\n              className=\"cancel_btn\"\n              onClick={() => this.setState({ isOpen_btn_modal: false })}\n            >\n              CANCEL\n            </a>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Announcement;\n","import React from \"react\";\nimport Axios from \"axios\";\nimport {Event} from '../Tracking';\n\nimport \"../../style/css/StartMenu_reg.min.css\";\n\nclass FAQ_register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message_type: 1,\n      uploadImage: '',\n      imageType: '',\n      messages: [],\n      origin_msg: [],\n      message_btns: [],\n      isOpen: false,\n      crr_message: [],\n      onEditing: 0,\n      editId: 0\n    };\n  }\n\n  uploadedImage(event) {\n    const file = event.target.files[0];\n    if (file.size > 5 * 1024 * 1024) {\n      alert(\"File size should be less than 5MB\");\n      return false;\n    }\n    this.makePreview(file);\n    this.setState({imageType: file.type.split('/')[1], uploadImage: file });\n  }\n\n  makePreview(file) {\n    const fr = new FileReader();\n\n    fr.onload = function(e) {\n      const img_el = document.createElement(\"img\");\n      img_el.setAttribute(\"src\", e.target.result);\n\n      const target_el = document.querySelector(\".img_preview\");\n      while (target_el.firstChild) {\n        target_el.removeChild(target_el.firstChild);\n      }\n\n      document.querySelector(\".img_preview\").appendChild(img_el);\n    };\n\n    fr.readAsDataURL(file);\n  }\n\n  removeImagePreview() {\n    const target_el = document.querySelector(\".img_preview\");\n    while (target_el.firstChild) {\n      target_el.removeChild(target_el.firstChild);\n    }\n  }\n\n  clearTexts() {\n    if (this.state.message_type) {\n      document.querySelector(\"textarea[name=welcome_txt]\").value = \"\";\n    } else {\n      this.removeImagePreview();\n    }\n\n    return true;\n  }\n\n  submit_startmenu(event) {\n    var form_data = new FormData();\n\n    form_data.append(\"chat_id\", window.localStorage.getItem(\"chat_id\"));\n    form_data.append(\"content_text\", document.forms[0].welcome_txt.value);\n    form_data.append(\"content_img\", this.state.uploadImage);\n    form_data.append(\"content_type\", this.state.message_type ? \"txt\" : \"img\");\n    form_data.append(\"img_type\", this.state.imageType);\n    form_data.append('inline_btns', JSON.stringify(this.state.message_btns));\n    if (this.state.onEditing) {\n      form_data.append('id', this.state.editId);\n    }\n\n    if (form_data.get(\"chat_id\")) {\n      Axios.post(\"pushStartMenu\", form_data).then(res => {\n        if (res.data) {\n          this.getStartMenu();\n          this.clearTexts();\n          Event('Interactions', 'set interaction', 'Welcome message');\n        }\n      });\n    }\n  }\n\n  convertToBase64(img, type, targetid) {\n    if (img !== null) {\n      var blob = new Blob([img], { type: \"image/\" + type });\n      var reader = new FileReader();\n\n      reader.onload = function(file) {\n        var img_tag = document.querySelector(\"#\" + targetid);\n        img_tag.src = file.target.result;\n      };\n      reader.readAsDataURL(blob);\n    }\n  }\n\n  getStartMenu() {\n    Axios.post(\"/getStartMenu\", {\n      chat_id: window.localStorage.getItem(\"chat_id\")\n    })\n\n    Axios.post(\"/getStartMenuAll\", {\n      chat_id: window.localStorage.getItem(\"chat_id\")\n    }).then(res => {\n      if (res.data) {\n        this.setState({messages: res.data.map((msg, index) => {\n          return (\n            <div className=\"message_list\" key={index}>\n              <p className=\"savedMsg_content\">\n                {msg.response_type === 'txt' ?\n                  msg.content_txt\n                  :msg.content_img}\n              </p>\n              <div className=\"savedMsg_manipulation_btns_wrap\">\n                <a className=\"savedMsg_edit_btn\" onClick={() => this.editSelectedWelcome(index)}>Edit</a>\n                <a className=\"savedMsg_del_btn\" onClick={() => this.deleteSelectdWelcome(index)}>Delete</a>\n              </div>\n            </div>\n          )\n        }), origin_msg: res.data})\n      }\n    });\n  }\n\n  editSelectedWelcome(index) {\n    const welcome_msg = this.state.origin_msg[index];\n    \n    document.forms[0].welcome_txt.value = welcome_msg.content_txt;\n    this.setState({onEditing: 1, editId: this.state.origin_msg[index].id, message_btns: JSON.parse(welcome_msg.buttons)});\n  }\n\n  deleteSelectdWelcome(index) {\n    Axios.post('/delStartMenu', {\n      chat_id: window.localStorage.getItem('chat_id'),\n      id: this.state.origin_msg[index].id\n    }).then((res) => {\n      if (res.data) {\n        this.getStartMenu();\n        Event('Interactions', 'delete interaction', 'Welcome message');\n      }\n    })\n  }\n\n  toggleAddBtnModal() {\n    this.setState({isOpen: !this.state.isOpen})\n  }\n\n  toggleManipulationBtns(event) {\n    event.currentTarget.nextSibling.classList.toggle('active');\n    return false;\n  }\n\n  setInlineBtns() {\n    const dataset = {\n      text: document.forms[1].inline_text.value,\n      url: document.forms[1].inline_url.value\n    }\n\n    this.setState({message_btns: [...this.state.message_btns, dataset], isOpen: false})\n    document.forms[1].inline_text.value = '';\n    document.forms[1].inline_url.value = '';\n  }\n\n  deleteInlineBtn(index) {\n    const btns = this.state.message_btns;\n    if (index === 0) {\n        btns.shift();\n        this.setState({message_btns: btns});\n    } else if (index === btns.length - 1) {\n        btns.pop();\n        this.setState({message_btns: btns})\n    } else {\n      const merge_left = btns.slice(0, index);\n      const merge_right = btns.slice(index + 1);\n      \n      this.setState({message_btns: merge_left.concat(merge_right)})\n    }\n  }\n\n  editInlineBtn(index) {\n    this.deleteInlineBtn(index);\n    this.setState({isOpen: true});\n  }\n\n  getInlineBtns() {\n    const btns = this.state.message_btns;\n    if (btns) {\n      return btns.map((btn, index) => {\n        return (\n          <div className=\"inline_btn\" key={index}>\n            <p>\n              {btn.text}\n            </p>\n            <p className=\"whole_url\">\n                {btn.url}\n            </p>\n            <div className=\"icon elipse_icon\" onClick={(ev) => this.toggleManipulationBtns(ev)}></div>\n            <div className=\"inline_btn_manipulate\">\n              <i className=\"icon edit_icon\" onClick={() => this.editInlineBtn(index)}></i>\n              <i className=\"icon delete_icon\" onClick={() => this.deleteInlineBtn(index)}></i>\n            </div>\n          </div>\n        )\n      })\n    }\n  }\n\n  componentDidMount() {\n    this.getStartMenu();\n  }\n\n  render() {\n    return (\n      <div className=\"startmenu_section\">\n        <h2 className=\"seg_title\">\n          Welcome Message for New Members\n        </h2>\n        <form method=\"post\" className=\"startmenu_tb\">\n          <div className=\"tb_row\">\n            <p className=\"tb_label\">\n                Message:\n            </p>\n            <div className=\"editable_message\">\n                {\n                    this.state.message_type ?\n                    <textarea name=\"welcome_txt\" value={this.state.crr_message ? this.state.crr_message.content_txt : ''}>\n                      \n                    </textarea>\n                    :\n                    <div className=\"img_preview\">\n                      {this.state.crr_message ? \n                      <img src={this.state.crr_message.content_img} alt=\"img preview\"></img>\n                      : \n                      ''}\n                    </div>\n                }\n                \n                <div className=\"changeable_types\">\n                    <i className={this.state.message_type ? \"icon text_icon active\" : \"icon text_icon\"} onClick={() => this.setState({message_type: 1})}></i>\n                    <span> | </span>\n                    <label>\n                        <input type=\"file\" name=\"announce_img\" onChange={(ev) => this.uploadedImage(ev)}></input>\n                        <i className={this.state.message_type ? \"icon picture_icon\" : \"icon picture_icon active\"} onClick={() => this.setState({message_type: 0})}></i>\n                    </label>\n                </div>\n            </div>\n          </div>\n          <div className=\"tb_row\">\n            <p>\n               \n            </p>\n            <p className=\"welcome_desc_add\">\n            {/* You can style your welcome message using markdown or HTML. Type [user] to mention a member’s name. You can view detailed styling options here. */}\n            </p>\n          </div>\n          <div className=\"tb_row\">\n            <p className=\"tb_label\">\n                Buttons:\n            </p>\n            {\n              this.state.message_btns && this.state.message_btns.length === 0 ?\n              <div className=\"icon add_btn\" onClick={() => this.toggleAddBtnModal()}>\n\n              </div>\n              :\n              <div className=\"inline_btns_wrap\">\n                {this.getInlineBtns()}\n                <div className=\"icon add_btn\" onClick={() => this.toggleAddBtnModal()}></div>\n              </div>\n              \n            }\n          </div>\n          <div className=\"tb_row startmenu_btn_wrap\">\n              <div></div>\n              <div>\n                  {/* <a className=\"testsend_btn\" onClick={() => this.sendTestMsg()}>Test Send</a> */}\n                  <a className=\"send_btn\" onClick={(ev) => this.submit_startmenu(ev)}>Save</a>\n              </div>\n          </div>\n        </form>\n        {this.state.messages.length !== 0 ?\n          <div className=\"history_messages\">\n            <h2>Saved Welcome Messages</h2>\n            <p>If you have saved more than one, welcome messages will be selected randomly.</p>\n            <div className=\"savedMsg_container\">\n              {this.state.messages}\n            </div>\n          </div>\n          :\n          null}\n        <div className={this.state.isOpen ? 'modal add_inlineBtn_modal open' : 'modal add_inlineBtn_modal'}>\n          <h2>Create a Button</h2>\n          <form>\n            <div className=\"inline_content_wrap\">\n              <span>Title:</span>\n              <div className=\"inline_content\">\n                <input type=\"text\" name=\"inline_text\" autoComplete=\"off\"></input>\n              </div>\n \n            </div>\n            <div className=\"inline_content_wrap\">\n              <span>URL:</span>\n              <div className=\"inline_content\">\n                <input type=\"text\" name=\"inline_url\" autoComplete=\"off\"></input>\n              </div>\n            </div>\n\n            <a className=\"add_confirm_btn\" onClick={() => this.setInlineBtns()}>ADD</a>\n            <a className=\"cancel_btn\" onClick={() => this.setState({isOpen: false})}>CANCEL</a>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FAQ_register;\n","import React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport {Event} from '../Tracking';\n\nimport '../../style/css/AutoResponse.min.css'\n\nclass AutoResponce extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current_item: 0,\n      opened_selectbox: false,\n      message_type: 1,\n      uploadImage: \"\",\n      isOpen_btn_modal: false,\n      message_btns: [],\n      messages: [],\n      origin_messages: [],\n      keyword_type: 0,\n      onEditing: 0,\n      editId: 0\n    };\n  }\n\n  toggleSelectbox() {\n    this.setState({\n      opened_selectbox: !this.state.opened_selectbox\n    });\n  }\n\n  toggleAddBtnModal() {\n    this.setState({ isOpen_btn_modal: !this.state.isOpen_btn_modal });\n  }\n\n  toggleManipulationBtns(event) {\n    event.currentTarget.nextSibling.classList.toggle('active');\n    return false;\n  }\n\n  setInlineBtns() {\n    const dataset = {\n        text: document.forms[1].inline_text.value,\n        url: document.forms[1].inline_url.value\n      }\n  \n      this.setState({message_btns: [...this.state.message_btns, dataset], isOpen_btn_modal: false})\n      document.forms[1].inline_text.value = '';\n      document.forms[1].inline_url.value = '';\n  }\n\n  deleteInlineBtn(index) {\n    const btns = this.state.message_btns;\n    if (index === 0) {\n        btns.shift();\n        this.setState({message_btns: btns});\n    } else if (index === btns.length - 1) {\n        btns.pop();\n        this.setState({message_btns: btns})\n    } else {\n      const merge_left = btns.slice(0, index);\n      const merge_right = btns.slice(index + 1);\n      \n      this.setState({message_btns: merge_left.concat(merge_right)})\n    }\n  }\n\n  editInlineBtn(index) {\n    this.deleteInlineBtn(index);\n    this.setState({isOpen_btn_modal: true});\n  }\n\n  getInlineBtns() {\n    const btns = this.state.message_btns;\n    if (btns) {\n      return btns.map((btn, index) => {\n        return (\n          <div className=\"inline_btn\" key={index}>\n            <p>\n              {btn.text}\n            </p>\n            <p className=\"whole_url\">\n                {btn.url}\n            </p>\n            <div className=\"icon elipse_icon\" onClick={(ev) => this.toggleManipulationBtns(ev)}></div>\n            <div className=\"inline_btn_manipulate\">\n              <i className=\"icon edit_icon\" onClick={() => this.editInlineBtn(index)}></i>\n              <i className=\"icon delete_icon\" onClick={() => this.deleteInlineBtn(index)}></i>\n            </div>\n          </div>\n        )\n      })\n    }\n  }\n\n  change_item(num) {\n    if (typeof num === \"number\") {\n      this.setState({\n        current_item: num,\n        opened_selectbox: false\n      });\n    }\n  }\n\n  uploadedImage(event) {\n    const file = event.target.files[0];\n    if (file.size > 5 * 1024 * 1024) {\n      alert(\"File size should be less than 5MB\");\n      return false;\n    }\n    this.makePreview(file);\n    this.setState({ uploadImage: file });\n  }\n\n  makePreview(file) {\n    const fr = new FileReader();\n\n    fr.onload = function(e) {\n      const img_el = document.createElement(\"img\");\n      img_el.setAttribute(\"src\", e.target.result);\n\n      const target_el = document.querySelector(\".img_preview\");\n      while (target_el.firstChild) {\n        target_el.removeChild(target_el.firstChild);\n      }\n\n      document.querySelector(\".img_preview\").appendChild(img_el);\n    };\n\n    fr.readAsDataURL(file);\n  }\n\n  sendTestMsg() {}\n\n  changeActiveFAQ(index) {\n    const pre_msg = this.state.origin_messages[index];\n\n    const buttons = JSON.parse(pre_msg.buttons);\n    if (buttons) {\n        this.setState({\n            current_item: parseInt(pre_msg.schedule_type),\n            message_btns: [...this.state.message_btns, ...buttons]\n        })\n    }\n    \n    document.forms[0].faq_txt.value = pre_msg.faq_response;\n    document.forms[0].keywords.value = pre_msg.faq_content;\n  }\n\n  editSelectedFAQ(index) {\n    this.changeActiveFAQ(index);\n    this.setState({onEditing: 1, editId: this.state.origin_messages[index].id});\n    return false;\n  }\n\n  deleteSelectedFAQ(index) {\n      Axios.post('/delFaqlist', {\n          id: this.state.origin_messages[index].id,\n          chat_id: window.localStorage.getItem('chat_id')\n      }).then((res) => {\n        if (res.data) {\n            this.getFaqList();\n            Event('Interactions', 'delete interaction', 'Auto responce');\n        }\n      })\n  }\n\n  registerFAQMsg() {\n\n    let content = \"\";\n    if (this.state.message_type) {\n      content = document.forms[0].faq_txt.value;\n    }\n\n    var form_data = new FormData();\n        \n    form_data.append('chat_id', window.localStorage.getItem('chat_id'))\n    form_data.append('keyword', document.forms[0].keywords.value)\n    form_data.append('response', content)\n    form_data.append('response_img', this.state.uploadImage)\n    form_data.append('response_type', this.state.message_type ? 'txt' : 'img')\n    form_data.append('img_type', this.state.imageType)\n    form_data.append('keyword_type', this.state.keyword_type)\n    form_data.append('inline_btns', JSON.stringify(this.state.message_btns))\n    form_data.append('onEditing', this.state.onEditing);\n    if (this.state.onEditing) {\n        form_data.append('id', this.state.editId);\n    }\n\n    if (form_data.get('chat_id')) {\n        Axios.post('pushFaqlist', form_data)\n            .then((res) => {\n                if (res.data) {\n                    this.getFaqList();\n                    // this.clearTexts();\n                    Event('Interactions', 'set interaction', 'Auto responce');\n                }\n            })\n    } \n  }\n\n  getFaqList() {\n    const chat_id = window.localStorage.getItem('chat_id')\n\n    if (chat_id.length !== 0) {\n        Axios.post('getFaqlist', {chat_id: chat_id})\n        .then((res) => {\n            if (res.data) {\n                this.setState({\n                    messages: res.data.map((msg, index) => {\n                        return (\n                            <div className=\"message_list\" key={index} onClick={() => this.changeActiveFAQ(index)}>\n                                <p>\n                                    Keywords\n                                </p>\n                                <p className=\"savedMsg_keywords\">\n                                    {msg.faq_content}\n                                </p>\n                                <p className=\"savedMsg_content\">\n                                    {msg.faq_response}\n                                </p>\n                                <div className=\"savedMsg_manipulation_btns_wrap\">\n                                    <a className=\"savedMsg_edit_btn\" onClick={() => this.editSelectedFAQ(index)}>Edit</a>\n                                    <a className=\"savedMsg_del_btn\" onClick={() => this.deleteSelectedFAQ(index)}>Delete</a>\n                                </div>\n                            </div>\n                        )\n                    }),\n                    origin_messages: res.data\n                })\n            }\n        })\n    }\n  }\n\n  componentDidMount() {\n    this.getFaqList()\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 className=\"seg_title\">Create Auto-Response</h2>\n        <form className=\"autores_tb\" method=\"post\">\n        \n          <div className=\"tb_row\">\n            <p className=\"tb_label\">Keywords:</p>\n            <div className=\"tb_keyword\">\n                <input type=\"text\" name=\"keywords\" placeholder=\"Keyword 1, Keyword 2, Keyword 3\"></input>\n                <p className=\"autores_desc_add\">\n                    Separate keywords with comma(,). Keywords are not case sensitive.\n                </p>\n            </div>\n          </div>\n          <div className=\"tb_row\">\n              <div className=\"tb_cell\"></div>\n              <div className=\"tb_cell\">\n                <input type=\"radio\" className=\"keyword_type\" name=\"keyword_type\" value=\"0\" onChange={() => this.setState({keyword_type: 0})} defaultChecked></input>\n                <label>Must contain one of these words</label>\n\n                <input type=\"radio\" className=\"keyword_type\" name=\"keyword_type\" value=\"1\" onChange={() => this.setState({keyword_type: 1})}></input>\n                <label>Must contain two or more of the keywords</label>\n              </div>\n          </div>\n          <div className=\"tb_row\">\n            <p className=\"tb_label\">Message:</p>\n            <div className=\"editable_message\">\n              {this.state.message_type ? (\n                <textarea\n                  name=\"faq_txt\"\n                ></textarea>\n              ) : (\n                <div className=\"img_preview\"></div>\n              )}\n\n              <div className=\"changeable_types\">\n                <i\n                  className={\n                    this.state.message_type\n                      ? \"icon text_icon active\"\n                      : \"icon text_icon\"\n                  }\n                  onClick={() => this.setState({ message_type: 1 })}\n                ></i>\n                <span> | </span>\n                <label>\n                  <input\n                    type=\"file\"\n                    name=\"announce_img\"\n                    onChange={ev => this.uploadedImage(ev)}\n                  ></input>\n                  <i\n                    className={\n                      this.state.message_type\n                        ? \"icon picture_icon\"\n                        : \"icon picture_icon active\"\n                    }\n                    onClick={() => this.setState({ message_type: 0 })}\n                  ></i>\n                </label>\n              </div>\n            </div>\n          </div>\n          <div className=\"tb_row\">\n            <p>\n               \n            </p>\n            <p className=\"autores_desc_add\">\n            {/* You can style your announcements using markdown or HTML. You can view detailed styling options here. */}\n            </p>\n          </div>\n          <div className=\"tb_row\">\n            <p className=\"tb_label\">Buttons:</p>\n            {this.state.message_btns && this.state.message_btns.length === 0 ? (\n              <div\n                className=\"icon add_btn\"\n                onClick={() => this.toggleAddBtnModal()}\n              ></div>\n            ) : (\n              <div className=\"inline_btns_wrap\">\n                {this.getInlineBtns()}\n                <div\n                  className=\"icon add_btn\"\n                  onClick={() => this.toggleAddBtnModal()}\n                ></div>\n              </div>\n            )}\n          </div>\n          <div className=\"autores_btn_wrap tb_row\">\n            <div></div>\n            <div>\n              {/* <a className=\"testsend_btn\" onClick={() => this.sendTestMsg()}>\n                Test Send\n              </a> */}\n              <a\n                className=\"send_btn\"\n                onClick={() => this.registerFAQMsg()}\n              >\n                Save\n              </a>\n            </div>\n          </div>\n        </form>\n\n        {this.state.messages.length !== 0 ?\n          <div className=\"history_messages\">\n            <h2>Responses</h2>\n            <div className=\"savedMsg_container\">\n              {this.state.messages}\n            </div>\n          </div>\n          :\n          null}\n        \n        <div\n          className={\n            this.state.isOpen_btn_modal\n              ? \"modal add_inlineBtn_modal open\"\n              : \"modal add_inlineBtn_modal\"\n          }\n        >\n          <h2>Create a Button</h2>\n          <form>\n            <div className=\"inline_content_wrap\">\n              <span>Title:</span>\n              <div className=\"inline_content\">\n                <input\n                  type=\"text\"\n                  name=\"inline_text\"\n                  autoComplete=\"off\"\n                ></input>\n              </div>\n            </div>\n            <div className=\"inline_content_wrap\">\n              <span>URL:</span>\n              <div className=\"inline_content\">\n                <input type=\"text\" name=\"inline_url\" autoComplete=\"off\"></input>\n              </div>\n            </div>\n\n            <a className=\"add_confirm_btn\" onClick={() => this.setInlineBtns()}>\n              ADD\n            </a>\n            <a\n              className=\"cancel_btn\"\n              onClick={() => this.setState({ isOpen_btn_modal: false })}\n            >\n              CANCEL\n            </a>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AutoResponce;\n","import React, {useState} from 'react';\nimport Axios from 'axios';\nimport SelectboxDate from './SelectboxDate';\nimport SelectboxHour from './SelectboxHour';\nimport SelectboxMin from './SelectboxMin';\n\nfunction Poll_Table_Row_Input (props) {\n    return (\n        <div className=\"poll_tb_row\">\n            <p className=\"poll_label\">\n                {props.title}:\n            </p>\n            <input className=\"poll_input\" name={props.name} placeholder=\"What is the best company?\"></input>\n        </div>\n    )\n}\n\nfunction Poll_Table_Row_Select (props) {\n    var [cur_item, set_cur_item] = useState('Multiple Choice');\n    var [is_open, set_is_open] = useState(false);\n\n    return (\n        <div className=\"poll_tb_row\">\n            <input type=\"hidden\" name=\"poll_type\" value={cur_item}></input>\n            <p className=\"poll_label\">\n                {props.title}:\n            </p>\n            <div className=\"poll_selector\" onClick={() => set_is_open(!is_open)}>\n                {cur_item}\n            </div>\n            <div className={is_open ? 'poll_select_list active' : 'poll_select_list'}>\n                <p onClick={() => {set_cur_item('Multiple Choice'); set_is_open(false)}}>\n                Multiple Choice\n                </p>\n                <p onClick={() => {set_cur_item('Single Choice'); set_is_open(false)}}>\n                Single Choice\n                </p>\n            </div>\n        </div>\n    )\n}\n\nfunction Poll_Table_Row_Dates (props) {\n    return (\n        <div className=\"poll_tb_row\">\n            <p className=\"poll_label\">\n                {props.title}:\n            </p>\n            <div className=\"selectbox_wrap\">\n                <div className=\"set_of_timeset\">\n                    <SelectboxDate></SelectboxDate>\n                    <SelectboxHour></SelectboxHour>\n                    <SelectboxMin></SelectboxMin>\n                </div>            \n            </div>\n        </div>\n    )\n}\n\nfunction Poll_Table_Row_Response (props) {\n    const [option_cnt, set_option_cnt] = useState(3);\n\n    function append_row_option() {\n        const el_input = document.createElement('input');\n        el_input.setAttribute('name', `poll_opt${option_cnt}`);\n        el_input.setAttribute('placeholder', `option ${option_cnt}`);\n\n        const el_response_wrap = document.querySelector('.poll_response_wrap')\n        el_response_wrap.appendChild(el_input);\n        set_option_cnt(option_cnt + 1);\n    }\n\n    return (\n        <div className=\"poll_tb_row\">\n            <p className=\"poll_label\">\n                {props.title}:\n            </p>\n            <div className=\"poll_response_wrap\">\n                <input name=\"poll_opt1\" placeholder=\"option 1\"></input>\n                <input name=\"poll_opt2\" placeholder=\"option 2\"></input>\n            </div>\n            <div className=\"add_option_wrap\">\n                <span className=\"icon_add_btn\" onClick={() => append_row_option()}></span>\n                <span>Add another option</span>\n            </div>\n        </div>\n    )\n}\n\nclass Polls extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    registerPoll() {\n        const options = document.querySelectorAll('input[name^=poll_opt]');\n        let response = [];\n\n        for (var res of options) {\n            response.push(res.value);    \n        }\n        \n        const dataset = {\n            question: document.forms[0].poll_question.value,\n            type: document.forms[0].poll_type.value,\n            close: {\n                date: document.forms[0].selectedDate.value,\n                hour: document.forms[0].selectedHour.value,\n                min: document.forms[0].selectedMin.value,\n            },\n            response: JSON.stringify(response)\n        }\n\n        // Axios.post('/setPoll', dataset)\n        //     .then((res) => {\n\n        //     })\n    }\n\n    render() {\n        return (\n            <div className=\"poll_section\">\n                <h4>Create a Poll</h4>\n                <form className=\"poll_tb\">\n                    <Poll_Table_Row_Input name={'poll_question'} title={'Question'}></Poll_Table_Row_Input>\n                    <Poll_Table_Row_Select name={'poll_question'} title={'Type of Response'}></Poll_Table_Row_Select>\n                    <Poll_Table_Row_Dates name={'poll_question'} title={'Closing Time'}></Poll_Table_Row_Dates>\n                    <Poll_Table_Row_Response name={'poll_question'} title={'Response'}></Poll_Table_Row_Response>\n                    <div className=\"poll_tb_row poll_buttons_wrap\">\n                        <div></div>\n                        <div>\n                            <a\n                                className=\"send_btn\"\n                                onClick={() => this.registerPoll()}\n                            >\n                                Save\n                            </a>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Polls;","import React from 'react';\nimport Title from '../Section_title';\nimport Content_Tabs from '../Modules/TabMenu';\nimport Announcements from '../Modules/Announcement';\nimport WelcomeMessage from '../Modules/StartMenu';\nimport AutoResponce from '../Modules/AutoResponce';\nimport Polls from '../Modules/Polls';\n\nimport '../../style/css/Interactions.min.css';\n\nfunction Segment_Tabs(props) {\n    switch (props.tab) {\n      case 1: {\n        return <Announcements botId={props.botId}></Announcements>\n      }\n      case 2: {\n          return <WelcomeMessage botId={props.botId}></WelcomeMessage>\n      }\n      case 3: {\n          return <AutoResponce botId={props.botId}></AutoResponce>\n      }\n      case 4: {\n          return <Polls botId={props.botId}></Polls>\n      }\n    }\n  }\n\nclass Interactions extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            active_tab: 1\n        }\n    }\n    \n    set_activeTab(num) {\n        return this.setState({ active_tab: num });\n    }\n\n    render() {\n        return (\n            <div className=\"section_interaction\">\n                <Title title=\"Interaction\"></Title>\n                <Content_Tabs opt1={'Announcements'} opt2={'Welcome Message'} opt3={'Auto-Responder'} opt4={'Poll'} active_tab={this.set_activeTab.bind(this)}></Content_Tabs>\n                <div className=\"content_tab\">\n                    <Segment_Tabs tab={this.state.active_tab} botId={this.props.botId}></Segment_Tabs>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Interactions;","import React from 'react';\nimport Axios from 'axios';\nimport {Event} from '../Tracking';\n\nimport '../../style/css/AntiSpam.min.css';\n\nfunction FieldRow(props) {\n    function getFieldName(name) {\n        var fieldName = '';\n\n        switch (name) {\n            case 'anti_image' : {\n                fieldName = 'Delete Images'\n                break;\n            }\n            case 'anti_url' : {\n                fieldName = 'Delete URLs'\n                break;\n            }\n            case 'anti_forward' : {\n                fieldName = 'Delete Forwarded Messages'\n                break;\n            }\n            case 'anti_voice' : {\n                fieldName = 'Delete Voice Messages'\n                break;\n            }\n            case 'anti_gif' : {\n                fieldName = 'Delete GIFs'\n                break;\n            }\n            case 'anti_sticker' : {\n                fieldName = 'Delete Stickers'\n                break;\n            }\n            case 'anti_join_message' : {\n                fieldName = 'Delete Join Messages'\n                break;\n            } \n            case 'anti_left_message' : {\n                fieldName = 'Delete Leave Messages'\n                break;\n            } \n            case 'anti_longname' : {\n                fieldName = 'Block Long Name Spammers'\n                break;\n            } \n            case 'anti_flood' : {\n                fieldName = 'Anti-Flood'\n                break;\n            } \n        }\n\n        return fieldName;\n    }\n\n    function updateAntiOption(field) {\n        Axios.post('/updateAnti', {\n            field: field,\n            chat_id: window.localStorage.getItem('chat_id')\n        }).then(res => {\n            if (res.data) {\n                Event('Antispam', 'set item', field + 'option')\n                props.initOptions()\n            }\n        })\n    }\n\n    return (\n        <div className=\"filter_row\">\n            <p className=\"filter_field\">\n                {getFieldName(props.name)}\n            </p>\n            <div className=\"filter_switch\">\n                <label htmlFor={props.name}>\n                    <input type=\"checkbox\" className=\"anti_filter\" name={props.name} id={props.name} onChange={() => updateAntiOption(props.name)} checked={props.isActive}></input>\n                    <div className=\"custom_chbox\"></div>\n                    <div className=\"custom_chbox_circle\"></div>\n                </label>\n            </div>\n        </div>\n    )\n}\n\nclass AntiSpam extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            anti_options: [],\n            blacklist: [],\n            disabledSlashCommand: false\n        }\n    }\n\n    componentDidMount() {\n       this.initOptions()\n    }\n\n    initOptions () {\n        Axios.post('/getAnti', {\n            chat_id: window.localStorage.getItem('chat_id')\n        }).then((res) => {\n            if (res.data) {\n                this.setState({anti_options: res.data[0]})\n            }\n        })\n\n        this.getWordData();\n        this.getWhitelistURL();\n        this.getWhitelistUser();\n    }\n\n    submit_blacklist () {\n        const val = document.forms[1].blacklist.value;\n\n        if (val.length !== 0) {\n            const chat_id = window.localStorage.getItem('chat_id')\n\n            if (chat_id.length !== 0) {\n                Axios.post('pushWordData', {word: val, chat_id: chat_id})\n                .then((res) => {\n                    if (res.data) {\n                        this.getWordData();\n                        document.forms[1].blacklist.value = '';\n                        Event('Antispam', 'set item', 'blacklist')\n                    }\n                })\n            } else {\n                alert('There is any valid key of chatting information')\n                return false\n            }\n        \n        }\n    }\n\n    submit_whitelisturl() {\n        let val = document.forms[1].whitelisturl.value;\n\n        if (val.length !== 0) {\n            const chat_id = window.localStorage.getItem('chat_id')\n            const isPattern = this.checkIfPattern(val);\n\n            if (isPattern === false) {\n                alert('It isn\\'t a valid URL.');\n                return false;\n            }\n\n            if (chat_id.length !== 0) {\n                Axios.post('/pushWhitelist', {pattern: val, chat_id: chat_id})\n                .then((res) => {\n                    if (res.data) {\n                        this.getWhitelistURL();\n                        document.forms[1].whitelisturl.value = ''\n                        Event('Antispam', 'set item', 'whitelist')\n                    }\n                })\n            } else {\n                alert('There is any valid key of chatting information')\n                return false\n            }\n        \n        }\n    }\n\n    submit_whitelistUser() {\n        let val = document.forms[1].whitelistuser.value;\n\n        if (val.length !== 0) {\n            const chat_id = window.localStorage.getItem('chat_id')\n\n            if (chat_id.length !== 0) {\n                Axios.post('/setUserWhitelist', {chat_id: chat_id, username: val})\n                .then((res) => {\n                    if (res.data) {\n                        this.getWhitelistUser();\n                        document.forms[1].whitelistuser.value = ''\n                        Event('Antispam', 'set item', 'whitelist user')\n                    }\n                })\n            } else {\n                alert('There is any valid key of chatting information')\n                return false\n            }\n        \n        }\n    }\n\n    /**\n     * \n     * @param {string} val\n     * @returns {boolean} True = pattern, False = common\n     * \n     */\n    checkIfPattern (val) {\n        if (typeof val === 'string') {\n            const regx_test = /^\\/[\\s\\S]*\\/$/\n            const regx = /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,}|[a-zA-Z0-9]+\\.[^\\s]{2,})/\n            if (!regx_test.test(val) && regx.test(val)) {\n                return 'common';\n            } else if (regx_test.test(val) && regx.test(val)) {\n                return 'pattern';\n            } else {\n                return false;\n            }\n        }    \n    }\n\n    getWordData() {\n        Axios.post('getWordData', {chat_id: window.localStorage.getItem('chat_id')})\n        .then((res) => {\n            if (res.data) {\n                this.setState({blacklist: res.data.map((blacklist, index) => {\n                    return (\n                        <div className=\"blacklist_item\" key={index}>\n                            <p>\n                                {blacklist.word_name.length > 5 ? blacklist.word_name.substr(0,3) + '...' : blacklist.word_name}\n                            </p>\n                            <span className=\"del_icon\" onClick={() => this.deleteBlacklist(blacklist.id)}>&times;</span>\n                        </div>\n                    )\n                })})\n            } else {\n                this.setState({blacklist: []})\n            }\n        })\n    }\n\n    getWhitelistURL() {\n        Axios.post('/getWhitelist', {\n            chat_id: window.localStorage.getItem('chat_id')\n        }).then(res => {\n            if (res.data) {\n                this.setState({whitelistURL: res.data.map((whitelisturl, index) => {\n                    return (\n                        <div className=\"whitelisturl_item\" key={index}>\n                            <p>\n                                {whitelisturl.url_pattern.length > 11 ? whitelisturl.url_pattern.substr(0, 8) + '...' : whitelisturl.url_pattern}\n                            </p>\n                            <span className=\"del_icon\" onClick={() => this.deleteWhitelistURL(whitelisturl.id)}>&times;</span>\n                        </div>\n                    )\n                })})\n            } else {\n                this.setState({whitelistURL: []})\n            }\n        })\n    }\n\n    getWhitelistUser() {\n        Axios.post('/getUserWhitelist', {\n            chat_id: window.localStorage.getItem('chat_id')\n        }).then(res => {\n            if (res.data) {\n                this.setState({whitelistUser: res.data.map((whiltelist, index) => {\n                    return (\n                        <div className=\"whitelistuser_item\" key={index}>\n                            <p>\n                                {whiltelist.username.length > 11 ? whiltelist.username_pattern.substr(0, 8) + '...' : whiltelist.username}\n                            </p>\n                            <span className=\"del_icon\" onClick={() => this.deleteWhitelistUser(whiltelist.id)}>&times;</span>\n                        </div>\n                    )\n                })})\n            }\n        })\n    }\n\n    deleteBlacklist(id) {\n        Axios.post('/delWordData', {\n            chat_id: window.localStorage.getItem('chat_id'),\n            id: id\n        }).then(res => {\n            if (res.data) {\n                this.getWordData();\n                Event('Antispam', 'Delete item', 'blacklist')\n            }\n        })\n    }\n\n    deleteWhitelistURL(id) {\n        Axios.post('/delWhitelist', {\n            chat_id: window.localStorage.getItem('chat_id'),\n            id: id\n        }).then(res => {\n            if (res.data) {\n                this.getWhitelistURL();\n                Event('Antispam', 'Delete item', 'whitelist')\n            }\n        })\n    }\n\n    deleteWhitelistUser(id) {\n        Axios.post('/delWhiteUser', {\n            chat_id: window.localStorage.getItem('chat_id'),\n            id: id\n        }).then(res => {\n            if (res.data) {\n                this.getWhitelistUser();\n                Event('Antispam', 'Delete item', 'whitelist user')\n            }\n        })\n    }\n\n    toggle_slach_commands(status) {\n        this.setState({disabledSlashCommand: !status});\n\n        Axios.post('/updateStateSlashs', {\n            chat_id: window.localStorage.getItem('chat_id'),\n            status: !status\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"antispam_section\">\n                <h2 className=\"section_title\">\n                Anti-Spam\n                </h2>\n                <form className=\"anti_options\">\n                    <h5>Filters</h5>\n                    <p>By using filters, the bot will automatically delete unwanted messages like photos, images, and documents.</p>\n                    <div className=\"filters\">\n                        <FieldRow name=\"anti_image\" isActive={this.state.anti_options.anti_image} initOptions={this.initOptions.bind(this)}></FieldRow>\n                        <FieldRow name=\"anti_url\" isActive={this.state.anti_options.anti_url} initOptions={this.initOptions.bind(this)}></FieldRow>\n                        <FieldRow name=\"anti_forward\" isActive={this.state.anti_options.anti_forward} initOptions={this.initOptions.bind(this)}></FieldRow>\n                        <FieldRow name=\"anti_voice\" isActive={this.state.anti_options.anti_voice} initOptions={this.initOptions.bind(this)}></FieldRow>\n                        <FieldRow name=\"anti_gif\" isActive={this.state.anti_options.anti_gif} initOptions={this.initOptions.bind(this)}></FieldRow>\n                        <FieldRow name=\"anti_sticker\" isActive={this.state.anti_options.anti_sticker} initOptions={this.initOptions.bind(this)}></FieldRow>\n                        <FieldRow name=\"anti_join_message\" isActive={this.state.anti_options.anti_join_message} initOptions={this.initOptions.bind(this)}></FieldRow>\n                        <FieldRow name=\"anti_left_message\" isActive={this.state.anti_options.anti_left_message} initOptions={this.initOptions.bind(this)}></FieldRow>\n                        {/* <FieldRow name=\"anti_longname\" isActive={this.state.anti_options.anti_longname} initOptions={this.initOptions.bind(this)}></FieldRow> */}\n                        {/* <FieldRow name=\"anti_flood\" isActive={this.state.anti_options.anti_flood} initOptions={this.initOptions.bind(this)}></FieldRow> */}\n                    </div>\n                </form>\n\n                <form className=\"restriction_messages\">\n                    <h5>Restrictions</h5>\n                    <p>You can restrict words, urls, and even in your chat group. These messages are automatically deleted.</p>\n                    <div className=\"restriction_module\">\n                        <h6>Blacklisted Words</h6>\n                        <p>These words will be automatically deleted by the bot and is case insensitive.</p>\n                        <div className=\"restriction_content\">\n                            <div className=\"blacklist_words\">\n                                {this.state.blacklist}\n                            </div>\n                            <input type=\"text\" name=\"blacklist\"></input>\n                            <a className=\"add_btn\" onClick={() => this.submit_blacklist()}>Add</a>\n                        </div>\n                    </div>\n                    <div className=\"restriction_module\">\n                        <h6>Whitelisted URL</h6>\n                        <p>These are the ONLY URLs that are allowed in your group. Other links will be automatically deleted.</p>\n                        <div className=\"restriction_content\">\n                            <div className=\"blacklist_words\">\n                                {this.state.whitelistURL}\n                            </div>\n                            <input type=\"text\" name=\"whitelisturl\"></input>\n                            <a className=\"add_btn\" onClick={() => this.submit_whitelisturl()}>Add</a>\n                        </div>\n                    </div>\n                    <div className=\"restriction_module\">\n                        <h6>Whitelist bots and users</h6>\n                        <p>Restrictions will not apply to whitelisted bots and users. You can enter their username with or without the @.</p>\n                        <div className=\"restriction_content\">\n                            <div className=\"blacklist_words\">\n                                {this.state.whitelistUser}\n                            </div>\n                            <input type=\"text\" name=\"whitelistuser\"></input>\n                            <a className=\"add_btn\" onClick={() => this.submit_whitelistUser()}>Add</a>\n                        </div>\n                    </div>\n                    {/* <div className=\"restriction_module disable_slash_module\">\n                        <div className=\"restriction_title_wrap\">\n                            <h6>Disable Slash commands</h6>\n                            <p>Prevent users using slash commands in the chatroom. View slash commands here.</p>\n                        </div>\n                        \n                        <div className=\"restriction_content\">\n                            <div className=\"filter_switch\">\n                                <label htmlFor=\"disable_slash\">\n                                    <input type=\"checkbox\" className=\"anti_filter\" name=\"disable_slash\" id=\"disable_slash\" onChange={() => this.toggle_slach_commands(this.state.disabledSlashCommand)} defaultChecked={this.state.anti_options.anti_slash}></input>\n                                    <div className=\"custom_chbox\"></div>\n                                    <div className=\"custom_chbox_circle\"></div>\n                                </label>\n                            </div>\n                        </div>\n                    </div> */}\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AntiSpam;","\nvar timezone = [\n    {\n      \"value\": \"Dateline Standard Time\",\n      \"abbr\": \"DST\",\n      \"offset\": -12,\n      \"isdst\": false,\n      \"text\": \"(UTC-12:00) International Date Line West\",\n      \"utc\": [\n        \"Etc/GMT+12\"\n      ]\n    },\n    {\n      \"value\": \"UTC-11\",\n      \"abbr\": \"U\",\n      \"offset\": -11,\n      \"isdst\": false,\n      \"text\": \"(UTC-11:00) Coordinated Universal Time-11\",\n      \"utc\": [\n        \"Pacific/Midway\",\n        \"Pacific/Pago_Pago\"\n      ]\n    },\n    {\n      \"value\": \"Hawaiian Standard Time\",\n      \"abbr\": \"HST\",\n      \"offset\": -10,\n      \"isdst\": false,\n      \"text\": \"(UTC-10:00) Hawaii\",\n      \"utc\": [\n        \"Pacific/Honolulu\",\n      ]\n    },\n    {\n      \"value\": \"Alaskan Standard Time\",\n      \"abbr\": \"AKDT\",\n      \"offset\": -8,\n      \"isdst\": true,\n      \"text\": \"(UTC-09:00) Alaska\",\n      \"utc\": [\n        \"America/Juneau\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Daylight Time\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Los_Angeles\",\n        \"America/Tijuana\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time\",\n      \"abbr\": \"PST\",\n      \"offset\": -8,\n      \"isdst\": false,\n      \"text\": \"(UTC-08:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n      ]\n    },\n    {\n      \"value\": \"US Mountain Standard Time\",\n      \"abbr\": \"UMST\",\n      \"offset\": -7,\n      \"isdst\": false,\n      \"text\": \"(UTC-07:00) Arizona\",\n      \"utc\": [\n        \"America/Phoenix\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time (Mexico)\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n      \"utc\": [\n        \"America/Chihuahua\",\n        \"America/Mazatlan\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Mountain Time (US & Canada)\",\n      \"utc\": [\n        \"America/Denver\"\n      ]\n    },\n    {\n      \"value\": \"Central America Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Central America\",\n      \"utc\": [\n        \"America/Guatemala\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Central Time (US & Canada)\",\n      \"utc\": [\n        \"America/Chicago\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time (Mexico)\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n      \"utc\": [\n        \"America/Mexico_City\"\n      ]\n    },\n    {\n      \"value\": \"Canada Central Standard Time\",\n      \"abbr\": \"CCST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Saskatchewan\",\n      \"utc\": [\n        \"America/Regina\"\n      ]\n    },\n    {\n      \"value\": \"SA Pacific Standard Time\",\n      \"abbr\": \"SPST\",\n      \"offset\": -5,\n      \"isdst\": false,\n      \"text\": \"(UTC-05:00) Bogota, Lima, Quito\",\n      \"utc\": [\n        \"America/Bogota\"\n      ]\n    },\n    {\n      \"value\": \"Eastern Standard Time\",\n      \"abbr\": \"EDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Eastern Time (US & Canada)\",\n      \"utc\": [\n        \"America/New_York\"\n      ]\n    },\n    {\n      \"value\": \"US Eastern Standard Time\",\n      \"abbr\": \"UEDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Indiana (East)\",\n      \"utc\": [\n        \"America/Indianapolis\"\n      ]\n    },\n    {\n      \"value\": \"Venezuela Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": -4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:30) Caracas\",\n      \"utc\": [\n        \"America/Caracas\"\n      ]\n    },\n    {\n      \"value\": \"Atlantic Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-04:00) Atlantic Time (Canada)\",\n      \"utc\": [\n        \"America/Halifax\"\n      ]\n    },\n    {\n      \"value\": \"SA Western Standard Time\",\n      \"abbr\": \"SWST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\n      \"utc\": [\n        \"America/Guyana\",\n        \"America/La_Paz\"\n      ]\n    },\n    {\n      \"value\": \"Pacific SA Standard Time\",\n      \"abbr\": \"PSST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Santiago\",\n      \"utc\": [\n        \"America/Santiago\"\n      ]\n    },\n    {\n      \"value\": \"Newfoundland Standard Time\",\n      \"abbr\": \"NDT\",\n      \"offset\": -2.5,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:30) Newfoundland\",\n      \"utc\": [\n        \"America/St_Johns\"\n      ]\n    },\n    {\n      \"value\": \"E. South America Standard Time\",\n      \"abbr\": \"ESAST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Brasilia\",\n      \"utc\": [\n        \"America/Sao_Paulo\"\n      ]\n    },\n    {\n      \"value\": \"Argentina Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Buenos Aires\",\n      \"utc\": [\n        \"America/Buenos_Aires\"\n      ]\n    },\n    {\n      \"value\": \"Greenland Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:00) Greenland\",\n      \"utc\": [\n        \"America/Godthab\"\n      ]\n    },\n    {\n      \"value\": \"Montevideo Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Montevideo\",\n      \"utc\": [\n        \"America/Montevideo\"\n      ]\n    },\n    {\n      \"value\": \"UTC-02\",\n      \"abbr\": \"U\",\n      \"offset\": -2,\n      \"isdst\": false,\n      \"text\": \"(UTC-02:00) Coordinated Universal Time-02\",\n      \"utc\": [\n        \"Atlantic/South_Georgia\"\n      ]\n    },\n    {\n      \"value\": \"Azores Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 0,\n      \"isdst\": true,\n      \"text\": \"(UTC-01:00) Azores\",\n      \"utc\": [\n        \"Atlantic/Azores\"\n      ]\n    },\n    {\n      \"value\": \"Cape Verde Standard Time\",\n      \"abbr\": \"CVST\",\n      \"offset\": -1,\n      \"isdst\": false,\n      \"text\": \"(UTC-01:00) Cape Verde Is.\",\n      \"utc\": [\n        \"Atlantic/Cape_Verde\"\n      ]\n    },\n    {\n      \"value\": \"Morocco Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Casablanca\",\n      \"utc\": [\n        \"Africa/Casablanca\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GMT\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"British Summer Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Dublin, Lisbon\",\n      \"utc\": [\n        \"Europe/Dublin\",\n        \"Europe/Lisbon\"\n      ]\n    },\n    {\n      \"value\": \"Greenwich Standard Time\",\n      \"abbr\": \"GST\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Monrovia, Reykjavik\",\n      \"utc\": [\n        \"Africa/Monrovia\"\n      ]\n    },\n    {\n      \"value\": \"W. Europe Standard Time\",\n      \"abbr\": \"WEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n      \"utc\": [\n        \"Europe/Amsterdam\",\n        \"Europe/Berlin\",\n        \"Europe/Rome\",\n        \"Europe/Vienna\"\n      ]\n    },\n    {\n      \"value\": \"Central Europe Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n      \"utc\": [\n        \"Europe/Belgrade\",\n        \"Europe/Bratislava\",\n        \"Europe/Budapest\",\n        \"Europe/Ljubljana\"\n      ]\n    },\n    {\n      \"value\": \"Romance Standard Time\",\n      \"abbr\": \"RDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n      \"utc\": [\n        \"Europe/Brussels\",\n        \"Europe/Copenhagen\",\n        \"Europe/Madrid\",\n        \"Europe/Paris\"\n      ]\n    },\n    {\n      \"value\": \"Central European Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n      \"utc\": [\n        \"Europe/Sarajevo\",\n        \"Europe/Skopje\",\n        \"Europe/Warsaw\",\n        \"Europe/Zagreb\"\n      ]\n    },\n    {\n      \"value\": \"W. Central Africa Standard Time\",\n      \"abbr\": \"WCAST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) West Central Africa\",\n      \"utc\": [\n        \"Africa/Algiers\"\n      ]\n    },\n    {\n      \"value\": \"GTB Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Athens, Bucharest\",\n      \"utc\": [\n        \"Europe/Athens\",\n        \"Europe/Bucharest\"\n      ]\n    },\n    {\n      \"value\": \"Middle East Standard Time\",\n      \"abbr\": \"MEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Beirut\",\n      \"utc\": [\n        \"Asia/Beirut\"\n      ]\n    },\n    {\n      \"value\": \"Egypt Standard Time\",\n      \"abbr\": \"EST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Cairo\",\n      \"utc\": [\n        \"Africa/Cairo\"\n      ]\n    },\n    {\n      \"value\": \"E. Europe Standard Time\",\n      \"abbr\": \"EEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) E. Europe\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",        \n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Vilnius\",  \n      ]\n    },\n    {\n      \"value\": \"South Africa Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Harare, Pretoria\",\n      \"utc\": [\n        \"Africa/Harare\",\n        \"Africa/Johannesburg\"\n      ]\n    },\n    {\n      \"value\": \"FLE Standard Time\",\n      \"abbr\": \"FDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n      \"utc\": [\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Vilnius\"\n      ]\n    },\n    {\n      \"value\": \"Turkey Standard Time\",\n      \"abbr\": \"TDT\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Istanbul\",\n      \"utc\": [\n        \"Europe/Istanbul\"\n      ]\n    },\n    {\n      \"value\": \"Israel Standard Time\",\n      \"abbr\": \"JDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Jerusalem\",\n      \"utc\": [\n        \"Asia/Jerusalem\"\n      ]\n    },\n    {\n      \"value\": \"Arabic Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Baghdad\",\n      \"utc\": [\n        \"Asia/Baghdad\"\n      ]\n    },\n    {\n      \"value\": \"Kaliningrad Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Kaliningrad\",\n      \"utc\": [\n        \"Europe/Kaliningrad\"\n      ]\n    },\n    {\n      \"value\": \"Arab Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Kuwait, Riyadh\",\n      \"utc\": [\n        \"Asia/Kuwait\",\n        \"Asia/Riyadh\"\n      ]\n    },\n    {\n      \"value\": \"E. Africa Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Nairobi\",\n      \"utc\": [\n        \"Africa/Nairobi\"\n      ]\n    },\n    {\n      \"value\": \"Moscow Standard Time\",\n      \"abbr\": \"MSK\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Moscow, St. Petersburg, Volgograd, Minsk\",\n      \"utc\": [\n        \"Europe/Moscow\",\n        \"Europe/Volgograd\",\n        \"Europe/Minsk\"\n      ]\n    },\n    {\n      \"value\": \"Samara Time\",\n      \"abbr\": \"SAMT\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Samara, Ulyanovsk, Saratov\",\n      \"utc\": [\n        \"Europe/Samara\",\n      ]\n    },\n    {\n      \"value\": \"Iran Standard Time\",\n      \"abbr\": \"IDT\",\n      \"offset\": 4.5,\n      \"isdst\": true,\n      \"text\": \"(UTC+03:30) Tehran\",\n      \"utc\": [\n        \"Asia/Tehran\"\n      ]\n    },\n    {\n      \"value\": \"Arabian Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Abu Dhabi, Muscat\",\n      \"utc\": [\n        \"Asia/Muscat\"\n      ]\n    },\n    {\n      \"value\": \"Azerbaijan Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 5,\n      \"isdst\": true,\n      \"text\": \"(UTC+04:00) Baku\",\n      \"utc\": [\n        \"Asia/Baku\"\n      ]\n    },\n    {\n      \"value\": \"Georgian Standard Time\",\n      \"abbr\": \"GET\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Tbilisi\",\n      \"utc\": [\n        \"Asia/Tbilisi\"\n      ]\n    },\n    {\n      \"value\": \"Caucasus Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Yerevan\",\n      \"utc\": [\n        \"Asia/Yerevan\"\n      ]\n    },\n    {\n      \"value\": \"Afghanistan Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:30) Kabul\",\n      \"utc\": [\n        \"Asia/Kabul\"\n      ]\n    },\n    {\n      \"value\": \"West Asia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Ashgabat, Tashkent\",\n      \"utc\": [\n        \"Asia/Tashkent\"\n      ]\n    },\n    {\n      \"value\": \"Yekaterinburg Time\",\n      \"abbr\": \"YEKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Yekaterinburg\",\n      \"utc\": [\n        \"Asia/Yekaterinburg\"\n      ]\n    },\n    {\n      \"value\": \"Pakistan Standard Time\",\n      \"abbr\": \"PKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Islamabad, Karachi\",\n      \"utc\": [\n        \"Asia/Karachi\"\n      ]\n    },\n    {\n      \"value\": \"India Standard Time\",\n      \"abbr\": \"IST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n      \"utc\": [\n        \"Asia/Kolkata\"\n      ]\n    },\n    {\n      \"value\": \"Sri Lanka Standard Time\",\n      \"abbr\": \"SLST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Sri Jayawardenepura\",\n      \"utc\": [\n        \"Asia/Colombo\"\n      ]\n    },\n    {\n      \"value\": \"Nepal Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 5.75,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:45) Kathmandu\",\n      \"utc\": [\n        \"Asia/Kathmandu\"\n      ]\n    },\n    {\n      \"value\": \"Central Asia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Nur-Sultan (Astana)\",\n      \"utc\": [\n        \"Antarctica/Vostok\",\n        \"Asia/Almaty\",\n        \"Asia/Urumqi\"\n      ]\n    },\n    {\n      \"value\": \"Bangladesh Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Dhaka\",\n      \"utc\": [\n        \"Asia/Dhaka\"\n      ]\n    },\n    {\n      \"value\": \"Myanmar Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 6.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:30) Yangon (Rangoon)\",\n      \"utc\": [\n        \"Asia/Rangoon\"\n      ]\n    },\n    {\n      \"value\": \"SE Asia Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n      \"utc\": [\n        \"Asia/Bangkok\",\n        \"Asia/Jakarta\"\n      ]\n    },\n    {\n      \"value\": \"N. Central Asia Standard Time\",\n      \"abbr\": \"NCAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Novosibirsk\",\n      \"utc\": [\n        \"Asia/Novosibirsk\"\n      ]\n    },\n    {\n      \"value\": \"China Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n      \"utc\": [\n        \"Asia/Hong_Kong\",\n        \"Asia/Shanghai\"\n      ]\n    },\n    {\n      \"value\": \"North Asia Standard Time\",\n      \"abbr\": \"NAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Krasnoyarsk\",\n      \"utc\": [\n        \"Asia/Krasnoyarsk\"\n      ]\n    },\n    {\n      \"value\": \"Singapore Standard Time\",\n      \"abbr\": \"MPST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Kuala Lumpur, Singapore\",\n      \"utc\": [\n        \"Asia/Kuala_Lumpur\",\n        \"Asia/Singapore\"\n      ]\n    },\n    {\n      \"value\": \"W. Australia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Perth\",\n      \"utc\": [\n        \"Australia/Perth\"\n      ]\n    },\n    {\n      \"value\": \"Taipei Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Taipei\",\n      \"utc\": [\n        \"Asia/Taipei\"\n      ]\n    },\n    {\n      \"value\": \"Ulaanbaatar Standard Time\",\n      \"abbr\": \"UST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Ulaanbaatar\",\n      \"utc\": [\n        \"Asia/Ulaanbaatar\"\n      ]\n    },\n    {\n      \"value\": \"North Asia East Standard Time\",\n      \"abbr\": \"NAEST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Irkutsk\",\n      \"utc\": [\n        \"Asia/Irkutsk\"\n      ]\n    },\n    {\n      \"value\": \"Japan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n      \"utc\": [\n        \"Asia/Tokyo\"\n      ]\n    },\n    {\n      \"value\": \"Korea Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Seoul\",\n      \"utc\": [\n        \"Asia/Seoul\"\n      ]\n    },\n    {\n      \"value\": \"Cen. Australia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Adelaide\",\n      \"utc\": [\n        \"Australia/Adelaide\"\n      ]\n    },\n    {\n      \"value\": \"AUS Central Standard Time\",\n      \"abbr\": \"ACST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Darwin\",\n      \"utc\": [\n        \"Australia/Darwin\"\n      ]\n    },\n    {\n      \"value\": \"E. Australia Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Brisbane\",\n      \"utc\": [\n        \"Australia/Brisbane\"\n      ]\n    },\n    {\n      \"value\": \"AUS Eastern Standard Time\",\n      \"abbr\": \"AEST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n      \"utc\": [\n        \"Australia/Melbourne\",\n        \"Australia/Sydney\"\n      ]\n    },\n    {\n      \"value\": \"West Pacific Standard Time\",\n      \"abbr\": \"WPST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Guam, Port Moresby\",\n      \"utc\": [\n        \"Pacific/Guam\"\n      ]\n    },\n    {\n      \"value\": \"Tasmania Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Hobart\",\n      \"utc\": [\n        \"Australia/Hobart\"\n      ]\n    },\n    {\n      \"value\": \"Yakutsk Standard Time\",\n      \"abbr\": \"YST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Yakutsk\",\n      \"utc\": [\n        \"Asia/Yakutsk\"\n      ]\n    },\n    {\n      \"value\": \"Central Pacific Standard Time\",\n      \"abbr\": \"CPST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Solomon Is., New Caledonia\",\n      \"utc\": [\n        \"Pacific/Guadalcanal\",\n        \"Pacific/Noumea\"\n      ]\n    },\n    {\n      \"value\": \"Vladivostok Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Vladivostok\",\n      \"utc\": [\n        \"Asia/Vladivostok\"\n      ]\n    },\n    {\n      \"value\": \"New Zealand Standard Time\",\n      \"abbr\": \"NZST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Auckland, Wellington\",\n      \"utc\": [\n        \"Pacific/Auckland\"\n      ]\n    },\n    {\n      \"value\": \"UTC+12\",\n      \"abbr\": \"U\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Coordinated Universal Time+12\",\n      \"utc\": [\n        \"Pacific/Majuro\"\n      ]\n    },\n    {\n      \"value\": \"Fiji Standard Time\",\n      \"abbr\": \"FST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Fiji\",\n      \"utc\": [\n        \"Pacific/Fiji\"\n      ]\n    },\n    {\n      \"value\": \"Magadan Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Magadan\",\n      \"utc\": [\n        \"Asia/Kamchatka\",\n        \"Asia/Magadan\",\n        \"Asia/Srednekolymsk\"\n      ]\n    },\n    {\n      \"value\": \"Kamchatka Standard Time\",\n      \"abbr\": \"KDT\",\n      \"offset\": 13,\n      \"isdst\": true,\n      \"text\": \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\",\n      \"utc\": [\n        \"Asia/Kamchatka\"\n      ]\n    },\n    {\n      \"value\": \"Tonga Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Nuku'alofa\",\n      \"utc\": [\n        \"Pacific/Fakaofo\",\n        \"Pacific/Tongatapu\"\n      ]\n    },\n    {\n      \"value\": \"Samoa Standard Time\",\n      \"abbr\": \"SST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Samoa\",\n      \"utc\": [\n        \"Pacific/Apia\"\n      ]\n    }\n  ]\n\n  export default timezone;","import React from 'react';\nimport Axios from 'axios';\nimport timezone from '../../timezone';\nimport '../../style/css/Settings.min.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tz_cur: timezone[0],\n            isOpenModal: false,\n            tz_lists: [],\n            cur_pos: 0,\n            isSuccess: false\n        }\n    }\n\n    handle_tz(index) {\n        this.setState({tz_cur: timezone[index], isOpenModal: false, cur_pos: index})\n    }\n\n    toggleTZPicker() {\n        this.setState({isOpenModal: !this.state.isOpenModal})\n        document.querySelector(\".dim\").style.display = \"block\";\n        document\n          .querySelector(\".dim\")\n          .addEventListener(\"click\", () => background_listner.call(this))\n    \n        function background_listner() {\n            this.setState({isOpenModal: false})\n          document.querySelector(\".dim\").style.display = \"none\";\n          document\n            .querySelector(\".dim\")\n            .removeEventListener(\"click\", () => background_listner.call(this));\n        }\n    }\n\n    releaseSuccessMsg() {\n        this.setState({isSuccess: false})\n    }\n\n    componentDidMount() {\n        this.setState({\n            tz_lists: timezone.map((tz, index) => {\n                return (\n                    <p className=\"tz_item\" data-tzid={index} onClick={() => this.handle_tz(index)}>\n                        {tz.text}\n                    </p>\n                )\n            })\n        })   \n        Axios.post('/getTimezone', {\n            chat_id: window.localStorage.getItem('chat_id')\n        }).then(res => {\n            if (res.data) {\n                this.setState({tz_cur: timezone[res.data[0].tz_pos]});\n            }\n        }) \n    }\n\n    setTimezone() {\n        Axios.post('/setTimezone', {\n            chat_id: window.localStorage.getItem('chat_id'),\n            offset: this.state.tz_cur.offset,\n            timezone: JSON.stringify(this.state.tz_cur.utc),\n            position: this.state.cur_pos\n        }).then(res => {\n            if (res.data) {\n                window.localStorage.setItem('tz_set', res.data);\n                this.setState({isSuccess: true})\n\n                setTimeout(() => {\n                    this.setState({isSuccess: false})\n                }, 2000);\n            }\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"setting_section\">\n                <div className={this.state.isSuccess ? 'msg_success is_success' : 'msg_success'}>\n                    <p>\n                    Settings have been saved\n                    </p>\n                </div>\n                <h2 className=\"seg_title\">\n                    Settings\n                </h2>\n                <div className=\"tz_setting\">\n                    <h4>\n                    Time Zone\n                    </h4>\n                    <div className=\"tz_selection\">\n                        <span>\n                        Select Timezone:\n                        </span>\n                        <div className=\"tz_picker\">\n                            <a onClick={() => this.toggleTZPicker()}>\n                                {this.state.tz_cur.text}\n                            </a>\n                            <div className={this.state.isOpenModal ? 'tz_lists open' : 'tz_lists'}>\n                                {this.state.tz_lists}\n                            </div>\n                        </div>\n                        <a className=\"tz_set_btn\" onClick={() => this.setTimezone()}>\n                            Set\n                        </a>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Settings;","import React, {useState} from 'react';\nimport Axios from 'axios';\nimport \"react-daypicker/lib/DayPicker.css\";\nimport '../../style/css/PeoridPicker.min.css';\nimport DayPicker from \"react-daypicker\";\n\nfunction PeoridPicker(props) {\n    const [date_from, set_datefrom] = useState();\n    const [isOpened_from, open_date_from] = useState(false)\n    const [date_to, set_dateto] = useState();\n    const [isOpened_to, open_date_to] = useState(false)\n\n    function getFormattedDate_from() {\n        if (date_from) {\n            const yy = date_from.getFullYear();\n            const mm = date_from.getMonth() + 1;\n            const dd = date_from.getDate();\n    \n            return `${yy}-${mm}-${dd}`;\n        } else {\n            const today = new Date(Date.now() - (30 * 24 * 60 * 60 * 1000));\n            const yy = today.getFullYear();\n            const mm = today.getMonth() + 1;\n            const dd = today.getDate();\n    \n            return `${yy}-${mm}-${dd}`;\n        }\n    }\n\n    function getFormattedDate_to() {\n        if (date_to) {\n            const yy = date_to.getFullYear();\n            const mm = date_to.getMonth() + 1;\n            const dd = date_to.getDate();\n    \n            return `${yy}-${mm}-${dd}`;\n        } else {\n            const today = new Date(Date.now());\n            const yy = today.getFullYear();\n            const mm = today.getMonth() + 1;\n            const dd = today.getDate();\n    \n            return `${yy}-${mm}-${dd}`;\n        }\n    }\n\n    function open_date_from_modal() {\n        open_date_from(!isOpened_from);\n        if(isOpened_to) {open_date_to(false)};\n\n        document.querySelector(\".dim\").style.display = \"block\";\n        document\n        .querySelector(\".dim\")\n        .addEventListener(\"click\", background_listner.bind(this));\n    \n        function background_listner() {\n            open_date_from(false);\n            document.querySelector(\".dim\").style.display = \"none\";\n            document\n                .querySelector(\".dim\")\n                .removeEventListener(\"click\", background_listner.bind(this));\n            }\n    }\n\n    function open_date_to_modal() {\n        open_date_to(!isOpened_to);\n        if(isOpened_from) {open_date_from(false)};\n\n        document.querySelector(\".dim\").style.display = \"block\";\n        document\n        .querySelector(\".dim\")\n        .addEventListener(\"click\", background_listner.bind(this));\n    \n        function background_listner() {\n            open_date_to(false);\n            document.querySelector(\".dim\").style.display = \"none\";\n            document\n                .querySelector(\".dim\")\n                .removeEventListener(\"click\", background_listner.bind(this));\n            }\n    }\n\n    return (\n        <div className=\"changable_peorid_wrap\">\n            <span className=\"date_from\" onClick={() => open_date_from_modal()}>\n                {getFormattedDate_from()}\n            </span>\n            <div className={isOpened_from ? 'picker_datefrom open' : 'picker_datefrom'}>\n                <DayPicker onDayClick={(day) => {set_datefrom(day); open_date_from(false);}}></DayPicker>\n            </div>\n            <span>\n                to\n            </span>\n            <span className=\"date_to\" onClick={() => open_date_to_modal()}>\n                {getFormattedDate_to()}\n            </span>\n            <div className={isOpened_to ? 'picker_dateto open' : 'picker_dateto'}>\n                <DayPicker onDayClick={(day) => {set_dateto(day); open_date_to(false)}}></DayPicker>\n            </div>\n            <a className=\"confirm_peorid\" onClick={() => props.confirm_peorid(getFormattedDate_from(), getFormattedDate_to())}>\n                GO\n            </a>\n        </div>\n    )\n}\n\nexport default PeoridPicker;","import React from 'react';\nimport Axios from 'axios';\nimport {Event} from '../Tracking';\n\nimport PeoridPicker from '../Modules/PeoridPicker';\nimport Chart from 'chart.js';\n\nclass AnalysticMemberActivity extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            analystic_data: []\n        }\n    }\n\n    makeInactiveUserChart(data) {\n        const today = new Date(Date.now());\n        let label_arr = [];\n        let dataset = [];\n            \n        for (var i=12; i >= 0; i--) {\n            const target_date = today - (86400000 * i);\n            const d = new Date(target_date);\n            const result = d.toString(\"MMMM dd\").slice(4, 10)\n            let is_matched = false\n\n            label_arr.push(result);\n            if (data) {\n                for (var date_cnt of data) {\n                    if (result == date_cnt['ym']) {\n                        dataset.push(date_cnt['cnt']);\n                        is_matched = true;\n                    } \n                }\n            }\n\n            if (!is_matched) {\n                dataset.push(0)\n            }\n        }\n\n        const message_crt = document.getElementById('chart_inactive_user');\n        const chart = new Chart(message_crt, {\n            type: 'bar',\n            data: {\n                labels: label_arr,\n                datasets: [\n                    {\n                        data: dataset,\n                        borderColor: '#3CB650',\n                        borderWidth: 2,\n                        barThickness: 23,\n                        label: 'New Members'\n                    }\n                ]\n            },\n            options: {\n                legend: {\n                    position: 'bottom',\n\n                },\n                responsive: false,\n                scales: {\n                    yAxes: [{\n                        ticks: {\n                            stepSize: 5,\n                            beginAtZero: true,\n                            fontSize: 10,\n                            fontFamily: 'muli-ragular'\n                        }\n                    }],\n                    xAxes: [{\n                        gridLines: {\n                            display: false\n                        }\n                    }]\n                }\n            }\n        });\n\n        chart.update();\n        chart.resize();\n    }\n\n    makeTotalMsgChart(data, date_len) {\n        let date_to_format = document.querySelector('.date_to').innerText;\n        var temp = date_to_format.split('-');\n        if (temp[1].length != 2) {\n            date_to_format.replace('-'+temp[1]+'-', '-0'+temp[1]+'-')\n        }\n        const today = new Date(date_to_format);\n        let label_arr = [];\n        let dataset = [],\n            dataset_text = [],\n            dataset_question = [],\n            dataset_media = [],\n            dataset_forward = [];\n\n        for (var i=date_len; i >= 0; i--) {\n            const target_date = today - (86400000 * i);\n            const d = new Date(target_date);\n            const result = d.toString(\"MMMM dd\").slice(4, 10)\n            let is_matched = false,\n                is_matched_text = false,\n                is_matched_question = false,\n                is_matched_media = false,\n                is_matched_forward = false;\n\n            label_arr.push(result);\n            if (data && data.length !== 0) {\n                for (var date_cnt of data.total) {\n                    if (result == date_cnt['ym']) {\n                        dataset.push(date_cnt['cnt']);\n                        is_matched = true;\n                    } \n                }\n                for (var date_cnt of data.text) {\n                    if (result == date_cnt['ym']) {\n                        dataset_text.push(date_cnt['cnt']);\n                        is_matched_text = true;\n                    } \n                }\n                for (var date_cnt of data.question) {\n                    if (result == date_cnt['ym']) {\n                        dataset_question.push(date_cnt['cnt']);\n                        is_matched_question = true;\n                    } \n                }\n                for (var date_cnt of data.media) {\n                    if (result == date_cnt['ym']) {\n                        dataset_media.push(date_cnt['cnt']);\n                        is_matched_media = true;\n                    } \n                }\n                for (var date_cnt of data.forward) {\n                    if (result == date_cnt['ym']) {\n                        dataset_forward.push(date_cnt['cnt']);\n                        is_matched_forward = true;\n                    } \n                }\n            }\n\n            if (!is_matched) {\n                dataset.push(0)\n            }\n            if (!is_matched_text) {\n                dataset_text.push(0)\n            }\n            if (!is_matched_question) {\n                dataset_question.push(0)\n            }\n            if (!is_matched_media) {\n                dataset_media.push(0)\n            }\n            if (!is_matched_forward) {\n                dataset_forward.push(0)\n            }\n        }\n\n        const message_crt = document.getElementById('chart_total_messege');\n        const chart = new Chart(message_crt, {\n            type: 'line',\n            data: {\n                labels: label_arr,\n                datasets: [\n                    {\n                        data: dataset,\n                        borderColor: '#F4D30F',\n                        borderWidth: 2,\n                        pointBackgroundColor: '#F4D30F',\n                        lineTension: 0,\n                        fill: false,\n                        label: 'total',\n                        pointBorderWidth: 0.5\n                    },\n                    {\n                        data: dataset_text,\n                        borderColor: '#2C55F9',\n                        borderWidth: 2,\n                        pointBackgroundColor: '#2C55F9',\n                        lineTension: 0,\n                        fill: false,\n                        label: 'text',\n                        pointBorderWidth: 0.5\n                    },\n                    {\n                        data: dataset_question,\n                        borderColor: '#3CB450',\n                        borderWidth: 2,\n                        pointBackgroundColor: '#3CB450',\n                        lineTension: 0,\n                        fill: false,\n                        label: 'question',\n                        pointBorderWidth: 0.5\n                    },\n                    {\n                        data: dataset_media,\n                        borderColor: '#189BEE',\n                        borderWidth: 2,\n                        pointBackgroundColor: '#189BEE',\n                        lineTension: 0,\n                        fill: false,\n                        label: 'media',\n                        pointBorderWidth: 0.5\n                    },\n                    {\n                        data: dataset_forward,\n                        borderColor: '#644AC4',\n                        borderWidth: 2,\n                        pointBackgroundColor: '#644AC4',\n                        lineTension: 0,\n                        fill: false,\n                        label: 'forward',\n                        pointBorderWidth: 0.5\n                    }\n                ]\n            },\n            options: {\n                legend: {\n                    position: 'bottom',\n\n                },\n                responsive: false,\n                scales: {\n                    yAxes: [{\n                        ticks: {\n                            suggestedMin: 20,\n                            suggestedMax: 100,\n                            beginAtZero: true,\n                            fontSize: 10,\n                            fontFamily: 'muli-ragular'\n                        }\n                    }],\n                    xAxes: [{\n                        ticks: {\n                            fontSize: 10,\n                            fontFamily: 'muli-ragular'\n                        },\n                        gridLines: {\n                            display: false\n                        }\n                    }]\n                }\n            }\n        });\n        chart.update();\n        chart.resize();\n    }\n\n    getDateAMonthAgo() {\n        const a_month_ago = new Date(Date.now());\n        a_month_ago.setDate(a_month_ago.getDate() - 30);\n\n        return `${a_month_ago.getFullYear()}-${a_month_ago.getMonth() + 1}-${a_month_ago.getDay()}`;\n    }\n\n    confirmPeorid(from, to) {\n        Axios.post('/getAnalysticData', {\n            chat_id: window.localStorage.getItem('chat_id'),\n            date_from: from,\n            date_to: to\n        }).then(res => {\n            if (res.data) {\n                const date_past = new Date(from),\n                    date_present = new Date(to);\n                \n                const diff = date_present - date_past;\n                const diff_result = diff / (1000*60*60*24);\n\n                let total_cnt = 0;\n                if (res.data.length !== 0) {\n                    for (var data_total of res.data.total) {\n                        total_cnt += data_total.cnt;\n                    }    \n                } \n                \n                this.setState({analystic_data: total_cnt})\n                this.makeTotalMsgChart(res.data, diff_result)\n                Event('Analystic', 'Change duration', 'Change duration of member activities');\n            }\n        })\n    }\n\n    componentDidMount() {\n        Axios.post('/getAnalysticData', {\n            chat_id: window.localStorage.getItem('chat_id'),\n            date_from: this.getDateAMonthAgo(),\n            date_to: 'today'\n        })\n            .then((res) => {\n                if (res.data) {\n                    let total_cnt = 0;\n                    if (res.data.length !== 0) {\n                        for (var data_total of res.data.total) {\n                            total_cnt += data_total.cnt;\n                        }\n                    } \n\n                    this.setState({analystic_data: total_cnt})\n                    this.makeTotalMsgChart(res.data, 30)\n                }\n            })\n\n        Axios.post('/getInactiveUsers', {\n            chat_id: window.localStorage.getItem('chat_id')\n        })\n            .then((res) => {\n                if (res.data) {\n                    this.makeInactiveUserChart(res.data);\n                }\n            })\n        \n        Event('Analystic', 'load module', 'Member Activities');\n    }\n\n    render() {\n        return (\n            <div className=\"content_wrap\">\n                <PeoridPicker confirm_peorid={this.confirmPeorid.bind(this)}></PeoridPicker>\n                <div className=\"chart_total_message_wrap\">\n                    <h5>Total Messages</h5>\n                    <p>{this.state.analystic_data} messages</p>\n                    <div className=\"chart_canvas_wrap\">\n                        <canvas id=\"chart_total_messege\" width=\"1186\" height=\"200\"></canvas>\n                    </div>\n                </div>\n\n                <div className=\"chart_inactive_user_wrap\">\n                    <h5>Inactive Users</h5>\n                    <div className=\"chart_canvas_wrap\">\n                        <canvas id=\"chart_inactive_user\" width=\"1186\" height=\"200\"></canvas>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AnalysticMemberActivity;","import React from 'react';\nimport Axios from 'axios';\nimport PeoridPicker from '../Modules/PeoridPicker';\nimport Chart from 'chart.js';\nimport Rechart from 'rechart';\n\nimport { Event } from '../Tracking';\n\nclass AnalysticCommunity extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            total_member: 0\n        }\n    }\n\n    componentDidMount() {\n        Axios.post(`https://api.telegram.org/bot${this.props.botId}/getChatMembersCount`, {chat_id: window.localStorage.getItem('chat_id')})\n            .then(res => {\n                if (res.data.result) {\n                    this.setState({total_member: res.data.result});\n                }\n            })\n\n        Axios.post('/getAnalysticCommunityMember', {\n            chat_id: window.localStorage.getItem('chat_id')\n        })\n            .then(res => {\n                if (res.data) {\n                    this.makeChart(res.data, 30)\n                }\n            })\n        \n        Event('Analystic', 'load module', 'Community');\n    }\n\n    confirmPeorid(from, to) {\n        Axios.post('/getAnalysticCommunityMember', {\n            chat_id: window.localStorage.getItem('chat_id'),\n            date_from: from,\n            date_to: to\n        }).then(res => {\n            if (res.data) {\n                const date_past = new Date(from),\n                    date_present = new Date(to);\n                \n                const diff = date_present - date_past;\n                const diff_result = diff / (1000*60*60*24);\n\n                this.makeChart(res.data, diff_result);\n                Event('Analystic', 'Change duration', 'Change duration of community');\n            }\n        })\n    }\n\n    makeChart(data, peorid) {\n        const date_to_format = document.querySelector('.date_to').innerText;\n        const today = new Date(date_to_format);\n        let label_arr = [];\n        let dataset_new = [],\n            dataset_left = []\n            \n        for (var i=peorid; i >= 0; i--) {\n            const target_date = today - (86400000 * i);\n            const d = new Date(target_date);\n            const result = d.toString(\"MMMM dd\").slice(4, 10)\n            let is_matched_new = false,\n                is_matched_left = false\n\n            label_arr.push(result);\n            if (data && data.length !== 0) {\n                for (var date_cnt of data.new) {\n                    if (result == date_cnt['ym']) {\n                        dataset_new.push(date_cnt['cnt']);\n                        is_matched_new = true;\n                    } \n                }\n                for (var date_cnt of data.left) {\n                    if (result == date_cnt['ym']) {\n                        dataset_left.push(date_cnt['cnt']);\n                        is_matched_left = true;\n                    } \n                }\n            }\n\n            if (!is_matched_new) {\n                dataset_new.push(0)\n            }\n            if (!is_matched_left) {\n                dataset_left.push(0)\n            }\n        }\n\n        const message_crt = document.getElementById('chart_community_member');\n        const chart = new Chart(message_crt, {\n            type: 'line',\n            data: {\n                labels: label_arr,\n                datasets: [\n                    {\n                        data: dataset_new,\n                        borderColor: '#255CF9',\n                        borderWidth: 2,\n                        pointBackgroundColor: '#255CF9',\n                        lineTension: 0,\n                        fill: false,\n                        label: 'New Members',\n                        pointBorderWidth: 0.5\n                    },\n                    {\n                        data: dataset_left,\n                        borderColor: '#CC0A04',\n                        borderWidth: 2,\n                        pointBackgroundColor: '#CC0A04',\n                        lineTension: 0,\n                        fill: false,\n                        pointBorderWidth: 0.5,\n                        label: 'Left Members'\n                    }\n                ]\n            },\n            options: {\n                legend: {\n                    position: 'bottom',\n\n                },\n                responsive: false,\n                scales: {\n                    yAxes: [{\n                        ticks: {\n                            stepSize: 5,\n                            beginAtZero: true,\n                            fontSize: 10,\n                            fontFamily: 'muli-ragular'\n                        }\n                    }],\n                    xAxes: [{\n                        gridLines: {\n                            display: false\n                        }\n                    }]\n                }\n            }\n        })\n\n        chart.update();\n        chart.resize();\n    }\n\n    render() {\n        return (\n            <div className=\"content_wrap\">\n                <PeoridPicker confirm_peorid={this.confirmPeorid.bind(this)}></PeoridPicker>\n                <div className=\"chart_community_member_wrap\">\n                    <h5>\n                    Members\n                    </h5>\n                    <p>\n                        {this.state.total_member}\n                    </p>\n                    <div className=\"chart_canvas_wrap\">\n                        <canvas id=\"chart_community_member\" width=\"1186\" height=\"200\"></canvas>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AnalysticCommunity;","import React from 'react';\nimport Axios from 'axios';\nimport PeoridPicker from '../Modules/PeoridPicker';\nimport Chart from 'chart.js';\nimport { Event } from '../Tracking';\n\nclass AnalysticCommunity extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            total_member: 0\n        }\n    }\n\n    getDateAMonthAgo() {\n        const a_month_ago = new Date(Date.now());\n        a_month_ago.setDate(a_month_ago.getDate() - 30);\n\n        return `${a_month_ago.getFullYear()}-${a_month_ago.getMonth() + 1}-${a_month_ago.getDay()}`;\n    }\n\n    componentDidMount() {\n        Axios.post('/getAnalysticBotActivities', {\n            chat_id: window.localStorage.getItem('chat_id'),\n            date_from: this.getDateAMonthAgo(),\n            date_to: 'today'\n        })\n            .then(res => {\n                if (res.data) {\n                    this.makeChart(res.data, 30)\n                }\n            })\n\n        Event('Analystic', 'load module', 'Bot Activities');\n    }\n\n    confirmPeorid(from, to) {\n        Axios.post('/getAnalysticBotActivities', {\n            chat_id: window.localStorage.getItem('chat_id'),\n            date_from: from,\n            date_to: to\n        }).then(res => {\n            if (res.data) {\n                const date_past = new Date(from),\n                    date_present = new Date(to);\n                \n                const diff = date_present - date_past;\n                const diff_result = diff / (1000*60*60*24);\n\n                this.makeChart(res.data, diff_result);\n                Event('Analystic', 'Change duration', 'Change duration of bot activities');\n            }\n        })\n    }\n\n    makeChart(data, peorid) {\n        const date_to_format = document.querySelector('.date_to').innerText;\n        const today = new Date(date_to_format);\n        let label_arr = [];\n        let dataset_sent = [],\n            dataset_deleted = [],\n            dataset_kick = [],\n            dataset_restrict = []\n            \n        for (var i=peorid; i >= 0; i--) {\n            const target_date = today - (86400000 * i);\n            const d = new Date(target_date);\n            const result = d.toString(\"MMMM dd\").slice(4, 10)\n            let is_matched_sent = false,\n                is_matched_deleted = false,\n                is_matched_kick = false,\n                is_matched_restrict = false\n\n            label_arr.push(result);\n            if (data && data.length !== 0) {\n                for (var date_cnt of data.restrict) {\n                    if (result == date_cnt['ym']) {\n                        dataset_restrict.push(date_cnt['cnt']);\n                        is_matched_restrict = true;\n                    } \n                }\n                for (var date_cnt of data.sent) {\n                    if (result == date_cnt['ym']) {\n                        dataset_sent.push(date_cnt['cnt']);\n                        is_matched_sent = true;\n                    } \n                }\n                for (var date_cnt of data.deleted) {\n                    if (result == date_cnt['ym']) {\n                        dataset_deleted.push(date_cnt['cnt']);\n                        is_matched_deleted = true;\n                    } \n                }\n                for (var date_cnt of data.kick) {\n                    if (result == date_cnt['ym']) {\n                        dataset_kick.push(date_cnt['cnt']);\n                        is_matched_kick = true;\n                    } \n                }\n            }\n\n            if (!is_matched_sent) {\n                dataset_sent.push(0)\n            }\n            if (!is_matched_deleted) {\n                dataset_deleted.push(0)\n            }\n            if (!is_matched_kick) {\n                dataset_kick.push(0)\n            }\n            if (!is_matched_restrict) {\n                dataset_restrict.push(0)\n            }\n        }\n\n        const message_crt = document.getElementById('chart_bot_activities');\n        const chart = new Chart(message_crt, {\n            type: 'line',\n            data: {\n                labels: label_arr,\n                datasets: [\n                    {\n                        data: dataset_sent,\n                        borderColor: '#3CB450',\n                        borderWidth: 2,\n                        pointBackgroundColor: '#3CB450',\n                        lineTension: 0,\n                        fill: false,\n                        label: 'Sent Messages',\n                        pointBorderWidth: 0.5\n                    },\n                    {\n                        data: dataset_deleted,\n                        borderColor: '#1C62F9',\n                        borderWidth: 2,\n                        pointBackgroundColor: '#1C62F9',\n                        lineTension: 0,\n                        fill: false,\n                        pointBorderWidth: 0.5,\n                        label: 'Deleted Messages'\n                    },\n                    {\n                        data: dataset_kick,\n                        borderColor: '#634FC4',\n                        borderWidth: 2,\n                        pointBackgroundColor: '#634FC4',\n                        lineTension: 0,\n                        fill: false,\n                        pointBorderWidth: 0.5,\n                        label: 'Kicked Members'\n                    },\n                    {\n                        data: dataset_restrict,\n                        borderColor: '#F49D11',\n                        borderWidth: 2,\n                        pointBackgroundColor: '#F49D11',\n                        lineTension: 0,\n                        fill: false,\n                        pointBorderWidth: 0.5,\n                        label: 'Restricted members'\n                    }\n                ]\n            },\n            options: {\n                legend: {\n                    position: 'bottom',\n\n                },\n                responsive: false,\n                scales: {\n                    yAxes: [{\n                        ticks: {\n                            stepSize: 5,\n                            beginAtZero: true,\n                            fontSize: 10,\n                            fontFamily: 'muli-ragular'\n                        }\n                    }],\n                    xAxes: [{\n                        gridLines: {\n                            display: false\n                        }\n                    }]\n                }\n            }\n        })\n\n        chart.update();\n        chart.resize();\n    }\n\n    render() {\n        return (\n            <div className=\"content_wrap\">\n                <PeoridPicker confirm_peorid={this.confirmPeorid.bind(this)}></PeoridPicker>\n                <div className=\"chart_bot_activities_wrap\">\n                    <h5>\n                    Bot Usage Activity\n                    </h5>\n                    <p></p>\n                    <div className=\"chart_canvas_wrap\">\n                        <canvas id=\"chart_bot_activities\" width=\"1186\" height=\"200\"></canvas>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AnalysticCommunity;","import React from 'react';\n\nimport TabMenu from '../Modules/TabMenu';\nimport AnalysticMemberActivity from '../Modules/AnalysticMemberActivity';\nimport AnalysticCommunity from '../Modules/AnalysticCommunity';\nimport AnalysticBots from '../Modules/AnalysticBots';\nimport Title from '../Section_title';\n\nimport '../../style/css/Analytics.min.css';\n\nfunction Content_tab(props) {\n    if (props.num === 1) {\n        return <AnalysticMemberActivity></AnalysticMemberActivity>\n    } else if (props.num === 2) {\n        return <AnalysticCommunity botId={props.botId}></AnalysticCommunity>\n    } else if (props.num === 3) {\n        return <AnalysticBots></AnalysticBots>\n    }\n}\n\nclass Analystic extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            active_tab: 1\n        }\n    }\n\n    set_activeTab(num) {\n        return this.setState({ active_tab: num });\n    }\n\n    render() {\n        return (\n            <div className=\"analystic_section\">\n                <Title title=\"Analytics\"></Title>\n                <TabMenu opt1={'Member Activity Report'} opt2={'Community Report'} opt3={'Bot Usage Report'} active_tab={this.set_activeTab.bind(this)}></TabMenu>\n                <Content_tab num={this.state.active_tab} botId={this.props.botId}></Content_tab>\n            </div>\n        )\n    }\n}\n\nexport default Analystic;","import React, { useState } from \"react\";\nimport { Route, Switch, HashRouter as Router } from \"react-router-dom\";\nimport ReactGA from 'react-ga';\nimport {createBrowserHistory} from 'history';\nimport \"./App.css\";\n\nimport RegisterChat from \"./components/Pages/Register_chat\";\nimport Signin from './components/Pages/Signin';\nimport Features from './components/Pages/Features';\nimport LeftNav from \"./components/Modules/LeftNav\";\nimport RightDrawer_m from './components/Modules/RightDrawer_m';\nimport Header from './components/Modules/Header_main';\nimport LandingFooter from './components/Modules/LandingFooter';\nimport LandingHeader from './components/Modules/LandingHeader';\n\nimport Messages from './components/Pages/Messages';\nimport MessageLog from './components/Pages/MessageLog';\nimport Users from \"./components/Pages/UserManager\";\nimport User from './components/Pages/User';\nimport Intereactions from './components/Pages/Interactions';\nimport AntiSpam from './components/Pages/AntiSpam';\nimport Settings from './components/Pages/Settings';\nimport Analystic from './components/Pages/Analystic';\n\nimport Axios from \"axios\";\n// Axios.defaults.baseURL = \"https://chatbot-258301.appspot.com/api/\";\n// Axios.defaults.baseURL = \"http://localhost:4000/api/\";\nAxios.defaults.baseURL = \"https://hysoop.com/api/\"\n\nReactGA.initialize(\"UA-125314475-4\", {\n  debug: true\n});\n\nconst history = createBrowserHistory();\n\nhistory.listen(location => {\n  ReactGA.set({ page: location.hash }); // Update the user's current page\n  ReactGA.pageview(location.hash); // Record a pageview for the given page\n});\n\nfunction App() {\n  const [isValid, setIsValid] = useState(false);\n  const [statusNav, setStatusNav] = useState(\"word\");\n  const [chatInfo, setChatInfo] = useState([]);\n  const [botId, setBotId] = useState('1945387060:AAFhtD9o3tJVaj_x8f3v8Ztc9iZZZGEjJds');\n  const [botName, setBotName] = useState('aqoom_bot')\n  // const [botId, setBotId] = useState('822428347:AAGXao7qTxCL5MoqQyeSqPc7opK607fA51I');\n  // const [botName, setBotName] = useState('aqoom_test_bot')\n  \n  const isLiving = getCookie(\"living\") == 'true';\n  const inConsole = getCookie('STAY_C') == 'true';\n\n  function getCookie(id) {\n    const cookies = document.cookie.split(\";\");\n    \n    for (var cookie of cookies) {\n      var parse = cookie.split(\"=\");\n      if (parse[0].trim() === id) {\n        return parse[1];\n      }\n    }\n  }\n\n  if (isValid || inConsole) {\n    return (\n      <Router basename=\"/chatmanager\" history={history}>\n        <Header botId={botId}></Header>\n        <RightDrawer_m setStatus={setStatusNav} statusNav={statusNav} setChatInfo={setChatInfo} botId={botId}></RightDrawer_m>\n        <div className=\"main_container\">\n          <LeftNav setStatus={setStatusNav} statusNav={statusNav} setChatInfo={setChatInfo} botId={botId}></LeftNav>\n          <section className=\"section_content\">\n            <Switch>\n              <Route path=\"/\" exact render={() => <Users botId={botId}></Users>}></Route>\n\n              <Route path=\"/analytics\" render={() => <Analystic botId={botId}></Analystic>}></Route>\n              <Route path=\"/members\" render={() => <Users botId={botId}></Users>}></Route>\n              <Route path=\"/messages\" render={() => <Messages botId={botId}></Messages>}></Route>\n              <Route path=\"/user\" render={() => <User botId={botId}></User>}></Route>\n              <Route path=\"/logs\" render={() => <MessageLog botId={botId}></MessageLog>}></Route>\n              <Route path=\"/interactions\" render={() => <Intereactions botId={botId}></Intereactions>}></Route>\n              <Route path=\"/antispam\" render={() => <AntiSpam botId={botId}></AntiSpam>}></Route>\n              <Route path=\"/settings\" render={() => <Settings botId={botId}></Settings>}></Route>\n            </Switch>\n          </section>\n          <div className=\"dim\"></div>\n        </div>\n      </Router>\n    );\n  } else {\n    return (\n      <Router history={history}>\n        <div className=\"App\">\n          <LandingHeader onLogin={isLiving} setValid={setIsValid}></LandingHeader>\n          <Switch>\n            <Route path=\"/\" exact render={() => <RegisterChat></RegisterChat>}></Route>\n            <Route path=\"/features\" render={() => <Features></Features>}></Route>\n            <Route path=\"/signin\" render={() => <Signin botName={botName}></Signin>}></Route>\n          </Switch>\n          <LandingFooter></LandingFooter>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'babel-polyfill';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}